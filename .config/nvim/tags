!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$VIMPRJ_ENV__PATH__LIB_1	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/.vimprj/env.vim	/^let $VIMPRJ_ENV__PATH__LIB_1    = s:sProjectPath."\/lib1"$/;"	v
$VIMPRJ_ENV__PATH__LIB_1__TAGS	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/.vimprj/env.vim	/^let $VIMPRJ_ENV__PATH__LIB_1__TAGS  = $VIMPRJ_ENV__PATH__LIB_1."\/.vimprj\/.indexer_files_tags\/lib1"$/;"	v
$VIMPRJ_ENV__PATH__LIB_2	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/.vimprj/env.vim	/^let $VIMPRJ_ENV__PATH__LIB_2    = s:sProjectPath."\/lib2"$/;"	v
$VIMPRJ_ENV__PATH__LIB_2__TAGS	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/.vimprj/env.vim	/^let $VIMPRJ_ENV__PATH__LIB_2__TAGS  = $VIMPRJ_ENV__PATH__LIB_2."\/.vimprj\/.indexer_files_tags\/lib2"$/;"	v
<2-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nnoremap <silent><buffer> <2-LeftMouse>$/;"	m
<C-2-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nnoremap <silent><buffer> <C-2-LeftMouse> <LeftMouse>:VimwikiVSplitLink<CR>$/;"	m
<C-G>S	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nmap <buffer> <C-LeftMouse> <NOP>$/;"	m
<C-S>	plugged/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-h>	init.vim	/^map <C-h> <C-w>h$/;"	m
<C-j>	init.vim	/^map <C-j> <C-w>j$/;"	m
<C-k>	init.vim	/^map <C-k> <C-w>k$/;"	m
<C-l>	init.vim	/^map <C-l> <C-w>l$/;"	m
<CR>	plugged/vimwiki/ftplugin/vimwiki.vim	/^      inoremap <silent><buffer> <CR> <C-]><Esc>:VimwikiReturn 1 5<CR>$/;"	m
<CR>	plugged/vimwiki/ftplugin/vimwiki.vim	/^      inoremap <silent><buffer> <CR> <Esc>:VimwikiReturn 1 5<CR>$/;"	m
<Leader>C	init.vim	/^nmap <Leader>C :ClangFormatAutoToggle<CR>$/;"	m
<Leader>h	init.vim	/^nnoremap <Leader>h :A<CR>$/;"	m
<Leader>ih	plugged/a.vim/plugin/a.vim	/^imap <Leader>ih <ESC>:IHS<CR>$/;"	m
<Leader>ih	plugged/a.vim/plugin/a.vim	/^nmap <Leader>ih :IHS<CR>$/;"	m
<Leader>ihn	plugged/a.vim/plugin/a.vim	/^imap <Leader>ihn <ESC>:IHN<CR>$/;"	m
<Leader>ihn	plugged/a.vim/plugin/a.vim	/^nmap <Leader>ihn :IHN<CR>$/;"	m
<Leader>is	plugged/a.vim/plugin/a.vim	/^imap <Leader>is <ESC>:IHS<CR>:A<CR>$/;"	m
<Leader>is	plugged/a.vim/plugin/a.vim	/^nmap <Leader>is :IHS<CR>:A<CR>$/;"	m
<Plug>CSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>ChangeCommentary	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==# 'c')<CR>$/;"	m
<Plug>CommentaryLine	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	plugged/vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Commentary<Plug>Commentary"<CR>$/;"	m
<Plug>Csurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>SurroundRepeat	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>Vimwiki2HTML	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <script><buffer> <Plug>Vimwiki2HTML :Vimwiki2HTML<CR>$/;"	m
<Plug>Vimwiki2HTMLBrowse	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <script><buffer> <Plug>Vimwiki2HTMLBrowse :Vimwiki2HTMLBrowse<CR>$/;"	m
<Plug>VimwikiAddHeaderLevel	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiAddHeaderLevel$/;"	m
<Plug>VimwikiDecreaseLvlSingleItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiDecreaseLvlSingleItem$/;"	m
<Plug>VimwikiDecreaseLvlSingleItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiDecreaseLvlSingleItem$/;"	m
<Plug>VimwikiDecreaseLvlWholeItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiDecreaseLvlWholeItem$/;"	m
<Plug>VimwikiDecrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiDecrementListItem$/;"	m
<Plug>VimwikiDecrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiDecrementListItem$/;"	m
<Plug>VimwikiDeleteFile	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiDeleteFile$/;"	m
<Plug>VimwikiDiaryGenerateLinks	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiDiaryGenerateLinks$/;"	m
<Plug>VimwikiDiaryIndex	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiDiaryIndex$/;"	m
<Plug>VimwikiDiaryNextDay	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiDiaryNextDay$/;"	m
<Plug>VimwikiDiaryPrevDay	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiDiaryPrevDay$/;"	m
<Plug>VimwikiFollowLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiFollowLink$/;"	m
<Plug>VimwikiGoBackLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiGoBackLink$/;"	m
<Plug>VimwikiGoToNextHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToNextHeader$/;"	m
<Plug>VimwikiGoToNextSiblingHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToNextSiblingHeader$/;"	m
<Plug>VimwikiGoToParentHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToParentHeader$/;"	m
<Plug>VimwikiGoToPrevHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToPrevHeader$/;"	m
<Plug>VimwikiGoToPrevSiblingHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiGoToPrevSiblingHeader$/;"	m
<Plug>VimwikiGoto	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiGoto$/;"	m
<Plug>VimwikiIncreaseLvlSingleItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiIncreaseLvlSingleItem$/;"	m
<Plug>VimwikiIncreaseLvlSingleItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiIncreaseLvlSingleItem$/;"	m
<Plug>VimwikiIncreaseLvlWholeItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiIncreaseLvlWholeItem$/;"	m
<Plug>VimwikiIncrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiIncrementListItem$/;"	m
<Plug>VimwikiIncrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiIncrementListItem$/;"	m
<Plug>VimwikiIndex	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiIndex$/;"	m
<Plug>VimwikiListNextSymbol	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiListNextSymbol$/;"	m
<Plug>VimwikiListO	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiListO$/;"	m
<Plug>VimwikiListPrevSymbol	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiListPrevSymbol$/;"	m
<Plug>VimwikiListToggle	plugged/vimwiki/ftplugin/vimwiki.vim	/^inoremap <silent><script><buffer> <Plug>VimwikiListToggle$/;"	m
<Plug>VimwikiListo	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiListo$/;"	m
<Plug>VimwikiMakeDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiMakeDiaryNote$/;"	m
<Plug>VimwikiMakeTomorrowDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiMakeTomorrowDiaryNote$/;"	m
<Plug>VimwikiMakeYesterdayDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiMakeYesterdayDiaryNote$/;"	m
<Plug>VimwikiNextLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiNextLink$/;"	m
<Plug>VimwikiNextTask	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiNextTask$/;"	m
<Plug>VimwikiNormalizeLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiNormalizeLink$/;"	m
<Plug>VimwikiNormalizeLinkVisual	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiNormalizeLinkVisual$/;"	m
<Plug>VimwikiNormalizeLinkVisualCR	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiNormalizeLinkVisualCR$/;"	m
<Plug>VimwikiPrevLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiPrevLink$/;"	m
<Plug>VimwikiRemoveCBInList	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiRemoveCBInList$/;"	m
<Plug>VimwikiRemoveHeaderLevel	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiRemoveHeaderLevel$/;"	m
<Plug>VimwikiRemoveSingleCB	plugged/vimwiki/ftplugin/vimwiki.vim	/^noremap <silent><script><buffer> <Plug>VimwikiRemoveSingleCB$/;"	m
<Plug>VimwikiRenameFile	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiRenameFile$/;"	m
<Plug>VimwikiRenumberAllLists	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiRenumberAllLists$/;"	m
<Plug>VimwikiRenumberList	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiRenumberList$/;"	m
<Plug>VimwikiSplitLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiSplitLink$/;"	m
<Plug>VimwikiTabIndex	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiTabIndex$/;"	m
<Plug>VimwikiTabMakeDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiTabMakeDiaryNote$/;"	m
<Plug>VimwikiTableAlignQ	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiTableAlignQ$/;"	m
<Plug>VimwikiTableAlignQ1	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiTableAlignQ1$/;"	m
<Plug>VimwikiTableAlignW	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiTableAlignW$/;"	m
<Plug>VimwikiTableAlignW1	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><buffer> <Plug>VimwikiTableAlignW1$/;"	m
<Plug>VimwikiTableMoveColumnLeft	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiTableMoveColumnLeft$/;"	m
<Plug>VimwikiTableMoveColumnRight	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiTableMoveColumnRight$/;"	m
<Plug>VimwikiTabnewLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiTabnewLink$/;"	m
<Plug>VimwikiTextObjColumn	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjColumn$/;"	m
<Plug>VimwikiTextObjColumnInner	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjColumnInner$/;"	m
<Plug>VimwikiTextObjColumnInnerV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjColumnInnerV$/;"	m
<Plug>VimwikiTextObjColumnV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjColumnV$/;"	m
<Plug>VimwikiTextObjHeader	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjHeader$/;"	m
<Plug>VimwikiTextObjHeaderContent	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjHeaderContent$/;"	m
<Plug>VimwikiTextObjHeaderContentV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjHeaderContentV$/;"	m
<Plug>VimwikiTextObjHeaderSub	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjHeaderSub$/;"	m
<Plug>VimwikiTextObjHeaderSubContent	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjHeaderSubContent$/;"	m
<Plug>VimwikiTextObjHeaderSubContentV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjHeaderSubContentV$/;"	m
<Plug>VimwikiTextObjHeaderSubV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjHeaderSubV$/;"	m
<Plug>VimwikiTextObjHeaderV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjHeaderV$/;"	m
<Plug>VimwikiTextObjListChildren	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjListChildren$/;"	m
<Plug>VimwikiTextObjListChildrenV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjListChildrenV$/;"	m
<Plug>VimwikiTextObjListSingle	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjListSingle$/;"	m
<Plug>VimwikiTextObjListSingleV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjListSingleV$/;"	m
<Plug>VimwikiTextObjTableCell	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjTableCell$/;"	m
<Plug>VimwikiTextObjTableCellInner	plugged/vimwiki/ftplugin/vimwiki.vim	/^onoremap <silent><buffer> <Plug>VimwikiTextObjTableCellInner$/;"	m
<Plug>VimwikiTextObjTableCellInnerV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjTableCellInnerV$/;"	m
<Plug>VimwikiTextObjTableCellV	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><buffer> <Plug>VimwikiTextObjTableCellV$/;"	m
<Plug>VimwikiToggleListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiToggleListItem$/;"	m
<Plug>VimwikiToggleListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiToggleListItem$/;"	m
<Plug>VimwikiToggleRejectedListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiToggleRejectedListItem$/;"	m
<Plug>VimwikiToggleRejectedListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^vnoremap <silent><script><buffer> <Plug>VimwikiToggleRejectedListItem$/;"	m
<Plug>VimwikiUISelect	plugged/vimwiki/plugin/vimwiki.vim	/^nnoremap <silent><script> <Plug>VimwikiUISelect$/;"	m
<Plug>VimwikiVSplitLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^nnoremap <silent><script><buffer> <Plug>VimwikiVSplitLink$/;"	m
<Plug>XTablineCdCurrent	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdCurrent :cd %:p:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown1	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown1   :cd %:p:h:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown2	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown2   :cd %:p:h:h:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown3	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown3   :cd %:p:h:h:h:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdHome	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdHome    :cd ~<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineNextBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineNextBuffer <SID>NextBuffer$/;"	m
<Plug>XTablinePrevBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablinePrevBuffer <SID>PrevBuffer$/;"	m
<Plug>XTablineReopen	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineReopen <SID>ReopenLastTab$/;"	m
<Plug>XTablineSelectBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineSelectBuffer <SID>SelectBuffer$/;"	m
<Plug>XTablineToggleFiltering	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleFiltering <SID>ToggleFiltering$/;"	m
<Plug>XTablineToggleTabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleTabs <SID>ToggleTabs$/;"	m
<Plug>YSsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSsurround <SID>opfunc2('setup').'_'$/;"	m
<Plug>YSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSurround  <SID>opfunc2('setup')$/;"	m
<Plug>Yssurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Yssurround '^'.v:count1.<SID>opfunc('setup').'g_'$/;"	m
<Plug>Ysurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Ysurround  <SID>opfunc('setup')$/;"	m
<RightMouse><LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nnoremap <silent><buffer> <RightMouse><LeftMouse> :VimwikiGoBackLink<CR>$/;"	m
<S-2-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nnoremap <silent><buffer> <S-2-LeftMouse> <LeftMouse>:VimwikiSplitLink<CR>$/;"	m
<S-CR>	plugged/vimwiki/ftplugin/vimwiki.vim	/^    inoremap <silent><buffer> <S-CR> <Esc>:VimwikiReturn 2 2<CR>$/;"	m
<S-LeftMouse>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  nmap <buffer> <S-LeftMouse> <NOP>$/;"	m
<S-Tab>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  inoremap <expr><buffer> <S-Tab> vimwiki#tbl#kbd_shift_tab()$/;"	m
<SID>NextBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>NextBuffer airline#extensions#tabline#xtabline#next_buffer(v:count1)$/;"	m
<SID>PrevBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>PrevBuffer airline#extensions#tabline#xtabline#prev_buffer(v:count1)$/;"	m
<SID>ReopenLastTab	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ReopenLastTab :XTabReopen<cr>$/;"	m
<SID>SelectBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>SelectBuffer g:xtabline_changing_buffer ? "\\<C-c>" : ":<C-u>call airline#extensions#tabline#xtabline#select_buffer(v:count)\\<cr>"$/;"	m
<SID>ToggleFiltering	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleFiltering :call airline#extensions#tabline#xtabline#toggle_buffers()<cr>$/;"	m
<SID>ToggleTabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleTabs :call airline#extensions#tabline#xtabline#toggle_tabs()<cr>$/;"	m
<Tab>	plugged/vimwiki/ftplugin/vimwiki.vim	/^  inoremap <expr><buffer> <Tab> vimwiki#tbl#kbd_tab()$/;"	m
<leader><leader>d	init.vim	/^imap <leader><leader>d <esc>:call ToggleDeadKeys()<CR>a$/;"	m
<leader><leader>d	init.vim	/^nm <leader><leader>d :call ToggleDeadKeys()<CR>$/;"	m
<leader><leader>i	init.vim	/^imap <leader><leader>i <esc>:call ToggleIPA()<CR>a$/;"	m
<leader><leader>i	init.vim	/^nm <leader><leader>i :call ToggleIPA()<CR>$/;"	m
<leader><leader>q	init.vim	/^nm <leader><leader>q :call ToggleProse()<CR>$/;"	m
<leader>c	init.vim	/^map <leader>c :w! \\| !compiler "<c-r>%"<CR>$/;"	m
<leader>cd2	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd2 <Plug>XTablineCdDown2$/;"	m
<leader>cd3	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd3 <Plug>XTablineCdDown3$/;"	m
<leader>cdc	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdc <Plug>XTablineCdCurrent$/;"	m
<leader>cdd	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdd <Plug>XTablineCdDown1$/;"	m
<leader>cdh	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdh <Plug>XTablineCdHome$/;"	m
<leader>f	init.vim	/^map <leader>f :Goyo \\| set bg=light \\| set linebreak<CR>$/;"	m
<leader>h	init.vim	/^nnoremap <leader>h :call ToggleHiddenAll()<CR>$/;"	m
<leader>n	init.vim	/^map <leader>n :NERDTreeToggle<CR>$/;"	m
<leader>o	init.vim	/^map <leader>o :setlocal spell! spelllang=en_us<CR>$/;"	m
<leader>p	init.vim	/^map <leader>p :!opout <c-r>%<CR><CR>$/;"	m
<leader>v	init.vim	/^map <leader>v :VimwikiIndex$/;"	m
<plug>(goyo-resize)	plugged/goyo.vim/autoload/goyo.vim	/^nnoremap <silent> <plug>(goyo-resize) :<c-u>call <sid>resize_pads()<cr>$/;"	m
A	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang A call AlternateFile("n<bang>", <f-args>)$/;"	c
AN	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang AN call NextAlternate("<bang>")$/;"	c
AS	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang AS call AlternateFile("h<bang>", <f-args>)$/;"	c
AT	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang AT call AlternateFile("t<bang>", <f-args>)$/;"	c
AV	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang AV call AlternateFile("v<bang>", <f-args>)$/;"	c
AddAlternateExtensionMapping	plugged/a.vim/plugin/a.vim	/^function! <SID>AddAlternateExtensionMapping(extension, alternates)$/;"	f
AddNewAsyncTask	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>AddNewAsyncTask(dParams)$/;"	f
AddNewProjectToCurFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>AddNewProjectToCurFile(sProjFileKey, sProjName, iFileNum)$/;"	f
AddNewVimprjRoot	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>AddNewVimprjRoot(sVimprjKey, lPaths, sCdPath)$/;"	f
AirlineExtensions	plugged/vim-airline/plugin/airline.vim	/^command! AirlineExtensions   call s:airline_extensions()$/;"	c
AirlineRefresh	plugged/vim-airline/plugin/airline.vim	/^command! -bar -bang AirlineRefresh call s:airline_refresh(<q-bang>)$/;"	c
AirlineTheme	plugged/vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airline_theme(<f-args>)$/;"	c
AirlineToggle	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle  call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AlternateFile	plugged/a.vim/plugin/a.vim	/^function! AlternateFile(splitWindow, ...)$/;"	f
AlternateOpenFileUnderCursor	plugged/a.vim/plugin/a.vim	/^function! AlternateOpenFileUnderCursor(splitWindow,...)$/;"	f
AlternateOpenNextFile	plugged/a.vim/plugin/a.vim	/^function! AlternateOpenNextFile(bang)$/;"	f
BaseCalss	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^class BaseCalss:$/;"	c	file:
Bookmark.AddBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.CompareBookmarksByName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
Bookmark.Edit	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
Bookmark.GetNodeForName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.SortBookmarksList	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
Bookmark.ToRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.delete	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BufferOrFileExists	plugged/a.vim/plugin/a.vim	/^function! <SID>BufferOrFileExists(fileName)$/;"	f
CR	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! s:CR(normal, just_mrkr) abort$/;"	f
Cd_test	plugged/vimagit/test/utils.vim	/^function! Cd_test()$/;"	f
Cd_test_sub	plugged/vimagit/test/utils.vim	/^function! Cd_test_sub()$/;"	f
Cd_vimagit	plugged/vimagit/test/utils.vim	/^function! Cd_vimagit()$/;"	f
ChangeDirToVimprj	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>ChangeDirToVimprj(sPath)$/;"	f
CheckCompatibility	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>CheckCompatibility(sCurPluginName, sDepPluginName, sDepPluginVerVar, iDepPluginNeededVer)$/;"	f
CheckCompatibility	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>CheckCompatibility(sCurPluginName, sDepPluginName, sDepPluginVerVar, iDepPluginNeededVer)$/;"	f
CheckDefined	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:CheckDefined(colors) abort$/;"	f
Chomp	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! Chomp(s) abort$/;"	f
ChompHead	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! ChompHead(s) abort$/;"	f
ClangFormat	plugged/vim-clang-format/plugin/clang_format.vim	/^command! -range=% -nargs=0 ClangFormat call clang_format#replace(<line1>, <line2>)$/;"	c
ClangFormat	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! ClangFormat(line1, line2, ...) abort$/;"	f
ClangFormatAutoDisable	plugged/vim-clang-format/plugin/clang_format.vim	/^command! ClangFormatAutoDisable call clang_format#disable_auto_format()$/;"	c
ClangFormatAutoEnable	plugged/vim-clang-format/plugin/clang_format.vim	/^command! ClangFormatAutoEnable call clang_format#enable_auto_format()$/;"	c
ClangFormatAutoToggle	plugged/vim-clang-format/plugin/clang_format.vim	/^command! ClangFormatAutoToggle call clang_format#toggle_auto_format()$/;"	c
ClangFormatEchoFormattedCode	plugged/vim-clang-format/plugin/clang_format.vim	/^command! -range=% -nargs=0 ClangFormatEchoFormattedCode echo clang_format#format(<line1>, <line2>)$/;"	c
Class	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^    Class(T val, typename std::enable_if<std::is_floating_point<T>::value, T>::type* = 0)$/;"	f	class:Class
Class	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^    Class(int val): value(val) {$/;"	f	class:Class	file:
Class	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^class Class {$/;"	c	file:
Commentary	plugged/vim-commentary/plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
Complete_wikifiles	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! Complete_wikifiles(findstart, base) abort$/;"	f
CreateDefaultProjectIfNotAlready	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>CreateDefaultProjectIfNotAlready()$/;"	f
CreateTabTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
Creator.BufNamePrefix	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
Cursor_position	plugged/vimagit/test/utils.vim	/^function! Cursor_position()$/;"	f
DeadKeys	plugged/vimling/plugin/deadkeys.vim	/^function! DeadKeys()$/;"	f
DeadKeysOff	plugged/vimling/plugin/deadkeys.vim	/^function! DeadKeysOff()$/;"	f
DeleteFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>DeleteFile(filename)$/;"	f
DetermineExtension	plugged/a.vim/plugin/a.vim	/^function! DetermineExtension(path) $/;"	f
Do	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:Do(action)$/;"	f
EnumerateFilesByExtension	plugged/a.vim/plugin/a.vim	/^function! EnumerateFilesByExtension(path, baseName, extension)$/;"	f
EnumerateFilesByExtensionInPath	plugged/a.vim/plugin/a.vim	/^function! EnumerateFilesByExtensionInPath(baseName, extension, pathList, relPathBase)$/;"	f
EqualFilePaths	plugged/a.vim/plugin/a.vim	/^function! <SID>EqualFilePaths(path1, path2)$/;"	f
Event.New	plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
ExcludeOther	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludeOther(nr, exclude_preview)$/;"	f
ExcludePaths	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludePaths(nr, exclude_paths)$/;"	f
ExecCtags	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>ExecCtags(dParams)$/;"	f
ExecCtagsForListOfFiles	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>ExecCtagsForListOfFiles(dParams)$/;"	f
ExecHooks	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>ExecHooks(sHooksgroup, dParams)$/;"	f
ExecSed	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>ExecSed(dParams)$/;"	f
ExpandAllWildcards	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>ExpandAllWildcards(dProject)$/;"	f
ExpandAlternatePath	plugged/a.vim/plugin/a.vim	/^function! <SID>ExpandAlternatePath(pathSpec, sfPath) $/;"	f
Expect_diff	plugged/vimagit/test/utils.vim	/^function! Expect_diff(gold_file, test_diff)$/;"	f
FindFileInSearchPath	plugged/a.vim/plugin/a.vim	/^function! <SID>FindFileInSearchPath(fileName, pathList, relPathBase)$/;"	f
FindFileInSearchPathEx	plugged/a.vim/plugin/a.vim	/^function! <SID>FindFileInSearchPathEx(fileName, pathList, relPathBase, count)$/;"	f
FindOrCreateBuffer	plugged/a.vim/plugin/a.vim	/^function! <SID>FindOrCreateBuffer(fileName, doSplit, findSimilar)$/;"	f
FindParentVCSRoot	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
FlagSet.New	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FocusGainedHandler	plugged/vim-airline/plugin/airline.vim	/^function! s:FocusGainedHandler(timer)$/;"	f
Function	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^void Class::Function(double variable) {$/;"	f	class:Class
GenerateFilelist	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>GenerateFilelist(dProject, sFilelistFile)$/;"	f
GetBuffer	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! GetBuffer() abort$/;"	f
GetCtagsCommand	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>GetCtagsCommand(dParams)$/;"	f
GetDirsAndFilesFromIndexerFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>GetDirsAndFilesFromIndexerFile(indexerFile, dIndexerParams)$/;"	f
GetDirsAndFilesFromIndexerList	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>GetDirsAndFilesFromIndexerList(aLines, indexerFile, dExistsResult, dIndexerParams)$/;"	f
GetDirsAndFilesFromProjectFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>GetDirsAndFilesFromProjectFile(projectFile, dIndexerParams)$/;"	f
GetHiCmd	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:GetHiCmd(list) abort$/;"	f
GetNthItemFromList	plugged/a.vim/plugin/a.vim	/^function! <SID>GetNthItemFromList(list, n) $/;"	f
GetVersionString	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>GetVersionString(iVersion)$/;"	f
GetVersionString	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>GetVersionString(iVersion)$/;"	f
GetVimprjRootOfFile	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>GetVimprjRootOfFile(iFileNum)$/;"	f
Get_filename	plugged/vimagit/test/utils.vim	/^function! Get_filename(...)$/;"	f
Get_safe_filename	plugged/vimagit/test/utils.vim	/^function! Get_safe_filename(...)$/;"	f
Git_add_quotes	plugged/vimagit/test/utils.vim	/^function! Git_add_quotes(filename)$/;"	f
Git_cmd	plugged/vimagit/test/utils.vim	/^function! Git_cmd(...)$/;"	f
Git_commit_msg	plugged/vimagit/test/utils.vim	/^function! Git_commit_msg(sha1)$/;"	f
Git_diff	plugged/vimagit/test/utils.vim	/^function! Git_diff(state, ...)$/;"	f
Git_status	plugged/vimagit/test/utils.vim	/^function! Git_status(file)$/;"	f
Git_verbose_log	plugged/vimagit/test/utils.vim	/^function! Git_verbose_log(...)$/;"	f
Goyo	plugged/goyo.vim/plugin/goyo.vim	/^command! -nargs=? -bar -bang Goyo call goyo#execute(<bang>0, <q-args>)$/;"	c
GruvboxHlsHideCursor	plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsHideCursor()$/;"	f
GruvboxHlsShowCursor	plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsShowCursor()$/;"	f
HL	plugged/gruvbox/colors/gruvbox.vim	/^function! s:HL(group, fg, ...)$/;"	f
HiLink	plugged/indexer.tar.gz/syntax/indexer_files.vim	/^      command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/indexer.tar.gz/syntax/indexer_files.vim	/^      command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-cpp-enhanced-highlight/after/syntax/cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-cpp-enhanced-highlight/after/syntax/cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
IH	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IH call AlternateOpenFileUnderCursor("n<bang>", <f-args>)$/;"	c
IHN	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IHN call AlternateOpenNextFile("<bang>")$/;"	c
IHS	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IHS call AlternateOpenFileUnderCursor("h<bang>", <f-args>)$/;"	c
IHT	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IHT call AlternateOpenFileUnderCursor("t<bang>", <f-args>)$/;"	c
IHV	plugged/a.vim/plugin/a.vim	/^comm! -nargs=? -bang IHV call AlternateOpenFileUnderCursor("v<bang>", <f-args>)$/;"	c
IPA	plugged/vimling/plugin/ipa.vim	/^function! IPA()$/;"	f
IPAOff	plugged/vimling/plugin/ipa.vim	/^function! IPAOff()$/;"	f
IndexerAsyncCommand	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>IndexerAsyncCommand(command, vim_func)$/;"	f
IndexerAsync_Impl	plugged/indexer.tar.gz/plugin/indexer.vim	/^   function! <SID>IndexerAsync_Impl(tool_cmd, vim_cmd)$/;"	f
IndexerDebugInfo	plugged/indexer.tar.gz/plugin/indexer.vim	/^   command -nargs=? -complete=file IndexerDebugInfo call <SID>IndexerDebugInfo()$/;"	c
IndexerDebugInfo	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>IndexerDebugInfo()$/;"	f
IndexerDebugLog	plugged/indexer.tar.gz/plugin/indexer.vim	/^   command -nargs=? -complete=file IndexerDebugLog call <SID>IndexerDebugLog()$/;"	c
IndexerDebugLog	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>IndexerDebugLog()$/;"	f
IndexerDebugSave	plugged/indexer.tar.gz/plugin/indexer.vim	/^   command -nargs=? -complete=file IndexerDebugSave call <SID>IndexerDebugSave()$/;"	c
IndexerDebugSave	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>IndexerDebugSave()$/;"	f
IndexerFiles	plugged/indexer.tar.gz/plugin/indexer.vim	/^   command -nargs=? -complete=file IndexerFiles call <SID>IndexerFilesList()$/;"	c
IndexerFilesList	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>IndexerFilesList()$/;"	f
IndexerGetCtagsName	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>IndexerGetCtagsName()$/;"	f
IndexerGetCtagsVersion	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>IndexerGetCtagsVersion()$/;"	f
IndexerInfo	plugged/indexer.tar.gz/plugin/indexer.vim	/^   command -nargs=? -complete=file IndexerInfo call <SID>IndexerInfo()$/;"	c
IndexerInfo	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>IndexerInfo()$/;"	f
IndexerRebuild	plugged/indexer.tar.gz/plugin/indexer.vim	/^   command -nargs=? -complete=file IndexerRebuild call <SID>UpdateTagsForFile(bufnr('%'), {'full_rebuild': 1, 'ignore_dontUpdateTagsIfFileExists_option' : 1})$/;"	c
Indexer_DetectCtags	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>Indexer_DetectCtags()$/;"	f
Indexer_OnAsyncCommandComplete	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! Indexer_OnAsyncCommandComplete(temp_file_name)$/;"	f
Indexer_ParseCommandOutput	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>Indexer_ParseCommandOutput(sOutput)$/;"	f
InitCwds	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:InitCwds()$/;"	f
IsBufSwitched	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>IsBufSwitched()$/;"	f
IsFileAccountTaken	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>IsFileAccountTaken(iFileNum)$/;"	f
Is_crafting	plugged/vimagit/test/utils.vim	/^function! Is_crafting()$/;"	f
KeyMap.Add	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Compare	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
KeyMap.Create	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
Magit	plugged/vimagit/plugin/magit.vim	/^command! Magit call magit#show_magit('v')$/;"	c
MagitOnly	plugged/vimagit/plugin/magit.vim	/^command! MagitOnly call magit#show_magit('c')$/;"	c
MenuController.New	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.isMinimal	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
MenuController.showMenu	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
ModifierFlags	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! s:ModifierFlags()$/;"	f
Move_relative	plugged/vimagit/test/utils.vim	/^function! Move_relative(nb_lines)$/;"	f
MyAppend1	plugged/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	plugged/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyFuncref	plugged/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	plugged/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
NERDTree	plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CursorToBookmarkTable	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin(...)$/;"	f
NERDTree.ExistsForBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTree.setPreviousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
NERDTreeAddKeyMap	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeBookmarksFile	init.vim	/^	let NERDTreeBookmarksFile = '~\/.vim' . '\/NERDTreeBookmarks'$/;"	v
NERDTreeBookmarksFile	init.vim	/^	let NERDTreeBookmarksFile = stdpath('data') . '\/NERDTreeBookmarks'$/;"	v
NERDTreeCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirOnTabSwitch	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeChDirOnTabSwitch$/;"	a
NERDTreeCopyNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeExecuteFileWindows	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileWindows()$/;"	f
NERDTreeFocus	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeSystemCommand	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeSystemCommand()$/;"	f
NERDTreeToggleVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeToggleVCS :call <SID>ToggleTabTreeVCS('<args>')$/;"	c
NERDTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NeedSkipBuffer	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>NeedSkipBuffer(iFileNum)$/;"	f
NextAlternate	plugged/a.vim/plugin/a.vim	/^function! NextAlternate(bang)$/;"	f
NotEnoughBuffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:NotEnoughBuffers()$/;"	f
Notifier.AddListener	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
OnBufEnter	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>OnBufEnter(iFileNum)$/;"	f
OnBufSave	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>OnBufSave()$/;"	f
OnFileOpen	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>OnFileOpen(iFileNum)$/;"	f
Opener.New	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
ParseNewVimprjRoot	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>ParseNewVimprjRoot(lProjectRoots)$/;"	f
ParseProjectSettingsFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>ParseProjectSettingsFile(sProjFileKey)$/;"	f
Path.AbsolutePathFor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
Path.CopyingSupported	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
Path.Resolve	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.WinToUnixPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._splitChunks	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
Path._str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.addDelimiter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
Path.bookmarkNames	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.copy	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(child)$/;"	f
Path.isHiddenUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
Path.isUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(parent)$/;"	f
Path.isUnixHiddenFile	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
Prose	plugged/vimling/plugin/prose.vim	/^function! Prose()$/;"	f
ProseOff	plugged/vimling/plugin/prose.vim	/^function! ProseOff()$/;"	f
RaisesException	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! RaisesException(cmd) abort$/;"	f
RefreshTabline	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:RefreshTabline()$/;"	f
RenameFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>RenameFile(filename_old, filename_new)$/;"	f
SID	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:SID() abort$/;"	f
S_TestStruct1	plugged/indexer.tar.gz/doc/examples/blank/some_folder_1/some_header.h	/^typedef struct S_TestStruct1 {$/;"	s
S_TestStruct1	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/some_folder_1/some_file.h	/^typedef struct S_TestStruct1 {$/;"	s
S_TestStruct1	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/some_folder_1/some_header.h	/^typedef struct S_TestStruct1 {$/;"	s
Search_file	plugged/vimagit/test/utils.vim	/^function! Search_file(mode, ...)$/;"	f
Search_pattern	plugged/vimagit/test/utils.vim	/^function! Search_pattern(pattern)$/;"	f
SectionSpec	plugged/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
SetCurrentFile	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>SetCurrentFile(iFileNum)$/;"	f
SetDefault	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! s:SetDefault(var, val)$/;"	f
SetTagsAndPath	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>SetTagsAndPath(iFileNum, sVimprjKey)$/;"	f
SourceVimprjFiles	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>SourceVimprjFiles(sPath)$/;"	f
TEST_CPP_FOR_OPERATOR_CLANG_FORMAT_LONG_MACRO	plugged/vim-clang-format/test/t/test.cpp	/^#define TEST_CPP_FOR_OPERATOR_CLANG_FORMAT_LONG_MACRO /;"	d	file:
T_TestStruct1	plugged/indexer.tar.gz/doc/examples/blank/some_folder_1/some_header.h	/^} T_TestStruct1;$/;"	t	typeref:struct:S_TestStruct1
T_TestStruct1	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/some_folder_1/some_file.h	/^} T_TestStruct1;$/;"	t	typeref:struct:S_TestStruct1
T_TestStruct1	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/some_folder_1/some_header.h	/^} T_TestStruct1;$/;"	t	typeref:struct:S_TestStruct1
TabBuffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:TabBuffers()$/;"	f
TakeAccountOfFile	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>TakeAccountOfFile(iFileNum, sVimprjKey)$/;"	f
ToggleDeadKeys	plugged/vimling/plugin/deadkeys.vim	/^function! ToggleDeadKeys()$/;"	f
ToggleHiddenAll	init.vim	/^function! ToggleHiddenAll()$/;"	f
ToggleIPA	plugged/vimling/plugin/ipa.vim	/^function! ToggleIPA()$/;"	f
ToggleProse	plugged/vimling/plugin/prose.vim	/^function! ToggleProse()$/;"	f
ToggleTabTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:ToggleTabTreeVCS(name)$/;"	f
TreeDirNode.AbsoluteTreeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._glob	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
TreeDirNode._initChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode.activate	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getCascadeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
TreeDirNode.getChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findSibling	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
TreeFileNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
UI.IndentWid	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
UI.centerView	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
UI.getPath	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UpdateTagsForEveryNeededProjectFromFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>UpdateTagsForEveryNeededProjectFromFile(sProjFileKey)$/;"	f
UpdateTagsForFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>UpdateTagsForFile(iFileNum, dParams)$/;"	f
UpdateTagsForProject	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>UpdateTagsForProject(sProjFileKey, sProjName, sSavedFile, dIndexerParams)$/;"	f
Util1	plugged/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	plugged/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	plugged/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
VWB	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=0 VWB call vimwiki#base#backlinks()$/;"	c
VWS	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VWS call vimwiki#base#search(<q-args>)$/;"	c
VimprjInfo	plugged/vimprj/plugin/vimprj.vim	/^      command -nargs=? -complete=file VimprjInfo call vimprj#info()$/;"	c
Vimwiki2HTML	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer Vimwiki2HTML$/;"	c
Vimwiki2HTMLBrowse	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer Vimwiki2HTMLBrowse$/;"	c
VimwikiAll2HTML	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -bang VimwikiAll2HTML$/;"	c
VimwikiBacklinks	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=0 VimwikiBacklinks call vimwiki#base#backlinks()$/;"	c
VimwikiCatUrl	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiCatUrl call vimwiki#html#CatUrl(expand('%:p'))$/;"	c
VimwikiChangeSymbolInListTo	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=1 VimwikiChangeSymbolInListTo$/;"	c
VimwikiChangeSymbolTo	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range -nargs=1 VimwikiChangeSymbolTo$/;"	c
VimwikiCheckLinks	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiCheckLinks call vimwiki#base#check_links()$/;"	c
VimwikiDecrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiDecrementListItem call vimwiki#lst#decrement_cb(<line1>, <line2>)$/;"	c
VimwikiDeleteFile	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiDeleteFile call vimwiki#base#delete_link()$/;"	c
VimwikiDeleteLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiDeleteLink$/;"	c
VimwikiDiaryGenerateLinks	plugged/vimwiki/plugin/vimwiki.vim	/^command! VimwikiDiaryGenerateLinks$/;"	c
VimwikiDiaryIndex	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiDiaryIndex$/;"	c
VimwikiDiaryNextDay	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiDiaryNextDay call vimwiki#diary#goto_next_day()$/;"	c
VimwikiDiaryPrevDay	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiDiaryPrevDay call vimwiki#diary#goto_prev_day()$/;"	c
VimwikiFoldLevel	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! VimwikiFoldLevel(lnum) abort$/;"	f
VimwikiFoldListLevel	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! VimwikiFoldListLevel(lnum) abort$/;"	f
VimwikiFoldText	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! VimwikiFoldText() abort$/;"	f
VimwikiFollowLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiFollowLink call vimwiki#base#follow_link('nosplit', 0, 1)$/;"	c
VimwikiGenerateLinks	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=? VimwikiGenerateLinks call vimwiki#base#generate_links(1, <f-args>)$/;"	c
VimwikiGenerateTagLinks	plugged/vimwiki/ftplugin/vimwiki.vim	/^      \\ VimwikiGenerateTagLinks call vimwiki#tags#generate_tags(1, <f-args>)$/;"	c
VimwikiGenerateTags	plugged/vimwiki/ftplugin/vimwiki.vim	/^      \\ VimwikiGenerateTags$/;"	c
VimwikiGoBackLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiGoBackLink call vimwiki#base#go_back_link()$/;"	c
VimwikiGoto	plugged/vimwiki/ftplugin/vimwiki.vim	/^      \\ VimwikiGoto call vimwiki#base#goto(<f-args>)$/;"	c
VimwikiIncrementListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiIncrementListItem call vimwiki#lst#increment_cb(<line1>, <line2>)$/;"	c
VimwikiIndex	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiIndex$/;"	c
VimwikiLinkConverter	plugged/vimwiki/plugin/vimwiki.vim	/^  function VimwikiLinkConverter(url, source, target)$/;"	f
VimwikiLinkHandler	plugged/vimwiki/plugin/vimwiki.vim	/^  function VimwikiLinkHandler(url)$/;"	f
VimwikiListChangeLvl	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range -nargs=+ VimwikiListChangeLvl$/;"	c
VimwikiListChangeSymbolI	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range -nargs=1 VimwikiListChangeSymbolI$/;"	c
VimwikiListToggle	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiListToggle call vimwiki#lst#toggle_list_item()$/;"	c
VimwikiMakeDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiMakeDiaryNote$/;"	c
VimwikiMakeTomorrowDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiMakeTomorrowDiaryNote$/;"	c
VimwikiMakeYesterdayDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiMakeYesterdayDiaryNote$/;"	c
VimwikiNextLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiNextLink call vimwiki#base#find_next_link()$/;"	c
VimwikiNextTask	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiNextTask call vimwiki#base#find_next_task()$/;"	c
VimwikiNormalizeLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=? VimwikiNormalizeLink call vimwiki#base#normalize_link(<f-args>)$/;"	c
VimwikiPasteUrl	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiPasteUrl call vimwiki#html#PasteUrl(expand('%:p'))$/;"	c
VimwikiPrevLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiPrevLink call vimwiki#base#find_prev_link()$/;"	c
VimwikiRebuildTags	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -bang VimwikiRebuildTags call vimwiki#tags#update_tags(1, '<bang>')$/;"	c
VimwikiRemoveCBInList	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRemoveCBInList call vimwiki#lst#remove_cb_in_list()$/;"	c
VimwikiRemoveSingleCB	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiRemoveSingleCB call vimwiki#lst#remove_cb(<line1>, <line2>)$/;"	c
VimwikiRenameFile	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRenameFile call vimwiki#base#rename_link()$/;"	c
VimwikiRenameLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRenameLink$/;"	c
VimwikiRenumberAllLists	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRenumberAllLists call vimwiki#lst#adjust_whole_buffer()$/;"	c
VimwikiRenumberList	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiRenumberList call vimwiki#lst#adjust_numbered_list()$/;"	c
VimwikiReturn	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=+ VimwikiReturn call <SID>CR(<f-args>)$/;"	c
VimwikiSearch	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VimwikiSearch call vimwiki#base#search(<q-args>)$/;"	c
VimwikiSearchTags	plugged/vimwiki/ftplugin/vimwiki.vim	/^      \\ VimwikiSearchTags VimwikiSearch \/:<args>:\/$/;"	c
VimwikiShowVersion	plugged/vimwiki/plugin/vimwiki.vim	/^command! VimwikiShowVersion call s:get_version()$/;"	c
VimwikiSplitLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VimwikiSplitLink call vimwiki#base#follow_link('hsplit', <f-args>)$/;"	c
VimwikiTOC	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiTOC call vimwiki#base#table_of_contents(1)$/;"	c
VimwikiTabIndex	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiTabIndex$/;"	c
VimwikiTabMakeDiaryNote	plugged/vimwiki/plugin/vimwiki.vim	/^command! -count=0 VimwikiTabMakeDiaryNote$/;"	c
VimwikiTable	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VimwikiTable call vimwiki#tbl#create(<f-args>)$/;"	c
VimwikiTableAlignQ	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=? VimwikiTableAlignQ call vimwiki#tbl#align_or_cmd('gqq', <f-args>)$/;"	c
VimwikiTableAlignW	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=? VimwikiTableAlignW call vimwiki#tbl#align_or_cmd('gww', <f-args>)$/;"	c
VimwikiTableMoveColumnLeft	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiTableMoveColumnLeft call vimwiki#tbl#move_column_left()$/;"	c
VimwikiTableMoveColumnRight	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiTableMoveColumnRight call vimwiki#tbl#move_column_right()$/;"	c
VimwikiTabnewLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer VimwikiTabnewLink call vimwiki#base#follow_link('tab', 0, 1)$/;"	c
VimwikiToggleListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiToggleListItem call vimwiki#lst#toggle_cb(<line1>, <line2>)$/;"	c
VimwikiToggleRejectedListItem	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -range VimwikiToggleRejectedListItem$/;"	c
VimwikiUISelect	plugged/vimwiki/plugin/vimwiki.vim	/^command! VimwikiUISelect call vimwiki#base#ui_select()$/;"	c
VimwikiVSplitLink	plugged/vimwiki/ftplugin/vimwiki.vim	/^command! -buffer -nargs=* VimwikiVSplitLink call vimwiki#base#follow_link('vsplit', <f-args>)$/;"	c
VimwikiWikiIncludeHandler	plugged/vimwiki/plugin/vimwiki.vim	/^  function! VimwikiWikiIncludeHandler(value)$/;"	f
VjjV	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            normal! VjjV$/;"	m
X	colors/jellybeans.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
_AddToDebugLog	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>_AddToDebugLog(iLevel, sType, dData)$/;"	f
_AddToDebugLog	plugged/vimprj/autoload/vimprj.vim	/^function! <SID>_AddToDebugLog(iLevel, sType, dData)$/;"	f
_AsyncDummyComplete	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>_AsyncDummyComplete()$/;"	f
_EchoLogItem	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>_EchoLogItem(dLogItem)$/;"	f
_ExecNextAsyncTask	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>_ExecNextAsyncTask()$/;"	f
_GetBackgroundComment	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>_GetBackgroundComment()$/;"	f
_IsBackgroundEnabled	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>_IsBackgroundEnabled()$/;"	f
_UseDirsInsteadOfFiles	plugged/indexer.tar.gz/plugin/indexer.vim	/^function! <SID>_UseDirsInsteadOfFiles(dVimprjRoot)$/;"	f
a	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^    return b > a;$/;"	v
aClass	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^Aclass<T> aClass = bClass->getThing();$/;"	v	typeref:class:BaseCalss
activateAll	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll() abort$/;"	f
activateBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm) abort$/;"	f
activateDirNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...) abort$/;"	f
activateFileNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node) abort$/;"	f
actual	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let actual = GetBuffer()$/;"	v
add_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
add_target_syntax_OFF	plugged/vimwiki/syntax/vimwiki.vim	/^function! s:add_target_syntax_OFF(target) abort$/;"	f
add_target_syntax_OFF	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:add_target_syntax_OFF(target, type) abort$/;"	f
add_target_syntax_ON	plugged/vimwiki/syntax/vimwiki.vim	/^function! s:add_target_syntax_ON(target, type) abort$/;"	f
add_target_syntax_ON	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:add_target_syntax_ON(target, type) abort$/;"	f
adjust_items_recursively	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:adjust_items_recursively(parent) abort$/;"	f
adjust_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:adjust_mrkr(item) abort$/;"	f
adjust_numbered_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:adjust_numbered_list(item, ignore_kind, recursive) abort$/;"	f
adjust_numbered_list_below	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:adjust_numbered_list_below(item, recursive) abort$/;"	f
airline	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^augroup airline#extensions#cursormode$/;"	a
airline#add_inactive_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#async#get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_mq_async(cmd, file)$/;"	f
airline#async#get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_msgfmt_stat(cmd, file)$/;"	f
airline#async#mq_output	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#mq_output(buf, file)$/;"	f
airline#async#nvim_get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_mq_async(cmd, file)$/;"	f
airline#async#nvim_get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_msgfmt_stat(cmd, file)$/;"	f
airline#async#nvim_vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#nvim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#nvim_vcs_untracked(cfg, file, vcs)$/;"	f
airline#async#vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_untracked(config, file, vcs)$/;"	f
airline#async#vim7_vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vim7_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_untracked(config, file)$/;"	f
airline#builder#get_next_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_next_group(sections, i)$/;"	f
airline#builder#get_prev_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_prev_group(sections, i)$/;"	f
airline#builder#new	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#builder#should_change_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#should_change_group(group1, group2)$/;"	f
airline#check_mode	plugged/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	plugged/vim-airline/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#extensions#ale#get	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get(type)$/;"	f
airline#extensions#ale#get_error	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_error()$/;"	f
airline#extensions#ale#get_warning	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warning()$/;"	f
airline#extensions#ale#init	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
airline#extensions#append_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#battery#init	plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#init(ext) abort$/;"	f
airline#extensions#battery#status	plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#status(...) abort$/;"	f
airline#extensions#bookmark#currentbookmark	plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#currentbookmark() abort$/;"	f
airline#extensions#bookmark#init	plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#init(ext) abort$/;"	f
airline#extensions#branch#get_head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#branch#update_untracked_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#update_untracked_config(file, vcs)$/;"	f
airline#extensions#bufferline#init	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#coc#get	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get(type) abort$/;"	f
airline#extensions#coc#get_current_function	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_current_function() abort$/;"	f
airline#extensions#coc#get_error	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_error() abort$/;"	f
airline#extensions#coc#get_status	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_status() abort$/;"	f
airline#extensions#coc#get_warning	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_warning() abort$/;"	f
airline#extensions#coc#init	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#init(ext) abort$/;"	f
airline#extensions#commandt#apply	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext) abort$/;"	f
airline#extensions#ctrlspace#statusline	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...) abort$/;"	f
airline#extensions#cursormode#activate	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#activate()$/;"	f
airline#extensions#cursormode#apply	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#apply(...)$/;"	f
airline#extensions#cursormode#init	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#init(ext)$/;"	f
airline#extensions#cursormode#set	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#set(...)$/;"	f
airline#extensions#cursormode#tmux_escape	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#tmux_escape(escape)$/;"	f
airline#extensions#default#apply	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#denite#apply	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#apply(...) abort$/;"	f
airline#extensions#denite#check_denite_mode	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#check_denite_mode(bufnr) abort$/;"	f
airline#extensions#denite#init	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#init(ext) abort$/;"	f
airline#extensions#dirvish#apply	plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#apply(...) abort$/;"	f
airline#extensions#dirvish#init	plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#init(ext) abort$/;"	f
airline#extensions#eclim#creat_line	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#fern#apply	plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#apply(...) abort$/;"	f
airline#extensions#fern#init	plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#init(ext) abort$/;"	f
airline#extensions#fugitiveline#bufname	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#bufname()$/;"	f
airline#extensions#fugitiveline#init	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#init(ext)$/;"	f
airline#extensions#fzf#apply	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#apply(...) abort$/;"	f
airline#extensions#fzf#inactive_apply	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#inactive_apply(...) abort$/;"	f
airline#extensions#fzf#init	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#init(ext) abort$/;"	f
airline#extensions#fzf#statusline	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#statusline(...) abort$/;"	f
airline#extensions#gen_tags#init	plugged/vim-airline/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#init(ext) abort$/;"	f
airline#extensions#gen_tags#status	plugged/vim-airline/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#status(...) abort$/;"	f
airline#extensions#get_loaded_extensions	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#get_loaded_extensions()$/;"	f
airline#extensions#gina#apply	plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#apply(...) abort$/;"	f
airline#extensions#gina#init	plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#init(ext) abort$/;"	f
airline#extensions#grepper#init	plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#init(ext)$/;"	f
airline#extensions#grepper#status	plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#status()$/;"	f
airline#extensions#gutentags#init	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#init(ext)$/;"	f
airline#extensions#gutentags#status	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#status()$/;"	f
airline#extensions#hunks#get_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks() abort$/;"	f
airline#extensions#hunks#get_raw_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_raw_hunks() abort$/;"	f
airline#extensions#hunks#init	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext) abort$/;"	f
airline#extensions#keymap#init	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#init(ext)$/;"	f
airline#extensions#keymap#status	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#status()$/;"	f
airline#extensions#languageclient#get	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get(type)$/;"	f
airline#extensions#languageclient#get_error	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_error()$/;"	f
airline#extensions#languageclient#get_warning	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_warning()$/;"	f
airline#extensions#languageclient#init	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#init(ext)$/;"	f
airline#extensions#load	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#localsearch#apply	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#apply(...) abort$/;"	f
airline#extensions#localsearch#init	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#init(ext) abort$/;"	f
airline#extensions#localsearch#load_theme	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#load_theme(palette) abort$/;"	f
airline#extensions#lsp#get	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get(type) abort$/;"	f
airline#extensions#lsp#get_error	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_error() abort$/;"	f
airline#extensions#lsp#get_warning	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_warning() abort$/;"	f
airline#extensions#lsp#init	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#init(ext) abort$/;"	f
airline#extensions#lsp#progress	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#progress() abort$/;"	f
airline#extensions#lsp#update	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#update() abort$/;"	f
airline#extensions#neomake#get_errors	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#get_warnings	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#init	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
airline#extensions#netrw#apply	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#nvimlsp#get	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get(type) abort$/;"	f
airline#extensions#nvimlsp#get_error	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_error() abort$/;"	f
airline#extensions#nvimlsp#get_warning	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_warning() abort$/;"	f
airline#extensions#nvimlsp#init	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#init(ext) abort$/;"	f
airline#extensions#obsession#get_status	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
airline#extensions#obsession#init	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#omnisharp#init	plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#init(ext) abort$/;"	f
airline#extensions#omnisharp#server_status	plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#server_status(...) abort$/;"	f
airline#extensions#po#apply	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#init	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
airline#extensions#po#on_winenter	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#on_winenter()$/;"	f
airline#extensions#po#shorten	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#shorten()$/;"	f
airline#extensions#po#stats	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#poetv#apply	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#apply(...)$/;"	f
airline#extensions#poetv#init	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#init(ext)$/;"	f
airline#extensions#poetv#update	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#update()$/;"	f
airline#extensions#prepend_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#get_type	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#get_type()$/;"	f
airline#extensions#quickfix#inactive_qf_window	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#init	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#searchcount#apply	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#apply(...) abort$/;"	f
airline#extensions#searchcount#init	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#init(ext) abort$/;"	f
airline#extensions#searchcount#status	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#status() abort$/;"	f
airline#extensions#syntastic#get	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get(type)$/;"	f
airline#extensions#syntastic#get_error	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_error()$/;"	f
airline#extensions#syntastic#get_warning	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warning()$/;"	f
airline#extensions#syntastic#init	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#add_label	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_label(dict, type, right)$/;"	f
airline#extensions#tabline#add_tab_label	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_tab_label(dict)$/;"	f
airline#extensions#tabline#autoshow#off	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#clickbuf	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
airline#extensions#tabline#buffers#get	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#clean	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#clean()$/;"	f
airline#extensions#tabline#buflist#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#builder#new	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! airline#extensions#tabline#builder#new(context)$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#get	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#off	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#enable	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#enable()$/;"	f
airline#extensions#tabline#formatters#default#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#jsformatter#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/jsformatter.vim	/^function! airline#extensions#tabline#formatters#jsformatter#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#short_path#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^function! airline#extensions#tabline#formatters#short_path#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#tabnr#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/tabnr.vim	/^function! airline#extensions#tabline#formatters#tabnr#format(tab_nr_type, nr)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#group_of_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#init	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#redraw	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#redraw()$/;"	f
airline#extensions#tabline#tabs#get	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#off	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#tabs#tabnr_formatter	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#tabnr_formatter(nr, i) abort$/;"	f
airline#extensions#tabline#tabws#add_buffer_section	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_buffer_section(builder, cur_tab, cur_buf, pull_right)$/;"	f
airline#extensions#tabline#tabws#add_tab_section	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#tabws#get	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#get()$/;"	f
airline#extensions#tabline#tabws#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#invalidate()$/;"	f
airline#extensions#tabline#tabws#off	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#off()$/;"	f
airline#extensions#tabline#tabws#on	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#on()$/;"	f
airline#extensions#tabline#title	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tabline#xtabline#filter_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#filter_buffers()$/;"	f
airline#extensions#tabline#xtabline#init	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#init()$/;"	f
airline#extensions#tabline#xtabline#maps	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#maps()$/;"	f
airline#extensions#tabline#xtabline#next_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#next_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#prev_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#prev_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#reopen_last_tab	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	f
airline#extensions#tabline#xtabline#select_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#select_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#toggle_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_buffers()$/;"	f
airline#extensions#tabline#xtabline#toggle_tabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_tabs()$/;"	f
airline#extensions#tabline#xtabline#update_obsession	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#update_obsession()$/;"	f
airline#extensions#tagbar#currenttag	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#term#apply	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#apply(...) abort$/;"	f
airline#extensions#term#inactive_apply	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#inactive_apply(...) abort$/;"	f
airline#extensions#term#init	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#init(ext) abort$/;"	f
airline#extensions#term#termmode	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#termmode() abort$/;"	f
airline#extensions#tmuxline#init	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unicode#apply	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#unite#apply	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#vimagit#apply	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#apply(...) abort$/;"	f
airline#extensions#vimagit#get_mode	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#get_mode() abort$/;"	f
airline#extensions#vimagit#init	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#init(ext) abort$/;"	f
airline#extensions#vimcmake#apply	plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#apply(...) abort$/;"	f
airline#extensions#vimcmake#inactive_apply	plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#inactive_apply(...) abort$/;"	f
airline#extensions#vimcmake#init	plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#init(ext) abort$/;"	f
airline#extensions#vimtex#apply	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#apply(...)$/;"	f
airline#extensions#vimtex#get_scope	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#get_scope()$/;"	f
airline#extensions#vimtex#init	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#init(ext)$/;"	f
airline#extensions#virtualenv#apply	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#update	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
airline#extensions#vista#currenttag	plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#currenttag() abort$/;"	f
airline#extensions#vista#init	plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#init(ext) abort$/;"	f
airline#extensions#whitespace#check	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#disable	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#disable()$/;"	f
airline#extensions#whitespace#init	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#wordcount#apply	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#formatters#default#to_string	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#to_string(wordcount)$/;"	f
airline#extensions#wordcount#formatters#default#update_fmt	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#update_fmt(...)$/;"	f
airline#extensions#wordcount#formatters#readingtime#to_string	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#to_string(wordcount) abort$/;"	f
airline#extensions#wordcount#formatters#readingtime#update_fmt	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#update_fmt(...) abort$/;"	f
airline#extensions#wordcount#get	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function airline#extensions#wordcount#get()$/;"	f
airline#extensions#wordcount#init	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
airline#extensions#xkblayout#init	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#init(ext)$/;"	f
airline#extensions#xkblayout#status	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#status()$/;"	f
airline#extensions#ycm#get_error_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count() abort$/;"	f
airline#extensions#ycm#get_warning_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
airline#extensions#ycm#init	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#extensions#zoomwintab#apply	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#apply(...) abort$/;"	f
airline#extensions#zoomwintab#init	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#init(ext) abort$/;"	f
airline#formatter#short_path#format	plugged/vim-airline/autoload/airline/formatter/short_path.vim	/^function! airline#formatter#short_path#format(val) abort$/;"	f
airline#highlighter#add_accent	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent) abort$/;"	f
airline#highlighter#add_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse) abort$/;"	f
airline#highlighter#exec	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors) abort$/;"	f
airline#highlighter#get_highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...) abort$/;"	f
airline#highlighter#get_highlight2	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...) abort$/;"	f
airline#highlighter#highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes, ...) abort$/;"	f
airline#highlighter#highlight_modified_inactive	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr) abort$/;"	f
airline#highlighter#load_theme	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme() abort$/;"	f
airline#highlighter#reset_hlcache	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#reset_hlcache() abort$/;"	f
airline#init#bootstrap	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#sections	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#mode_changed	plugged/vim-airline/autoload/airline.vim	/^function! airline#mode_changed()$/;"	f
airline#msdos#round_msdos_colors	plugged/vim-airline/autoload/airline/msdos.vim	/^function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
airline#parts#crypt	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#define	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#spell	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#remove_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name, ...)$/;"	f
airline#themes#generate_color_map	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#gruvbox#refresh	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^function! airline#themes#gruvbox#refresh()$/;"	f
airline#themes#patch	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#update_statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#update_statusline_focuslost	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_focuslost()$/;"	f
airline#update_statusline_inactive	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_inactive(range)$/;"	f
airline#update_tabline	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_tabline()$/;"	f
airline#util#append	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#doautocmd	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#doautocmd(event)$/;"	f
airline#util#exec_funcrefs	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getbufvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getbufvar(bufnr, key, def)$/;"	f
airline#util#getwinvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#has_custom_scm	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_custom_scm()$/;"	f
airline#util#has_fugitive	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_fugitive()$/;"	f
airline#util#has_gina	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_gina()$/;"	f
airline#util#has_lawrencium	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_lawrencium()$/;"	f
airline#util#has_vcscommand	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_vcscommand()$/;"	f
airline#util#ignore_buf	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_buf(name)$/;"	f
airline#util#ignore_next_focusgain	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_next_focusgain()$/;"	f
airline#util#prepend	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#shorten	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth, ...)$/;"	f
airline#util#stl_disabled	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#stl_disabled(winnr)$/;"	f
airline#util#strcharpart	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strcharpart(...)$/;"	f
airline#util#strchars	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strchars(str)$/;"	f
airline#util#themes	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#themes(match)$/;"	f
airline#util#try_focusgained	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#try_focusgained()$/;"	f
airline#util#warning	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#winwidth	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#winwidth(...)$/;"	f
airline#util#wrap	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_ale_count	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_count(cnt, symbol)$/;"	f
airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_get_line_number(cnt, type) abort$/;"	f
airline_extensions	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_extensions()$/;"	f
airline_languageclient_count	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_count(cnt, symbol)$/;"	f
airline_languageclient_get_line_number	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_get_line_number(type) abort$/;"	f
airline_lsp_count	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_count(cnt, symbol) abort$/;"	f
airline_lsp_get_line_number	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_get_line_number(cnt, type) abort$/;"	f
airline_nvimlsp_count	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! s:airline_nvimlsp_count(cnt, symbol) abort$/;"	f
airline_refresh	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_refresh(...)$/;"	f
airline_theme	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
airline_toggle	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
ale_refresh	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:ale_refresh()$/;"	f
alternateExtensionsDict	plugged/a.vim/plugin/a.vim	/^let alternateExtensionsDict = {}$/;"	v
append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
auto_formatted	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let auto_formatted = join(getline(1, line('$')), "\\n")$/;"	v
autocmd_handler	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! s:autocmd_handler()$/;"	f
b	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^uint32_t b = static_cast<uint8_t>(a);$/;"	v
b.get_posttitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_posttitle(i) dict$/;"	f
b.get_pretitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_pretitle(i) dict$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_title(i) dict$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_title(i) dict$/;"	f
b:current_syntax	plugged/indexer.tar.gz/syntax/indexer_files.vim	/^let b:current_syntax = "indexer_files"$/;"	v
b:current_syntax	plugged/vimagit/syntax/magit.vim	/^let b:current_syntax = "magit"$/;"	v
b:current_syntax	plugged/vimwiki/syntax/vimwiki.vim	/^let b:current_syntax='vimwiki'$/;"	v
b:did_ftplugin	plugged/vimwiki/ftplugin/vimwiki.vim	/^let b:did_ftplugin = 1  " Don't load another plugin for this buffer$/;"	v
b:magit_current_commit_msg	plugged/vimagit/plugin/magit.vim	/^let b:magit_current_commit_msg = []$/;"	v
bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
bar	autoload/plug.vim	/^function! s:bar()$/;"	f
batchfile	autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
beep	plugged/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
binary_exists	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:binary_exists(fname) abort$/;"	f
blank	plugged/goyo.vim/autoload/goyo.vim	/^function! s:blank(repel)$/;"	f
buf	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let buf = GetBuffer()$/;"	v
buffer	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let buffer = GetBuffer()$/;"	v
buffer	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let buffer = GetBuffer()$/;"	v
buffers	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^    let buffers = tabpagebuflist(curtab)$/;"	v
build_command	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:build_command(color)$/;"	f
build_extra_options	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:build_extra_options() abort$/;"	f
build_menu	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:build_menu(topmenu) abort$/;"	f
build_sections	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
build_table_menu	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:build_table_menu(topmenu) abort$/;"	f
by_clang_format_command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(1, line('$'))$/;"	v
by_clang_format_command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(1, line('$'), 'test.cpp')$/;"	v
by_clang_format_command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(1, line('$'), 'test.js')$/;"	v
by_clang_format_command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(11, 13)$/;"	v
by_clang_format_command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let by_clang_format_command = ClangFormat(1, line('$'))$/;"	v
by_clang_format_command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let by_clang_format_command = ClangFormat(11, 13)$/;"	v
c	init.vim	/^nnoremap c "_c$/;"	m
c	plugged/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
cS	plugged/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
cache_dict	plugged/vimwiki/autoload/vimwiki/base.vim	/^      let cache_dict[key] = s:compute_old_url_r($/;"	v
cell_splitter	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:cell_splitter() abort$/;"	f
cells	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let cells = vimwiki#tbl#get_cells(a:line)$/;"	v
cgc	plugged/vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
chCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node) abort$/;"	f
chRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node) abort$/;"	f
change_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:change_cb(from_line, to_line, new_rate) abort$/;"	f
change_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:change_level(from_line, to_line, direction, plus_children) abort$/;"	f
changesurround	plugged/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
check_defined	plugged/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
check_defined_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
check_mixed_indent	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
check_mixed_indent_file	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
check_users_value	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:check_users_value(key, users_value, value_infos, comes_from_global_variable) abort$/;"	f
checkbox	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let checkbox = '\\s*\\[\\(.\\)\\]\\s*'$/;"	v
checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
clang_format#disable_auto_format	plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#disable_auto_format() abort$/;"	f
clang_format#enable_auto_format	plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#enable_auto_format() abort$/;"	f
clang_format#enable_format_on_insert	plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#enable_format_on_insert() abort$/;"	f
clang_format#format	plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#format(line1, line2) abort$/;"	f
clang_format#get_version	plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#get_version() abort$/;"	f
clang_format#is_invalid	plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#is_invalid() abort$/;"	f
clang_format#replace	plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#replace(line1, line2, ...) abort$/;"	f
clang_format#toggle_auto_format	plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#toggle_auto_format() abort$/;"	f
clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
clean_url	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:clean_url(url) abort$/;"	f
clear	plugged/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
clear_matches	plugged/vim-css-color/autoload/css_color.vim	/^function! s:clear_matches()$/;"	f
clone_marker_from_to	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:clone_marker_from_to(from, to) abort$/;"	f
closeChildren	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node) abort$/;"	f
closeCurrentDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node) abort$/;"	f
closeTreeWindow	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow() abort$/;"	f
close_pane	autoload/plug.vim	/^function! s:close_pane()$/;"	f
close_tag_def_list	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_def_list(deflist, ldest) abort$/;"	f
close_tag_list	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_list(lists, ldest) abort$/;"	f
close_tag_math	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_math(math, ldest) abort$/;"	f
close_tag_para	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_para(para, ldest) abort$/;"	f
close_tag_pre	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_pre(pre, ldest) abort$/;"	f
close_tag_quote	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_quote(quote, ldest) abort$/;"	f
close_tag_row	plugged/vimwiki/autoload/vimwiki/html.vim	/^  function! s:close_tag_row(row, header, ldest, header_ids) abort$/;"	f
close_tag_table	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:close_tag_table(table, ldest, header_ids) abort$/;"	f
closematch	plugged/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
coc_git_enabled	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:coc_git_enabled() abort$/;"	f
col_count	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:col_count(lnum) abort$/;"	f
collect_headers	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:collect_headers() abort$/;"	f
color	colors/jellybeans.vim	/^fun! s:color(r, g, b)$/;"	f
colors	plugged/vim-airline/t/themes.vim	/^      let colors = airline#themes#get_highlight('Foo')$/;"	v
colors	plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors_name	colors/jellybeans.vim	/^let colors_name = "jellybeans"$/;"	v
compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
concealpre	plugged/vimwiki/syntax/vimwiki.vim	/^let concealpre = vimwiki#vars#get_global('conceal_pre') ? ' concealends' : ''$/;"	v
config_fugitive_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:config_fugitive_branch() abort$/;"	f
config_gina_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:config_gina_branch() abort$/;"	f
conflict_marker	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:conflict_marker()$/;"	f
const	plugged/goyo.vim/autoload/goyo.vim	/^function! s:const(val, min, max)$/;"	f
content_rx	plugged/vimwiki/autoload/vimwiki/diary.vim	/^    let content_rx = '^\\%('.vimwiki#vars#get_syntaxlocal('rxHeader').'\\)\\|'.$/;"	v
convert_file	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:convert_file(path_html, wikifile) abort$/;"	f
count_headers_level_less_equal	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:count_headers_level_less_equal(headers, maxlevel) abort$/;"	f
count_separators_down	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:count_separators_down(lnum) abort$/;"	f
count_separators_up	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:count_separators_up(lnum) abort$/;"	f
cr_on_empty_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:cr_on_empty_line(lnum, behavior) abort$/;"	f
cr_on_empty_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:cr_on_empty_list_item(lnum, behavior) abort$/;"	f
cr_on_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:cr_on_list_item(lnum, insert_new_marker, not_at_eol) abort$/;"	f
create	plugged/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
create_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:create_cb(item, start_rate) abort$/;"	f
create_default_CSS	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:create_default_CSS(path) abort$/;"	f
create_empty_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:create_empty_row(cols) abort$/;"	f
create_h1	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:create_h1(fname) abort$/;"	f
create_highlight	plugged/vim-css-color/autoload/css_color.vim	/^	function! s:create_highlight(color, is_bright)$/;"	f
create_keyvals	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:create_keyvals(key, val) abort$/;"	f
create_marker	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:create_marker(lnum) abort$/;"	f
create_matches	plugged/vim-css-color/autoload/css_color.vim	/^function! s:create_matches()$/;"	f
create_row_sep	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:create_row_sep(cols) abort$/;"	f
create_syn_match	plugged/vim-css-color/autoload/css_color.vim	/^function! s:create_syn_match()$/;"	f
create_temporary_wiki	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:create_temporary_wiki() abort$/;"	f
cs	plugged/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
css_color#disable	plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#disable()$/;"	f
css_color#enable	plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#enable()$/;"	f
css_color#extend	plugged/vim-css-color/autoload/css_color.vim	/^	function! css_color#extend(groups)$/;"	f
css_color#init	plugged/vim-css-color/autoload/css_color.vim	/^	function! css_color#init(type, keywords, groups)$/;"	f
css_color#init	plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#init(type, keywords, groups)$/;"	f
css_color#reinit	plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#reinit()$/;"	f
css_color#toggle	plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#toggle()$/;"	f
cur_column	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:cur_column() abort$/;"	f
cur_file	plugged/vimagit/plugin/magit.vim	/^		let cur_file = cur_filename[1]$/;"	v
cur_filename	plugged/vimagit/plugin/magit.vim	/^	let cur_filename = matchlist(cur_file, git_dir . '\\(.*\\)')$/;"	v
current	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let current = line('w0')$/;"	v
current_attr	colors/jellybeans.vim	/^  fun! s:current_attr(group)$/;"	f
current_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let current_buffer = max([index(b.buffers, cur), 0])$/;"	v
current_color	colors/jellybeans.vim	/^  fun! s:current_color(group, what, mode)$/;"	f
current_file	plugged/vimwiki/autoload/vimwiki/diary.vim	/^  let current_file = vimwiki#path#path_norm(expand('%:p'))$/;"	v
current_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:current_header(headers, line_number) abort$/;"	f
customOpenBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node) abort$/;"	f
customOpenDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node) abort$/;"	f
customOpenFile	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node) abort$/;"	f
decrease_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:decrease_level(item) abort$/;"	f
default_CSS_full_name	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:default_CSS_full_name(path) abort$/;"	f
define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
deleteBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark) abort$/;"	f
delete_html_files	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:delete_html_files(path) abort$/;"	f
delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
detect_clang_format	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! s:detect_clang_format() abort$/;"	f
detect_style_file	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:detect_style_file() abort$/;"	f
dfrank#util#BufName	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#BufName(mValue)$/;"	f
dfrank#util#ConcatLists	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#ConcatLists(lExistingList, lAddingList)$/;"	f
dfrank#util#GetKeyFromPath	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#GetKeyFromPath(sPath)$/;"	f
dfrank#util#GetPathHeader	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#GetPathHeader(sPath)$/;"	f
dfrank#util#GetPathLastItem	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#GetPathLastItem(sPath)$/;"	f
dfrank#util#IsAbsolutePath	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#IsAbsolutePath(path)$/;"	f
dfrank#util#IsFileExistsInList	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#IsFileExistsInList(aList, sFilename)$/;"	f
dfrank#util#IsFileInSubdir	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#IsFileInSubdir(sFilename, sDirname)$/;"	f
dfrank#util#IsFileInSubdirSimple	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#IsFileInSubdirSimple(sFilename, sDirname)$/;"	f
dfrank#util#ParsePath	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#ParsePath(sPath)$/;"	f
dfrank#util#SetDefaultValues	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#SetDefaultValues(dParams, dDefParams)$/;"	f
dfrank#util#Trim	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#Trim(sString)$/;"	f
dfrank#util#init	plugged/DfrankUtil/autoload/dfrank/util.vim	/^function! dfrank#util#init()$/;"	f
diagnostics_for_buffer	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:diagnostics_for_buffer()$/;"	f
diary_file	plugged/vimwiki/autoload/vimwiki/diary.vim	/^  let diary_file = vimwiki#path#path_norm(s:diary_index())$/;"	v
diary_index	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:diary_index(...) abort$/;"	f
diary_path	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:diary_path(...) abort$/;"	f
did_cpp_syntax_inits	plugged/vim-cpp-enhanced-highlight/after/syntax/cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_indexer_files_syntax_inits	plugged/indexer.tar.gz/syntax/indexer_files.vim	/^      let did_indexer_files_syntax_inits = 1$/;"	v
diff	autoload/plug.vim	/^function! s:diff()$/;"	f
dir_rel_fsource	plugged/vimwiki/autoload/vimwiki/base.vim	/^      let dir_rel_fsource .= '\/'$/;"	v
dir_rel_fsource	plugged/vimwiki/autoload/vimwiki/base.vim	/^      let dir_rel_fsource = dir_rel_fsource[:-3]$/;"	v
dir_rel_fsource	plugged/vimwiki/autoload/vimwiki/base.vim	/^    let dir_rel_fsource = vimwiki#path#relpath(fsource_rel_root, dir_rel_root)$/;"	v
dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
displayHelp	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp() abort$/;"	f
display_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_git_branch()$/;"	f
display_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_hg_branch()$/;"	f
do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
dosurround	plugged/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
ds	plugged/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
empty_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:empty_item() abort$/;"	f
err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
error_message	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:error_message(result) abort$/;"	f
esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
escape_html_attribute	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:escape_html_attribute(string) abort$/;"	f
escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
evaluate_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:evaluate_tabline(tabline)$/;"	f
exec_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix) abort$/;"	f
existing_mkd_refs	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:existing_mkd_refs() abort$/;"	f
expect_the_same_output	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! s:expect_the_same_output(line1, line2) abort$/;"	f
expected	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let expected = ClangFormat(1, line('$'))$/;"	v
ext.add_inactive_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
ext.add_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
ext.add_statusline_funcref	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
ext.add_theme_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
extractafter	plugged/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	plugged/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
f	plugged/vim-clang-format/test/t/test.cpp	/^void f(){ std::cout << "hello\\n"; }$/;"	f
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>(Fred f);$/;"	v
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>(Fred<T> f);$/;"	v
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^AClass<T>(Fred<T>::List f);$/;"	v
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^getThing<T>(Fred f);$/;"	v
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^getThing<T>(Fred<T> f);$/;"	v
f	plugged/vim-cpp-enhanced-highlight/test/color.cpp	/^getThing<T>(Fred<T>::List f);$/;"	v
file	plugged/vimagit/plugin/magit.vim	/^				let file = b:state.get_file('staged', cur_file, 0)$/;"	v
file	plugged/vimagit/plugin/magit.vim	/^			let file = b:state.get_file('unstaged', cur_file, 0)$/;"	v
file_exists	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:file_exists(fname) abort$/;"	f
filetypedetect	plugged/vimwiki/plugin/vimwiki.vim	/^  augroup filetypedetect$/;"	a
findAndRevealPath	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr) abort$/;"	f
find_autoload_file	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:find_autoload_file(name) abort$/;"	f
find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
first_char	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:first_char(string) abort$/;"	f
fixindent	plugged/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fmt_cell	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:fmt_cell(cell, max_len, align) abort$/;"	f
fmt_cell_sep	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:fmt_cell_sep(max_len, align) abort$/;"	f
fmt_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:fmt_row(cells, max_lens, aligns, col1, col2) abort$/;"	f
fmt_sep	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:fmt_sep(max_lens, aligns, col1, col2) abort$/;"	f
format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
format_inserted_area	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:format_inserted_area() abort$/;"	f
format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
format_name	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
format_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      function! s:format_wordcount(_)$/;"	f
format_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:format_wordcount(wordcount)$/;"	f
formatted	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let formatted = clang_format#format(1, line('$'))$/;"	v
fsource_rel_root	plugged/vimwiki/autoload/vimwiki/base.vim	/^    let fsource_rel_root = fnamemodify(fsource_rel_root, ':h')$/;"	v
fsource_rel_root	plugged/vimwiki/autoload/vimwiki/base.vim	/^    let fsource_rel_root = vimwiki#path#relpath(wiki_root, fsource)$/;"	v
func	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^void func<std::map<std::string, std::string<double>>>() {$/;"	f
g:DeadKeysOn	plugged/vimling/plugin/deadkeys.vim	/^let g:DeadKeysOn=0$/;"	v
g:IPAOn	plugged/vimling/plugin/ipa.vim	/^let g:IPAOn=0$/;"	v
g:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoCenter	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenter            = get(g:, 'NERDTreeAutoCenter',            1)$/;"	v
g:NERDTreeAutoCenterThreshold	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenterThreshold   = get(g:, 'NERDTreeAutoCenterThreshold',   3)$/;"	v
g:NERDTreeAutoDeleteBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarksFile	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksFile         = get(g:, 'NERDTreeBookmarksFile',         expand('$HOME') . '\/.NERDTreeBookmarks')$/;"	v
g:NERDTreeBookmarksSort	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksSort         = get(g:, 'NERDTreeBookmarksSort',         1)$/;"	v
g:NERDTreeCascadeOpenSingleChildDir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeOpenSingleChildDir = get(g:, 'NERDTreeCascadeOpenSingleChildDir', 1)$/;"	v
g:NERDTreeCascadeSingleChildDir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeSingleChildDir     = get(g:, 'NERDTreeCascadeSingleChildDir',     1)$/;"	v
g:NERDTreeCaseSensitiveSort	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCaseSensitiveSort     = get(g:, 'NERDTreeCaseSensitiveSort',     0)$/;"	v
g:NERDTreeChDirMode	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeChDirMode             = get(g:, 'NERDTreeChDirMode',             0)$/;"	v
g:NERDTreeCopyCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyCmd      = get(g:, 'NERDTreeCopyCmd',      'cp -r ')$/;"	v
g:NERDTreeCopyDirCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyDirCmd   = get(g:, 'NERDTreeCopyDirCmd',   'xcopy \/s \/e \/i \/y \/q ')$/;"	v
g:NERDTreeCopyFileCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyFileCmd  = get(g:, 'NERDTreeCopyFileCmd',  'copy \/y ')$/;"	v
g:NERDTreeCreatePrefix	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCreatePrefix          = get(g:, 'NERDTreeCreatePrefix',          'silent')$/;"	v
g:NERDTreeCreator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirArrowCollapsible	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '~')$/;"	v
g:NERDTreeDirArrowCollapsible	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '▾')$/;"	v
g:NERDTreeDirArrowExpandable	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '+')$/;"	v
g:NERDTreeDirArrowExpandable	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '▸')$/;"	v
g:NERDTreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeGlyphReadOnly	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeGlyphReadOnly = get(g:, 'NERDTreeGlyphReadOnly', 'RO')$/;"	v
g:NERDTreeHighlightCursorline	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHighlightCursorline   = get(g:, 'NERDTreeHighlightCursorline',   1)$/;"	v
g:NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHijackNetrw           = get(g:, 'NERDTreeHijackNetrw',           1)$/;"	v
g:NERDTreeIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeIgnore                = get(g:, 'NERDTreeIgnore',                ['\\~$'])$/;"	v
g:NERDTreeKeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapActivateNode	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapActivateNode    = get(g:, 'NERDTreeMapActivateNode',    'o')$/;"	v
g:NERDTreeMapCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCWD             = get(g:, 'NERDTreeMapCWD',             'CD')$/;"	v
g:NERDTreeMapChangeRoot	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChangeRoot      = get(g:, 'NERDTreeMapChangeRoot',      'C')$/;"	v
g:NERDTreeMapChdir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChdir           = get(g:, 'NERDTreeMapChdir',           'cd')$/;"	v
g:NERDTreeMapCloseChildren	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseChildren   = get(g:, 'NERDTreeMapCloseChildren',   'X')$/;"	v
g:NERDTreeMapCloseDir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseDir        = get(g:, 'NERDTreeMapCloseDir',        'x')$/;"	v
g:NERDTreeMapCustomOpen	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCustomOpen      = get(g:, 'NERDTreeMapCustomOpen',      '<CR>')$/;"	v
g:NERDTreeMapDeleteBookmark	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapDeleteBookmark  = get(g:, 'NERDTreeMapDeleteBookmark',  'D')$/;"	v
g:NERDTreeMapHelp	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapHelp            = get(g:, 'NERDTreeMapHelp',            '?')$/;"	v
g:NERDTreeMapJumpFirstChild	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpFirstChild  = get(g:, 'NERDTreeMapJumpFirstChild',  'K')$/;"	v
g:NERDTreeMapJumpLastChild	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpLastChild   = get(g:, 'NERDTreeMapJumpLastChild',   'J')$/;"	v
g:NERDTreeMapJumpNextSibling	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpNextSibling = get(g:, 'NERDTreeMapJumpNextSibling', '<C-j>')$/;"	v
g:NERDTreeMapJumpParent	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpParent      = get(g:, 'NERDTreeMapJumpParent',      'p')$/;"	v
g:NERDTreeMapJumpPrevSibling	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpPrevSibling = get(g:, 'NERDTreeMapJumpPrevSibling', '<C-k>')$/;"	v
g:NERDTreeMapJumpRoot	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpRoot        = get(g:, 'NERDTreeMapJumpRoot',        'P')$/;"	v
g:NERDTreeMapMenu	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapMenu            = get(g:, 'NERDTreeMapMenu',            'm')$/;"	v
g:NERDTreeMapOpenExpl	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenExpl        = get(g:, 'NERDTreeMapOpenExpl',        'e')$/;"	v
g:NERDTreeMapOpenInTab	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTab       = get(g:, 'NERDTreeMapOpenInTab',       't')$/;"	v
g:NERDTreeMapOpenInTabSilent	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTabSilent = get(g:, 'NERDTreeMapOpenInTabSilent', 'T')$/;"	v
g:NERDTreeMapOpenRecursively	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenRecursively = get(g:, 'NERDTreeMapOpenRecursively', 'O')$/;"	v
g:NERDTreeMapOpenSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenSplit       = get(g:, 'NERDTreeMapOpenSplit',       'i')$/;"	v
g:NERDTreeMapOpenVSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenVSplit      = get(g:, 'NERDTreeMapOpenVSplit',      's')$/;"	v
g:NERDTreeMapPreview	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreview         = get(g:, 'NERDTreeMapPreview',         'g'.NERDTreeMapActivateNode)$/;"	v
g:NERDTreeMapPreviewSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewSplit    = get(g:, 'NERDTreeMapPreviewSplit',    'g'.NERDTreeMapOpenSplit)$/;"	v
g:NERDTreeMapPreviewVSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewVSplit   = get(g:, 'NERDTreeMapPreviewVSplit',   'g'.NERDTreeMapOpenVSplit)$/;"	v
g:NERDTreeMapQuit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapQuit            = get(g:, 'NERDTreeMapQuit',            'q')$/;"	v
g:NERDTreeMapRefresh	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefresh         = get(g:, 'NERDTreeMapRefresh',         'r')$/;"	v
g:NERDTreeMapRefreshRoot	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefreshRoot     = get(g:, 'NERDTreeMapRefreshRoot',     'R')$/;"	v
g:NERDTreeMapToggleBookmarks	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleBookmarks = get(g:, 'NERDTreeMapToggleBookmarks', 'B')$/;"	v
g:NERDTreeMapToggleFiles	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFiles     = get(g:, 'NERDTreeMapToggleFiles',     'F')$/;"	v
g:NERDTreeMapToggleFilters	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFilters   = get(g:, 'NERDTreeMapToggleFilters',   'f')$/;"	v
g:NERDTreeMapToggleHidden	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleHidden    = get(g:, 'NERDTreeMapToggleHidden',    'I')$/;"	v
g:NERDTreeMapToggleZoom	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleZoom      = get(g:, 'NERDTreeMapToggleZoom',      'A')$/;"	v
g:NERDTreeMapUpdir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdir           = get(g:, 'NERDTreeMapUpdir',           'u')$/;"	v
g:NERDTreeMapUpdirKeepOpen	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdirKeepOpen   = get(g:, 'NERDTreeMapUpdirKeepOpen',   'U')$/;"	v
g:NERDTreeMarkBookmarks	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMarkBookmarks         = get(g:, 'NERDTreeMarkBookmarks',         1)$/;"	v
g:NERDTreeMenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuDown	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuDown           = get(g:, 'NERDTreeMenuDown',           'j')$/;"	v
g:NERDTreeMenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMenuUp	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuUp             = get(g:, 'NERDTreeMenuUp',             'k')$/;"	v
g:NERDTreeMinimalMenu	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalMenu           = get(g:, 'NERDTreeMinimalMenu',           0)$/;"	v
g:NERDTreeMinimalUI	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalUI             = get(g:, 'NERDTreeMinimalUI',             0)$/;"	v
g:NERDTreeMouseMode	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMouseMode             = get(g:, 'NERDTreeMouseMode',             1)$/;"	v
g:NERDTreeNaturalSort	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNaturalSort           = get(g:, 'NERDTreeNaturalSort',           0)$/;"	v
g:NERDTreeNodeDelimiter	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00a0")$/;"	v
g:NERDTreeNodeDelimiter	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00b7")$/;"	v
g:NERDTreeNodeDelimiter	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\x07")$/;"	v
g:NERDTreeNotificationThreshold	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNotificationThreshold = get(g:, 'NERDTreeNotificationThreshold', 100)$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeQuitOnOpen	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeQuitOnOpen            = get(g:, 'NERDTreeQuitOnOpen',            0)$/;"	v
g:NERDTreeRemoveDirCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rm -rf ')$/;"	v
g:NERDTreeRemoveDirCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rmdir \/s \/q ')$/;"	v
g:NERDTreeRespectWildIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeRespectWildIgnore     = get(g:, 'NERDTreeRespectWildIgnore',     0)$/;"	v
g:NERDTreeShowBookmarks	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowBookmarks         = get(g:, 'NERDTreeShowBookmarks',         0)$/;"	v
g:NERDTreeShowFiles	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowFiles             = get(g:, 'NERDTreeShowFiles',             1)$/;"	v
g:NERDTreeShowHidden	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowHidden            = get(g:, 'NERDTreeShowHidden',            0)$/;"	v
g:NERDTreeShowLineNumbers	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowLineNumbers       = get(g:, 'NERDTreeShowLineNumbers',       0)$/;"	v
g:NERDTreeSortDirs	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortDirs              = get(g:, 'NERDTreeSortDirs',              1)$/;"	v
g:NERDTreeSortHiddenFirst	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortHiddenFirst       = get(g:, 'NERDTreeSortHiddenFirst',       1)$/;"	v
g:NERDTreeSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortOrder    = get(g:, 'NERDTreeSortOrder', ['\\\/$', '*', '\\.swp$', '\\.bak$', '\\~$'])$/;"	v
g:NERDTreeStatusline	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeStatusline = get(g:, 'NERDTreeStatusline', "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}")$/;"	v
g:NERDTreeUI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUseTCD	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeUseTCD                = get(g:, 'NERDTreeUseTCD',                0)$/;"	v
g:NERDTreeWinPos	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinPos  = get(g:, 'NERDTreeWinPos', 'left')$/;"	v
g:NERDTreeWinSize	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinSize = get(g:, 'NERDTreeWinSize', 31)$/;"	v
g:ProseOn	plugged/vimling/plugin/prose.vim	/^let g:ProseOn=0$/;"	v
g:airline#extensions#default#layout	plugged/vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#localsearch#inverted	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#inverted = get(g:, 'airline#extensions#localsearch#inverted', 0)$/;"	v
g:airline#extensions#localsearch#loaded	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#loaded = 001$/;"	v
g:airline#extensions#obsession#indicator_text	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
g:airline#extensions#quickfix#location_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#tabline#enabled	plugged/vim-airline/t/extensions_tabline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#windowswap#indicator_text	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.commandline = airline#themes#generate_color_map(s:airline_a_commandline, s:airline_b_commandline, s:airline_c_commandline)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inactive, s:airline_b_inactive, s:airline_c_inactive)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert, s:airline_b_insert, s:airline_c_insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal, s:airline_b_normal, s:airline_c_normal)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:airline_b_insert[2] , 124     , ''     ]$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.terminal = airline#themes#generate_color_map(s:airline_a_insert, s:airline_b_insert, s:airline_c_insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual, s:airline_b_visual, s:airline_c_visual)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^let g:airline#themes#gruvbox#palette = {}$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_section_	plugged/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	plugged/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_statusline_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	plugged/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_theme	plugged/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:alternateNoDefaultAlternate	plugged/a.vim/plugin/a.vim	/^   let g:alternateNoDefaultAlternate = 0$/;"	v
g:alternateRelativeFiles	plugged/a.vim/plugin/a.vim	/^   let g:alternateRelativeFiles = 0$/;"	v
g:alternateSearchPath	plugged/a.vim/plugin/a.vim	/^  let g:alternateSearchPath = 'sfr:..\/source,sfr:..\/src,sfr:..\/include,sfr:..\/inc'$/;"	v
g:calendar_action	plugged/vimwiki/plugin/vimwiki.vim	/^  let g:calendar_action = 'vimwiki#diary#calendar_action'$/;"	v
g:calendar_sign	plugged/vimwiki/plugin/vimwiki.vim	/^  let g:calendar_sign = 'vimwiki#diary#calendar_sign'$/;"	v
g:clang_format#auto_format	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_format = s:getg('clang_format#auto_format', 0)$/;"	v
g:clang_format#auto_format	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#auto_format = 1$/;"	v
g:clang_format#auto_format_on_insert_leave	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_format_on_insert_leave = s:getg('clang_format#auto_format_on_insert_leave', 0)$/;"	v
g:clang_format#auto_format_on_insert_leave	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#auto_format_on_insert_leave = 1$/;"	v
g:clang_format#auto_formatexpr	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_formatexpr = s:getg('clang_format#auto_formatexpr', 0)$/;"	v
g:clang_format#auto_formatexpr	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#auto_formatexpr = 1$/;"	v
g:clang_format#code_style	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#code_style = s:getg('clang_format#code_style', 'google')$/;"	v
g:clang_format#command	init.vim	/^let g:clang_format#command = "Users\/peristocles\/"$/;"	v
g:clang_format#command	init.vim	/^let g:clang_format#command = 'clang-format-3.8'$/;"	v
g:clang_format#command	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#command = s:getg('clang_format#command', 'clang-format')$/;"	v
g:clang_format#command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#command = "clang_format_not_exist"$/;"	v
g:clang_format#command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#command = '.\/t\/clang-format-dummy.sh'$/;"	v
g:clang_format#command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#command = s:cmd_tmp$/;"	v
g:clang_format#command	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^let g:clang_format#command = s:detect_clang_format()$/;"	v
g:clang_format#detect_style_file	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#detect_style_file = s:getg('clang_format#detect_style_file', 1)$/;"	v
g:clang_format#detect_style_file	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let g:clang_format#detect_style_file = 0$/;"	v
g:clang_format#detect_style_file	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#detect_style_file = 0$/;"	v
g:clang_format#enable_fallback_style	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#enable_fallback_style = s:getg('clang_format#enable_fallback_style', 1)$/;"	v
g:clang_format#extra_args	plugged/vim-clang-format/autoload/clang_format.vim	/^    let g:clang_format#extra_args = join(g:clang_format#extra_args, " ")$/;"	v
g:clang_format#extra_args	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#extra_args = s:getg('clang_format#extra_args', "")$/;"	v
g:clang_format#filetype_style_options	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#filetype_style_options = s:getg('clang_format#filetype_style_options', {})$/;"	v
g:clang_format#style_options	init.vim	/^let g:clang_format#style_options = {$/;"	v
g:clang_format#style_options	plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#style_options = s:getg('clang_format#style_options', {})$/;"	v
g:clang_format#style_options	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^                let g:clang_format#style_options = {'UseTab' : v:false, 'IndentWidth' : 4}$/;"	v
g:clang_format#style_options	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let g:clang_format#style_options = saved$/;"	v
g:clang_format#style_options	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let g:clang_format#style_options = {$/;"	v
g:clang_format#style_options	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let g:clang_format#style_options = {'UseTab' : 'false', 'IndentWidth' : 4}$/;"	v
g:colors_name	plugged/gruvbox/colors/gruvbox.vim	/^let g:colors_name='gruvbox'$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:cursormode_exit_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^  let g:cursormode_exit_mode='n'$/;"	v
g:dfrank#util#loaded	plugged/DfrankUtil/autoload/dfrank/util.vim	/^let g:dfrank#util#loaded      = 1$/;"	v
g:dfrank#util#pathSeparator	plugged/DfrankUtil/autoload/dfrank/util.vim	/^   let g:dfrank#util#pathSeparator = '\/'$/;"	v
g:dfrank#util#version	plugged/DfrankUtil/autoload/dfrank/util.vim	/^let g:dfrank#util#version     = 102$/;"	v
g:gitgutter_override_sign_column_highlight	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gruvbox_bold	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_bold=1$/;"	v
g:gruvbox_color_column	init.vim	/^let g:gruvbox_color_column='bg1'$/;"	v
g:gruvbox_contrast_dark	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_dark='medium'$/;"	v
g:gruvbox_contrast_light	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_light='medium'$/;"	v
g:gruvbox_guisp_fallback	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_guisp_fallback='NONE'$/;"	v
g:gruvbox_improved_strings	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_strings=0$/;"	v
g:gruvbox_improved_warnings	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_warnings=0$/;"	v
g:gruvbox_inverse	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_inverse=1$/;"	v
g:gruvbox_invert_indent_guides	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_invert_indent_guides=0$/;"	v
g:gruvbox_italic	init.vim	/^let g:gruvbox_italic=0$/;"	v
g:gruvbox_italic	plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=0$/;"	v
g:gruvbox_italic	plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=1$/;"	v
g:gruvbox_number_column	init.vim	/^let g:gruvbox_number_column='bg0'$/;"	v
g:gruvbox_sign_column	init.vim	/^let g:gruvbox_sign_column='bg0'$/;"	v
g:gruvbox_termcolors	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_termcolors=256$/;"	v
g:gruvbox_undercurl	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_undercurl=1$/;"	v
g:gruvbox_underline	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_underline=1$/;"	v
g:iIndexerVersion	plugged/indexer.tar.gz/plugin/indexer.vim	/^let g:iIndexerVersion = 416$/;"	v
g:indentLine_color_gui	plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_term	plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indent_guides_auto_colors	colors/jellybeans.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	plugged/gruvbox/colors/gruvbox.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:index_regex	plugged/vimagit/test/utils.vim	/^let g:index_regex = "\\"^index [[:xdigit:]]\\\\{7\\\\}\\\\.\\\\.[[:xdigit:]]\\\\{7\\\\}\\""$/;"	v
g:indexer_backgroundDisabled	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_backgroundDisabled = 0$/;"	v
g:indexer_ctagsCommandLineOptions	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/.vimprj/my.vim	/^let g:indexer_ctagsCommandLineOptions = '--c++-kinds=+p+l --c-kinds=+l --fields=+iaS --extra=+q'$/;"	v
g:indexer_ctagsCommandLineOptions	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_ctagsCommandLineOptions = '--c++-kinds=+p+l --fields=+iaS --extra=+q'$/;"	v
g:indexer_ctagsDontSpecifyFilesIfPossible	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/.vimprj/my.vim	/^let g:indexer_ctagsDontSpecifyFilesIfPossible = 1$/;"	v
g:indexer_ctagsDontSpecifyFilesIfPossible	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_ctagsDontSpecifyFilesIfPossible = -1$/;"	v
g:indexer_ctagsJustAppendTagsAtFileSave	plugged/indexer.tar.gz/plugin/indexer.vim	/^      let g:indexer_ctagsJustAppendTagsAtFileSave = 0$/;"	v
g:indexer_ctagsJustAppendTagsAtFileSave	plugged/indexer.tar.gz/plugin/indexer.vim	/^      let g:indexer_ctagsJustAppendTagsAtFileSave = 1$/;"	v
g:indexer_ctagsWriteFilelist	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_ctagsWriteFilelist = 1$/;"	v
g:indexer_dProjFilesParsed	plugged/indexer.tar.gz/plugin/indexer.vim	/^let g:indexer_dProjFilesParsed = s:dProjFilesParsed$/;"	v
g:indexer_disableCtagsWarning	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_disableCtagsWarning = 0$/;"	v
g:indexer_disableIndexerFilesDirsWarning	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_disableIndexerFilesDirsWarning = 0$/;"	v
g:indexer_disableMultProjWarning	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_disableMultProjWarning = 0$/;"	v
g:indexer_dontUpdateTagsIfFileExists	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_dontUpdateTagsIfFileExists = 0$/;"	v
g:indexer_enableWhenProjectDirFound	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_enableWhenProjectDirFound = '1'$/;"	v
g:indexer_getAllSubdirsFromIndexerListFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_getAllSubdirsFromIndexerListFile = 0$/;"	v
g:indexer_handlePath	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_handlePath = 1$/;"	v
g:indexer_indexerListFilename	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/.vimprj/my.vim	/^let g:indexer_indexerListFilename = s:sPath.'\/.indexer_files'$/;"	v
g:indexer_indexerListFilename	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/lib1/.vimprj/my.vim	/^let g:indexer_indexerListFilename = s:sVimprjPath.'\/.indexer_files'$/;"	v
g:indexer_indexerListFilename	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/lib2/.vimprj/my.vim	/^let g:indexer_indexerListFilename = s:sVimprjPath.'\/.indexer_files'$/;"	v
g:indexer_indexerListFilename	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/myproj/.vimprj/my.vim	/^let g:indexer_indexerListFilename = s:sVimprjPath.'\/.indexer_files'$/;"	v
g:indexer_indexerListFilename	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_indexerListFilename = $HOME.'\/.indexer_files'$/;"	v
g:indexer_projectName	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_projectName = ''$/;"	v
g:indexer_projectsSettingsFilename	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/.vimprj/my.vim	/^let g:indexer_projectsSettingsFilename = s:sPath.'\/.vimprojects'$/;"	v
g:indexer_projectsSettingsFilename	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_projectsSettingsFilename = $HOME.'\/.vimprojects'$/;"	v
g:indexer_shortProjParentNames	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_shortProjParentNames = 0$/;"	v
g:indexer_useSedWhenAppend	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_useSedWhenAppend = 1$/;"	v
g:indexer_vimExecutable	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let g:indexer_vimExecutable = '*auto*'$/;"	v
g:lightline#colorscheme#gruvbox#palette	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let g:lightline#colorscheme#gruvbox#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_airline	plugged/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_clang_format	plugged/vim-clang-format/plugin/clang_format.vim	/^let g:loaded_clang_format = 1$/;"	v
g:loaded_commentary	plugged/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_cursormode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let g:loaded_cursormode = 1$/;"	v
g:loaded_indexer	plugged/indexer.tar.gz/plugin/indexer.vim	/^let g:loaded_indexer  = 1$/;"	v
g:loaded_magit	plugged/vimagit/plugin/magit.vim	/^let g:loaded_magit = 1$/;"	v
g:loaded_nerdtree_autoload	plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_surround	plugged/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_vim_airline_zoomwintab	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let g:loaded_vim_airline_zoomwintab = 1$/;"	v
g:loaded_vimwiki	plugged/vimwiki/plugin/vimwiki.vim	/^let g:loaded_vimwiki = 1$/;"	v
g:loaded_vimwiki_auto	plugged/vimwiki/autoload/vimwiki/base.vim	/^let g:loaded_vimwiki_auto = 1$/;"	v
g:loaded_vimwiki_diary_auto	plugged/vimwiki/autoload/vimwiki/diary.vim	/^let g:loaded_vimwiki_diary_auto = 1$/;"	v
g:loaded_vimwiki_html_auto	plugged/vimwiki/autoload/vimwiki/html.vim	/^let g:loaded_vimwiki_html_auto = 1$/;"	v
g:loaded_vimwiki_list_auto	plugged/vimwiki/autoload/vimwiki/lst.vim	/^let g:loaded_vimwiki_list_auto = 1$/;"	v
g:loaded_vimwiki_tbl_auto	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^let g:loaded_vimwiki_tbl_auto = 1$/;"	v
g:magit_auto_close	plugged/vimagit/plugin/magit.vim	/^let g:magit_auto_close             = get(g:, 'magit_auto_close',                0)$/;"	v
g:magit_auto_foldopen	plugged/vimagit/plugin/magit.vim	/^let g:magit_auto_foldopen            = get(g:, 'magit_auto_foldopen',               1)$/;"	v
g:magit_bin_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_bin_re   = '^Binary files '$/;"	v
g:magit_close_commit_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_close_commit_mapping   = get(g:, 'magit_close_commit_mapping',      'CU' )$/;"	v
g:magit_close_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_close_mapping          = get(g:, 'magit_close_mapping',             'q' )$/;"	v
g:magit_commit_amend_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_commit_amend_mapping   = get(g:, 'magit_commit_amend_mapping',      'CA' )$/;"	v
g:magit_commit_fixup_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_commit_fixup_mapping   = get(g:, 'magit_commit_fixup_mapping',      'CF' )$/;"	v
g:magit_commit_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_commit_mapping         = get(g:, 'magit_commit_mapping',            'CC' )$/;"	v
g:magit_commit_mode	plugged/vimagit/common/magit_common.vim	/^let g:magit_commit_mode = {$/;"	v
g:magit_commit_title_limit	plugged/vimagit/plugin/magit.vim	/^let g:magit_commit_title_limit     = get(g:, 'magit_commit_title_limit',        50)$/;"	v
g:magit_default_fold_level	plugged/vimagit/plugin/magit.vim	/^let g:magit_default_fold_level     = get(g:, 'magit_default_fold_level',        1)$/;"	v
g:magit_default_sections	plugged/vimagit/plugin/magit.vim	/^let g:magit_default_sections       = get(g:, 'magit_default_sections',          ['info', 'global_help', 'commit', 'staged', 'unstaged'])$/;"	v
g:magit_default_show_all_files	plugged/vimagit/plugin/magit.vim	/^let g:magit_default_show_all_files = get(g:, 'magit_default_show_all_files',    1)$/;"	v
g:magit_diff_enlarge	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_diff_enlarge           = get(g:, 'magit_diff_enlarge',              '+' )$/;"	v
g:magit_diff_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_diff_re  = '^diff --git'$/;"	v
g:magit_diff_reset	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_diff_reset             = get(g:, 'magit_diff_reset',                '0' )$/;"	v
g:magit_diff_shrink	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_diff_shrink            = get(g:, 'magit_diff_shrink',               '-' )$/;"	v
g:magit_discard_hunk_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_discard_hunk_mapping   = get(g:, 'magit_discard_hunk_mapping',      'DDD' )$/;"	v
g:magit_discard_untracked_do_delete	plugged/vimagit/plugin/magit.vim	/^let g:magit_discard_untracked_do_delete = get(g:, 'magit_discard_untracked_do_delete',        0)$/;"	v
g:magit_edit_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_edit_mapping           = get(g:, 'magit_edit_mapping',              'E' )$/;"	v
g:magit_enabled	plugged/vimagit/plugin/magit.vim	/^let g:magit_enabled                = get(g:, 'magit_enabled',                   1)$/;"	v
g:magit_end_diff_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_end_diff_re  = '^$'$/;"	v
g:magit_eof_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_eof_re   = '\\%$'$/;"	v
g:magit_file_re	plugged/vimagit/common/magit_common.vim	/^	let g:magit_file_re .= status_code . '\\|'$/;"	v
g:magit_file_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_file_re  = '^\\('$/;"	v
g:magit_file_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_file_re .= 'unknown status\\): \\(.\\{-\\}\\)\\%( -> .*\\)\\?$'$/;"	v
g:magit_folding_close_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_folding_close_mapping  = get(g:, 'magit_folding_close_mapping',     [ 'zc', 'zC' ])$/;"	v
g:magit_folding_open_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_folding_open_mapping   = get(g:, 'magit_folding_open_mapping',      [ 'zo', 'zO' ])$/;"	v
g:magit_folding_toggle_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_folding_toggle_mapping = get(g:, 'magit_folding_toggle_mapping',    [ '<CR>' ])$/;"	v
g:magit_git_cmd	plugged/vimagit/plugin/magit.vim	/^let g:magit_git_cmd                = get(g:, 'magit_git_cmd'          ,         "git")$/;"	v
g:magit_git_status_code	plugged/vimagit/common/magit_common.vim	/^let g:magit_git_status_code = {$/;"	v
g:magit_hunk_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_hunk_re  = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
g:magit_ignore_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_ignore_mapping         = get(g:, 'magit_ignore_mapping',            'I' )$/;"	v
g:magit_jump_next_hunk	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_jump_next_hunk         = get(g:, 'magit_jump_next_hunk',            '<C-N>')$/;"	v
g:magit_jump_prev_hunk	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_jump_prev_hunk         = get(g:, 'magit_jump_prev_hunk',            '<C-P>')$/;"	v
g:magit_last_updated_buffer	plugged/vimagit/plugin/magit.vim	/^let g:magit_last_updated_buffer = ''$/;"	v
g:magit_mark_line_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_mark_line_mapping      = get(g:, 'magit_mark_line_mapping',         'M' )$/;"	v
g:magit_refresh_gitgutter	plugged/vimagit/plugin/magit.vim	/^let g:magit_refresh_gitgutter      = get(g:, 'magit_refresh_gitgutter',         0)$/;"	v
g:magit_refresh_gutter	plugged/vimagit/plugin/magit.vim	/^let g:magit_refresh_gutter         = get(g:, 'magit_refresh_gutter'   ,         1)$/;"	v
g:magit_reload_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_reload_mapping         = get(g:, 'magit_reload_mapping',            'R' )$/;"	v
g:magit_scrolloff	plugged/vimagit/plugin/magit.vim	/^let g:magit_scrolloff              = get(g:, 'magit_scrolloff',                 3)$/;"	v
g:magit_section_info	plugged/vimagit/common/magit_common.vim	/^let g:magit_section_info = {$/;"	v
g:magit_section_re	plugged/vimagit/common/magit_common.vim	/^	let g:magit_section_re .= section_name . '\\|'$/;"	v
g:magit_section_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_section_re  = '^\\('$/;"	v
g:magit_section_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_section_re .= 'unknown section\\)$'$/;"	v
g:magit_sections	plugged/vimagit/common/magit_common.vim	/^let g:magit_sections = {$/;"	v
g:magit_show_help	plugged/vimagit/plugin/magit.vim	/^let g:magit_show_help              = get(g:, 'magit_show_help',                 0)$/;"	v
g:magit_show_magit_mapping	plugged/vimagit/plugin/magit.vim	/^let g:magit_show_magit_mapping     = get(g:, 'magit_show_magit_mapping',        '<leader>M' )$/;"	v
g:magit_stage_file_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_stage_file_mapping     = get(g:, 'magit_stage_file_mapping',        'F' )$/;"	v
g:magit_stage_hunk_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_stage_hunk_mapping     = get(g:, 'magit_stage_hunk_mapping',        'S' )$/;"	v
g:magit_stage_line_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_stage_line_mapping     = get(g:, 'magit_stage_line_mapping',        'L' )$/;"	v
g:magit_stash_re	plugged/vimagit/common/magit_common.vim	/^let g:magit_stash_re = '^stash@{\\d\\+}:'$/;"	v
g:magit_toggle_help_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^let g:magit_toggle_help_mapping    = get(g:, 'magit_toggle_help_mapping',       '?' )$/;"	v
g:magit_warning_max_lines	plugged/vimagit/plugin/magit.vim	/^let g:magit_warning_max_lines      = get(g:, 'magit_warning_max_lines',         10000)$/;"	v
g:niji_dark_colours	plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:proj_project_filename	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/.vimprj/my.vim	/^let g:proj_project_filename=s:sPath.'\/.vimprojects'$/;"	v
g:rainbow_conf	plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_ctermfgs	plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_guifgs	plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rbpt_colorpairs	plugged/gruvbox/colors/gruvbox.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:taboo_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
g:terminal_color_0	colors/jellybeans.vim	/^  let g:terminal_color_0  = "#444444"$/;"	v
g:terminal_color_0	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_0 = s:bg0[0]$/;"	v
g:terminal_color_1	colors/jellybeans.vim	/^  let g:terminal_color_1  = "#cf694c"$/;"	v
g:terminal_color_1	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_1 = s:gb.neutral_red[0]$/;"	v
g:terminal_color_10	colors/jellybeans.vim	/^  let g:terminal_color_10 = "#9aa50d"$/;"	v
g:terminal_color_10	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_10 = s:green[0]$/;"	v
g:terminal_color_11	colors/jellybeans.vim	/^  let g:terminal_color_11 = "#ffe2a3"$/;"	v
g:terminal_color_11	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_11 = s:yellow[0]$/;"	v
g:terminal_color_12	colors/jellybeans.vim	/^  let g:terminal_color_12 = "#93bedc"$/;"	v
g:terminal_color_12	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_12 = s:blue[0]$/;"	v
g:terminal_color_13	colors/jellybeans.vim	/^  let g:terminal_color_13 = "#e539e5"$/;"	v
g:terminal_color_13	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_13 = s:purple[0]$/;"	v
g:terminal_color_14	colors/jellybeans.vim	/^  let g:terminal_color_14 = "#82c6f9"$/;"	v
g:terminal_color_14	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_14 = s:aqua[0]$/;"	v
g:terminal_color_15	colors/jellybeans.vim	/^  let g:terminal_color_15 = "#ffffff"$/;"	v
g:terminal_color_15	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_15 = s:fg1[0]$/;"	v
g:terminal_color_2	colors/jellybeans.vim	/^  let g:terminal_color_2  = "#9aa50d"$/;"	v
g:terminal_color_2	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_2 = s:gb.neutral_green[0]$/;"	v
g:terminal_color_3	colors/jellybeans.vim	/^  let g:terminal_color_3  = "#d7ac4c"$/;"	v
g:terminal_color_3	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_3 = s:gb.neutral_yellow[0]$/;"	v
g:terminal_color_4	colors/jellybeans.vim	/^  let g:terminal_color_4  = "#6d8acf"$/;"	v
g:terminal_color_4	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_4 = s:gb.neutral_blue[0]$/;"	v
g:terminal_color_5	colors/jellybeans.vim	/^  let g:terminal_color_5  = "#ca30c7"$/;"	v
g:terminal_color_5	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_5 = s:gb.neutral_purple[0]$/;"	v
g:terminal_color_6	colors/jellybeans.vim	/^  let g:terminal_color_6  = "#c6b3ff"$/;"	v
g:terminal_color_6	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_6 = s:gb.neutral_aqua[0]$/;"	v
g:terminal_color_7	colors/jellybeans.vim	/^  let g:terminal_color_7  = "#e1e1e1"$/;"	v
g:terminal_color_7	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_7 = s:fg4[0]$/;"	v
g:terminal_color_8	colors/jellybeans.vim	/^  let g:terminal_color_8  = "#686868"$/;"	v
g:terminal_color_8	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_8 = s:gray[0]$/;"	v
g:terminal_color_9	colors/jellybeans.vim	/^  let g:terminal_color_9  = "#ca6b4d"$/;"	v
g:terminal_color_9	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_9 = s:red[0]$/;"	v
g:test_script_dir	plugged/vimagit/test/utils.vim	/^let g:test_script_dir = $VIMAGIT_PATH . '\/test\/'$/;"	v
g:vimagit_path	plugged/vimagit/plugin/magit.vim	/^let g:vimagit_path = fnameescape(resolve(expand('<sfile>:p:h')))$/;"	v
g:vimagit_version	plugged/vimagit/plugin/magit.vim	/^let g:vimagit_version = [1, 7, 3]$/;"	v
g:vimprj#loaded	plugged/vimprj/autoload/vimprj.vim	/^let g:vimprj#loaded            = 1$/;"	v
g:vimprj#version	plugged/vimprj/autoload/vimprj.vim	/^let g:vimprj#version           = 111$/;"	v
g:vimshell_escape_colors	plugged/gruvbox/colors/gruvbox.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:vimwiki_ext2syntax	init.vim	/^let g:vimwiki_ext2syntax = {'.Rmd': 'markdown', '.rmd': 'markdown','.md': 'markdown', '.markdown': 'markdown', '.mdown': 'markdown'}$/;"	v
g:vimwiki_list	init.vim	/^let g:vimwiki_list = [{'path': '~\/vimwiki', 'syntax': 'markdown', 'ext': '.md'}]$/;"	v
g:vimwiki_max_scan_for_caption	plugged/vimwiki/autoload/vimwiki/base.vim	/^let g:vimwiki_max_scan_for_caption = 5$/;"	v
gc	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	plugged/vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gcc	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
getGruvColor	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^function! s:getGruvColor(group)$/;"	f
getVers	plugged/vimwiki/test/run_tests.sh	/^getVers() {$/;"	f
get_a_neighbor_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_a_neighbor_item(item) abort$/;"	f
get_a_neighbor_item_in_column	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_a_neighbor_item_in_column(lnum, column) abort$/;"	f
get_accented_line	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
get_airline_themes	plugged/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
get_aligned_rows	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_aligned_rows(lnum, col1, col2, depth) abort$/;"	f
get_all_headers	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_all_headers(fl, maxlevel) abort$/;"	f
get_another_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:get_another_header(headers, current_index, direction, operation) abort$/;"	f
get_any_item_of_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_any_item_of_level(cur_ln, cur_lvl, org_lvl) abort$/;"	f
get_array	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(guifg, guibg, ctermfg, ctermbg, opts) abort$/;"	f
get_cell_aligns	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_cell_aligns(lnum, ...) abort$/;"	f
get_cell_aligns_fast	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_cell_aligns_fast(rows) abort$/;"	f
get_cell_max_lens	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_cell_max_lens(lnum, ...) abort$/;"	f
get_color	plugged/goyo.vim/autoload/goyo.vim	/^function! s:get_color(group, attr)$/;"	f
get_color_map	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_color_map()$/;"	f
get_corresponding_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_corresponding_item(lnum) abort$/;"	f
get_counts	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! s:get_counts()$/;"	f
get_diagnostics	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:get_diagnostics()$/;"	f
get_first_child	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_first_child(item) abort$/;"	f
get_first_header	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_first_header(fl) abort$/;"	f
get_first_item_in_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_first_item_in_list(item, ignore_kind) abort$/;"	f
get_html_template	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:get_html_template(template) abort$/;"	f
get_hunks_changes	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes() abort$/;"	f
get_hunks_coc	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_coc() abort$/;"	f
get_hunks_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty() abort$/;"	f
get_hunks_gitgutter	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter() abort$/;"	f
get_hunks_signify	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify() abort$/;"	f
get_idx_list_markers	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_idx_list_markers(item) abort$/;"	f
get_indent	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_indent(lnum, depth) abort$/;"	f
get_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_item(lnum) abort$/;"	f
get_item_of_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_item_of_level(cur_ln, cur_lvl, org_lvl, org_regex) abort$/;"	f
get_last_item_in_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_last_item_in_list(item, ignore_kind) abort$/;"	f
get_last_line_of_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_last_line_of_item(item) abort$/;"	f
get_last_line_of_item_incl_children	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_last_line_of_item_incl_children(item) abort$/;"	f
get_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_level(lnum) abort$/;"	f
get_links	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:get_links(wikifile, idx) abort$/;"	f
get_min_header_level	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_min_header_level(headers) abort$/;"	f
get_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_mode()$/;"	f
get_month_name	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_month_name(month) abort$/;"	f
get_next_child_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_next_child_item(parent, child) abort$/;"	f
get_next_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_next_line(lnum, ...) abort$/;"	f
get_next_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_next_list_item(item, ignore_kind) abort$/;"	f
get_next_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_next_mrkr(item) abort$/;"	f
get_next_sign_id	plugged/vimagit/autoload/magit/sign.vim	/^function! s:get_next_sign_id()$/;"	f
get_number	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:get_number(index)$/;"	f
get_parent	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_parent(item) abort$/;"	f
get_position_links	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:get_position_links(link) abort$/;"	f
get_prev_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_prev_line(lnum) abort$/;"	f
get_prev_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_prev_list_item(item, ignore_kind) abort$/;"	f
get_prev_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_prev_mrkr(item) abort$/;"	f
get_rate	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:get_rate(item) abort$/;"	f
get_rows	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:get_rows(lnum, ...) abort$/;"	f
get_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
get_separator_change	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change(new_group, old_group, end_group, sep_size, alt_sep_size)$/;"	f
get_separator_change_with_end	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change_with_end(new_group, old_group, new_end_group, old_end_group, sep_size, alt_sep_size)$/;"	f
get_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
get_syn	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what, mode) abort$/;"	f
get_transitioned_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
get_version	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:get_version() abort$/;"	f
get_wiki_buffers	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:get_wiki_buffers() abort$/;"	f
get_wikifile_url	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:get_wikifile_url(wikifile) abort$/;"	f
get_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  function! s:get_wordcount(visual_mode_active)$/;"	f
getchar	plugged/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getg	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:getg(name, default) abort$/;"	f
ggVGgq	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        normal ggVGgq$/;"	m
ggVGx	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        normal ggVGx$/;"	m
git_dir	autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
git_local_branch	autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
git_origin_branch	autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
git_origin_url	autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
git_revision	autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
go	plugged/vim-commentary/plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
goyo#execute	plugged/goyo.vim/autoload/goyo.vim	/^function! goyo#execute(bang, dim)$/;"	f
goyo_off	plugged/goyo.vim/autoload/goyo.vim	/^function! s:goyo_off()$/;"	f
goyo_on	plugged/goyo.vim/autoload/goyo.vim	/^function! s:goyo_on(dim)$/;"	f
grey_color	colors/jellybeans.vim	/^  fun! s:grey_color(n)$/;"	f
grey_level	colors/jellybeans.vim	/^  fun! s:grey_level(n)$/;"	f
grey_number	colors/jellybeans.vim	/^  fun! s:grey_number(x)$/;"	f
group	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^      let group = airline#extensions#tabline#group_of_bufnr(buffers, nr) . "_right"$/;"	v
group_links	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:group_links(links) abort$/;"	f
group_not_done	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:group_not_done(list, name) abort$/;"	f
gruvbox#hls_hide	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_hide()$/;"	f
gruvbox#hls_show	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_show()$/;"	f
gruvbox#hls_toggle	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_toggle()$/;"	f
gruvbox#invert_signs_toggle	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#invert_signs_toggle()$/;"	f
guess_kind_of_numbered_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:guess_kind_of_numbered_item(item) abort$/;"	f
gui2cui	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback) abort$/;"	f
handleLeftClick	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick() abort$/;"	f
handleMiddleMouse	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse() abort$/;"	f
has_abs_path	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:has_abs_path(fname) abort$/;"	f
has_vimproc	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:has_vimproc() abort$/;"	f
hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
head	plugged/vimwiki/autoload/vimwiki/html.vim	/^        let head = idx$/;"	v
head	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let head = 0$/;"	v
hide_linenr	plugged/goyo.vim/autoload/goyo.vim	/^function! s:hide_linenr()$/;"	f
hide_statusline	plugged/goyo.vim/autoload/goyo.vim	/^function! s:hide_statusline()$/;"	f
highlight_existing_links	plugged/vimwiki/syntax/vimwiki.vim	/^function! s:highlight_existing_links() abort$/;"	f
highlight_existing_links	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:highlight_existing_links() abort$/;"	f
hl	plugged/vim-airline/t/highlighter.vim	/^      let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	plugged/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hl_group_exists	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:hl_group_exists(group) abort$/;"	f
hsl2color	plugged/vim-css-color/autoload/css_color.vim	/^function! s:hsl2color(h,s,l)$/;"	f
html_insert_contents	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:html_insert_contents(html_lines, content) abort$/;"	f
in_list	plugged/vimwiki/autoload/vimwiki/html.vim	/^  let in_list = (len(a:lists) > 0)$/;"	v
incl_match_arg	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:incl_match_arg(nn_index) abort$/;"	f
increase_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increase_level(item) abort$/;"	f
increment_1	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_1(value) abort$/;"	f
increment_A	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_A(value) abort$/;"	f
increment_I	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_I(value) abort$/;"	f
increment_a	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_a(value) abort$/;"	f
increment_i	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:increment_i(value) abort$/;"	f
indent	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let indent = stridx(line, lstSym)$/;"	v
indent_line_by	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:indent_line_by(lnum, indent_by) abort$/;"	f
indent_multiline	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:indent_multiline(prev_item, lnum) abort$/;"	f
infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
init	plugged/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
initCustomOpenArgs	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs() abort$/;"	f
init_buffer	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
init_pad	plugged/goyo.vim/autoload/goyo.vim	/^function! s:init_pad(command)$/;"	f
inputPrompt	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
inputreplacement	plugged/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	plugged/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	plugged/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
invoke_funcrefs	plugged/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
is_branch_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty() abort$/;"	f
is_closed	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:is_closed(item) abort$/;"	f
is_empty_or_none	colors/jellybeans.vim	/^fun! s:is_empty_or_none(str)$/;"	f
is_empty_region	plugged/vim-clang-format/autoload/operator/clang_format.vim	/^function! s:is_empty_region(begin, end) abort$/;"	f
is_excluded_window	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
is_first_column	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_first_column(lnum, cnum) abort$/;"	f
is_html_uptodate	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:is_html_uptodate(wikifile) abort$/;"	f
is_img_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:is_img_link(lnk) abort$/;"	f
is_last_column	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_last_column(lnum, cnum) abort$/;"	f
is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
is_powershell	autoload/plug.vim	/^function! s:is_powershell(shell)$/;"	f
is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
is_separator	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_separator(line) abort$/;"	f
is_separator_tail	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_separator_tail(line) abort$/;"	f
is_table	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:is_table(line) abort$/;"	f
is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
is_web_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:is_web_link(lnk) abort$/;"	f
is_wiki_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:is_wiki_link(link_infos) abort$/;"	f
isabsolute	autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
item	plugged/vimwiki/autoload/vimwiki/html.vim	/^        let item = remove(a:lists, -1)$/;"	v
item	plugged/vimwiki/autoload/vimwiki/html.vim	/^      let item = remove(a:lists, -1)$/;"	v
j	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^char j = reinterpret_cast<char>(k);$/;"	v
job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
jumpToChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last) abort$/;"	f
jumpToFirstChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node) abort$/;"	f
jumpToLastChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node) abort$/;"	f
jumpToNextSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node) abort$/;"	f
jumpToParent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node) abort$/;"	f
jumpToPrevSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node) abort$/;"	f
jumpToRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot() abort$/;"	f
jumpToSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward) abort$/;"	f
jump_to_anchor	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:jump_to_anchor(anchor) abort$/;"	f
jump_to_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
kbd_create_new_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_create_new_row(cols, goto_first) abort$/;"	f
kbd_goto_next_col	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_goto_next_col(jumpdown) abort$/;"	f
kbd_goto_next_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_goto_next_row() abort$/;"	f
kbd_goto_prev_col	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_goto_prev_col(jumpup) abort$/;"	f
kbd_goto_prev_row	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:kbd_goto_prev_row() abort$/;"	f
key	plugged/vimwiki/autoload/vimwiki/base.vim	/^    let key = empty(dir_rel_fsource) ? 'NaF' : dir_rel_fsource$/;"	v
languageclient_refresh	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:languageclient_refresh()$/;"	f
last_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let last_buffer = len(b.buffers) - 1$/;"	v
last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
lazy	autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
ldest	plugged/vimwiki/autoload/vimwiki/html.vim	/^  let ldest = a:ldest$/;"	v
legacy_airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:legacy_airline_ale_get_line_number(cnt, type) abort$/;"	f
line	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let line = substitute(a:line, '\\t', repeat(' ', &tabstop), 'g')$/;"	v
line_has_marker	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:line_has_marker(lnum) abort$/;"	f
lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
lines	plugged/vimwiki/autoload/vimwiki/html.vim	/^  let lines = []$/;"	v
linkify_image	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:linkify_image(src, descr, verbatim_str) abort$/;"	f
linkify_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:linkify_link(src, descr) abort$/;"	f
links_rx	plugged/vimwiki/autoload/vimwiki/base.vim	/^  let links_rx = '\\%(^\\s*$\\)\\|\\%('.vimwiki#vars#get_syntaxlocal('rxListBullet').'\\)'$/;"	v
links_rx	plugged/vimwiki/autoload/vimwiki/tags.vim	/^  let links_rx = '^\\%('.vimwiki#vars#get_syntaxlocal(tag_match).'\\)\\|'.$/;"	v
linux_handler	plugged/vimwiki/autoload/vimwiki/base.vim	/^  function! s:linux_handler(url) abort$/;"	f
load_color_def	colors/jellybeans.vim	/^  fun! s:load_color_def(group, def)$/;"	f
load_colors	colors/jellybeans.vim	/^  fun! s:load_colors(defs)$/;"	f
load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
load_tags_metadata	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:load_tags_metadata() abort$/;"	f
loaded_alternateFile	plugged/a.vim/plugin/a.vim	/^let loaded_alternateFile = 1$/;"	v
loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
loaded_nerd_tree	plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
lstRegExp	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstRegExp = ''$/;"	v
lstRegExp	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstRegExp = '^\\s*'.s:bullets.'\\s'$/;"	v
lstRegExp	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstRegExp = '^\\s*'.s:numbers.'\\s'$/;"	v
lstSym	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstSym = ''$/;"	v
lstSym	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstSym = matchstr(a:line, s:bullets)$/;"	v
lstSym	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstSym = matchstr(a:line, s:numbers)$/;"	v
lstTagClose	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstTagClose = ''$/;"	v
lstTagClose	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstTagClose = '<\/ol>'$/;"	v
lstTagClose	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstTagClose = '<\/ul>'$/;"	v
lstTagOpen	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstTagOpen = ''$/;"	v
lstTagOpen	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstTagOpen = '<ol>'$/;"	v
lstTagOpen	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let lstTagOpen = '<ul>'$/;"	v
macunix_handler	plugged/vimwiki/autoload/vimwiki/base.vim	/^  function! s:macunix_handler(url) abort$/;"	f
magit#close_commit	plugged/vimagit/plugin/magit.vim	/^function! magit#close_commit()$/;"	f
magit#close_magit	plugged/vimagit/plugin/magit.vim	/^function! magit#close_magit()$/;"	f
magit#commit_command	plugged/vimagit/plugin/magit.vim	/^function! magit#commit_command(mode)$/;"	f
magit#get_current_mode	plugged/vimagit/plugin/magit.vim	/^function! magit#get_current_mode()$/;"	f
magit#get_staged_files	plugged/vimagit/plugin/magit.vim	/^function! magit#get_staged_files()$/;"	f
magit#get_unstaged_files	plugged/vimagit/plugin/magit.vim	/^function! magit#get_unstaged_files()$/;"	f
magit#git#check_repo	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#check_repo()$/;"	f
magit#git#count_object	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#count_object()$/;"	f
magit#git#get_branch_name	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#get_branch_name(ref)$/;"	f
magit#git#get_commit_subject	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#get_commit_subject(ref)$/;"	f
magit#git#get_config	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#get_config(conf_name, default)$/;"	f
magit#git#get_remote_branch	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#get_remote_branch(ref, type)$/;"	f
magit#git#get_status	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#get_status()$/;"	f
magit#git#get_version	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#get_version()$/;"	f
magit#git#git_add	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#git_add(filename)$/;"	f
magit#git#git_apply	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#git_apply(header, selection)$/;"	f
magit#git#git_checkout	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#git_checkout(filename)$/;"	f
magit#git#git_diff	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#git_diff(filename, status, mode)$/;"	f
magit#git#git_dir	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#git_dir()$/;"	f
magit#git#git_reset	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#git_reset(filename)$/;"	f
magit#git#git_sub_summary	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#git_sub_summary(filename, mode)$/;"	f
magit#git#git_unapply	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#git_unapply(header, selection, mode)$/;"	f
magit#git#is_version_sup_equal	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#is_version_sup_equal(major, minor, rev)$/;"	f
magit#git#is_work_tree	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#is_work_tree(path)$/;"	f
magit#git#set_top_dir	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#set_top_dir(path)$/;"	f
magit#git#sub_check	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#sub_check(submodule, check_level)$/;"	f
magit#git#submodule_status	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#submodule_status()$/;"	f
magit#git#top_dir	plugged/vimagit/autoload/magit/git.vim	/^function! magit#git#top_dir()$/;"	f
magit#helper#get_filename	plugged/vimagit/autoload/magit/helper.vim	/^function! magit#helper#get_filename()$/;"	f
magit#helper#get_hunkheader_line_nb	plugged/vimagit/autoload/magit/helper.vim	/^function! magit#helper#get_hunkheader_line_nb()$/;"	f
magit#helper#get_section	plugged/vimagit/autoload/magit/helper.vim	/^function! magit#helper#get_section()$/;"	f
magit#ignore_file	plugged/vimagit/plugin/magit.vim	/^function! magit#ignore_file() abort$/;"	f
magit#jump_hunk	plugged/vimagit/plugin/magit.vim	/^function! magit#jump_hunk(dir)$/;"	f
magit#jump_to	plugged/vimagit/plugin/magit.vim	/^function! magit#jump_to()$/;"	f
magit#mapping#get_section_help	plugged/vimagit/autoload/magit/mapping.vim	/^function! magit#mapping#get_section_help(section)$/;"	f
magit#mapping#get_section_help_line_nb	plugged/vimagit/autoload/magit/mapping.vim	/^function! magit#mapping#get_section_help_line_nb(section)$/;"	f
magit#mapping#set_default	plugged/vimagit/autoload/magit/mapping.vim	/^function! magit#mapping#set_default()$/;"	f
magit#mark_vselect	plugged/vimagit/plugin/magit.vim	/^function! magit#mark_vselect() range$/;"	f
magit#open_close_folding	plugged/vimagit/plugin/magit.vim	/^function! magit#open_close_folding(...)$/;"	f
magit#show_magit	plugged/vimagit/plugin/magit.vim	/^function! magit#show_magit(display, ...)$/;"	f
magit#show_version	plugged/vimagit/plugin/magit.vim	/^function! magit#show_version()$/;"	f
magit#sign#add_sign	plugged/vimagit/autoload/magit/sign.vim	/^function! magit#sign#add_sign(line, type, bufnr)$/;"	f
magit#sign#find_signs	plugged/vimagit/autoload/magit/sign.vim	/^function! magit#sign#find_signs(pattern, startline, endline)$/;"	f
magit#sign#find_stage_signs	plugged/vimagit/autoload/magit/sign.vim	/^function! magit#sign#find_stage_signs(startline, endline)$/;"	f
magit#sign#init	plugged/vimagit/autoload/magit/sign.vim	/^function! magit#sign#init()$/;"	f
magit#sign#remove_all	plugged/vimagit/autoload/magit/sign.vim	/^function! magit#sign#remove_all(...)$/;"	f
magit#sign#remove_sign	plugged/vimagit/autoload/magit/sign.vim	/^function! magit#sign#remove_sign(id)$/;"	f
magit#sign#remove_signs	plugged/vimagit/autoload/magit/sign.vim	/^function! magit#sign#remove_signs(sign_ids)$/;"	f
magit#sign#toggle_signs	plugged/vimagit/autoload/magit/sign.vim	/^function! magit#sign#toggle_signs(type, startline, endline)$/;"	f
magit#stage_block	plugged/vimagit/plugin/magit.vim	/^function! magit#stage_block(selection, discard) abort$/;"	f
magit#stage_file	plugged/vimagit/plugin/magit.vim	/^function! magit#stage_file()$/;"	f
magit#stage_hunk	plugged/vimagit/plugin/magit.vim	/^function! magit#stage_hunk(discard)$/;"	f
magit#stage_vselect	plugged/vimagit/plugin/magit.vim	/^function! magit#stage_vselect() range$/;"	f
magit#state#add_file	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#add_file(mode, status, filename, depth) dict$/;"	f
magit#state#check_max_lines	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#check_max_lines(file) dict$/;"	f
magit#state#file_get_filename_header	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#file_get_filename_header() dict$/;"	f
magit#state#file_get_flat_hunks	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#file_get_flat_hunks() dict$/;"	f
magit#state#file_get_header	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#file_get_header() dict$/;"	f
magit#state#file_get_hunks	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#file_get_hunks() dict$/;"	f
magit#state#get_file	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#get_file(mode, filename, ...) dict$/;"	f
magit#state#get_filenames	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#get_filenames(mode) dict$/;"	f
magit#state#get_files	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#get_files(mode) dict$/;"	f
magit#state#get_files_nb	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#get_files_nb(mode) dict$/;"	f
magit#state#get_files_ordered	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#get_files_ordered(mode) dict$/;"	f
magit#state#init_file_visible	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#init_file_visible() dict$/;"	f
magit#state#is_file_dir	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#is_file_dir() dict$/;"	f
magit#state#is_file_visible	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#is_file_visible() dict$/;"	f
magit#state#must_be_added	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#must_be_added() dict$/;"	f
magit#state#set_file_visible	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#set_file_visible(val) dict$/;"	f
magit#state#set_files_visible	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#set_files_visible(is_visible) dict$/;"	f
magit#state#state	plugged/vimagit/autoload/magit/state.vim	/^let magit#state#state = {$/;"	v
magit#state#toggle_file_visible	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#toggle_file_visible() dict$/;"	f
magit#state#update	plugged/vimagit/autoload/magit/state.vim	/^function! magit#state#update() dict$/;"	f
magit#sys#print_shell_error	plugged/vimagit/autoload/magit/sys.vim	/^function! magit#sys#print_shell_error()$/;"	f
magit#sys#system	plugged/vimagit/autoload/magit/sys.vim	/^function! magit#sys#system(...)$/;"	f
magit#sys#system_noraise	plugged/vimagit/autoload/magit/sys.vim	/^function! magit#sys#system_noraise(...)$/;"	f
magit#sys#systemlist	plugged/vimagit/autoload/magit/sys.vim	/^function! magit#sys#systemlist(...)$/;"	f
magit#sys#systemlist_noraise	plugged/vimagit/autoload/magit/sys.vim	/^function! magit#sys#systemlist_noraise(...)$/;"	f
magit#toggle_help	plugged/vimagit/plugin/magit.vim	/^function! magit#toggle_help()$/;"	f
magit#update_buffer	plugged/vimagit/plugin/magit.vim	/^function! magit#update_buffer(...)$/;"	f
magit#update_diff	plugged/vimagit/plugin/magit.vim	/^function! magit#update_diff(way)$/;"	f
magit#utils#add_quotes	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#add_quotes(filename)$/;"	f
magit#utils#append_file	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#append_file(file, lines)$/;"	f
magit#utils#bufnr	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#bufnr()$/;"	f
magit#utils#chdir	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#chdir(dir)$/;"	f
magit#utils#clear_undo	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#clear_undo()$/;"	f
magit#utils#flatten	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#flatten(list)$/;"	f
magit#utils#is_submodule	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#is_submodule(dirname)$/;"	f
magit#utils#join_list	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#join_list(list)$/;"	f
magit#utils#ls_all	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#ls_all(path)$/;"	f
magit#utils#refresh_submodule_list	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#refresh_submodule_list()$/;"	f
magit#utils#remove_quotes	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#remove_quotes(filename)$/;"	f
magit#utils#search_buffer_in_windows	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#search_buffer_in_windows(filename)$/;"	f
magit#utils#setbufnr	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#setbufnr(bufnr)$/;"	f
magit#utils#start_profile	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#start_profile(...)$/;"	f
magit#utils#strip	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#strip(string)$/;"	f
magit#utils#strip_array	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#strip_array(array)$/;"	f
magit#utils#underline	plugged/vimagit/autoload/magit/utils.vim	/^function! magit#utils#underline(title)$/;"	f
magit_system	plugged/vimagit/autoload/magit/sys.vim	/^function! s:magit_system(...)$/;"	f
magit_systemlist	plugged/vimagit/autoload/magit/sys.vim	/^function! s:magit_systemlist(...)$/;"	f
main	plugged/indexer.tar.gz/doc/examples/blank/main.c	/^int main()$/;"	f
main	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/main.c	/^int main()$/;"	f
main	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/myproj/main.c	/^int main(void)$/;"	f
main	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/main.c	/^int main()$/;"	f
main	plugged/vim-clang-format/test/t/test.cpp	/^int main()$/;"	f
make_style_options	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:make_style_options() abort$/;"	f
make_tag	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:make_tag(line, regexp, func, ...) abort$/;"	f
map	plugged/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
mapleader	init.vim	/^let mapleader =","$/;"	v
maps_nop	plugged/goyo.vim/autoload/goyo.vim	/^function! s:maps_nop()$/;"	f
maps_resize	plugged/goyo.vim/autoload/goyo.vim	/^function! s:maps_resize()$/;"	f
merge_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:merge_tags(metadata, pagename, file_metadata) abort$/;"	f
mg_create_diff_from_select	plugged/vimagit/plugin/magit.vim	/^function! s:mg_create_diff_from_select(select_lines)$/;"	f
mg_cut_str	plugged/vimagit/plugin/magit.vim	/^function! s:mg_cut_str(str, limit)$/;"	f
mg_display_files	plugged/vimagit/plugin/magit.vim	/^function! s:mg_display_files(mode, curdir, depth)$/;"	f
mg_get_commit_msg	plugged/vimagit/plugin/magit.vim	/^function! s:mg_get_commit_msg(...)$/;"	f
mg_get_commit_section	plugged/vimagit/plugin/magit.vim	/^function! s:mg_get_commit_section()$/;"	f
mg_get_info	plugged/vimagit/plugin/magit.vim	/^function! s:mg_get_info()$/;"	f
mg_get_staged_section	plugged/vimagit/plugin/magit.vim	/^function! s:mg_get_staged_section(mode)$/;"	f
mg_get_stashes	plugged/vimagit/plugin/magit.vim	/^function! s:mg_get_stashes()$/;"	f
mg_git_commit	plugged/vimagit/plugin/magit.vim	/^function! s:mg_git_commit(mode) abort$/;"	f
mg_mark_lines_in_hunk	plugged/vimagit/plugin/magit.vim	/^function! s:mg_mark_lines_in_hunk(start_select_line, end_select_line)$/;"	f
mg_open_close_folding_wrapper	plugged/vimagit/autoload/magit/mapping.vim	/^function! s:mg_open_close_folding_wrapper(mapping, ...)$/;"	f
mg_search_block	plugged/vimagit/plugin/magit.vim	/^function! s:mg_search_block(start_pattern, end_pattern, upper_limit_pattern,$/;"	f
mg_select_file_block	plugged/vimagit/plugin/magit.vim	/^function! s:mg_select_file_block()$/;"	f
mg_select_hunk_block	plugged/vimagit/plugin/magit.vim	/^function! s:mg_select_hunk_block()$/;"	f
mg_set_mapping	plugged/vimagit/autoload/magit/mapping.vim	/^function! s:mg_set_mapping(mode, mapping, function, ...)$/;"	f
mg_stage_closed_file	plugged/vimagit/plugin/magit.vim	/^function! s:mg_stage_closed_file(discard)$/;"	f
mid	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:mid(value, cnt) abort$/;"	f
my_func	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/myproj/main.c	/^int my_func(void)$/;"	f
my_func_1	plugged/indexer.tar.gz/doc/examples/blank/some_folder_1/some_header.c	/^int my_func_1()$/;"	f
my_func_1	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/some_folder_1/some_file.c	/^int my_func_1()$/;"	f
my_func_1	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/some_folder_1/some_header.c	/^int my_func_1()$/;"	f
my_func_2	plugged/indexer.tar.gz/doc/examples/blank/some_folder_1/some_header.c	/^int my_func_2()$/;"	f
my_func_2	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/some_folder_1/some_file.c	/^int my_func_2()$/;"	f
my_func_2	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/some_folder_1/some_header.c	/^int my_func_2()$/;"	f
my_global_int	plugged/indexer.tar.gz/doc/examples/blank/main.c	/^int  my_global_int;$/;"	v
my_global_int	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/main.c	/^int  my_global_int;$/;"	v
my_global_int	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/main.c	/^int  my_global_int;$/;"	v
my_global_long	plugged/indexer.tar.gz/doc/examples/blank/main.c	/^long my_global_long;$/;"	v
my_global_long	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/main.c	/^long my_global_long;$/;"	v
my_global_long	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/main.c	/^long my_global_long;$/;"	v
my_lib1	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/lib1/lib1.c	/^void my_lib1(void)$/;"	f
my_lib2	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/lib2/src/lib2.c	/^void my_lib2(void)$/;"	f
my_test	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/myproj/test.c	/^int my_test(void)$/;"	f
my_test_struct	plugged/indexer.tar.gz/doc/examples/blank/main.c	/^T_TestStruct1 my_test_struct;$/;"	v
my_test_struct	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/main.c	/^T_TestStruct1 my_test_struct;$/;"	v
my_test_struct	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/main.c	/^T_TestStruct1 my_test_struct;$/;"	v
my_value	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/myproj/main.c	/^int my_value = 5;$/;"	v
names	autoload/plug.vim	/^function! s:names(...)$/;"	f
neoterm_id	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:neoterm_id(bufnr) abort$/;"	f
nerdtree#checkForBrowse	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir) abort$/;"	f
nerdtree#closeBookmarksOnOpen	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeBookmarksOnOpen() abort$/;"	f
nerdtree#closeTreeOnOpen	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeOnOpen() abort$/;"	f
nerdtree#compareNodePaths	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodePaths(p1, p2) abort$/;"	f
nerdtree#compareNodes	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2) abort$/;"	f
nerdtree#completeBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P) abort$/;"	f
nerdtree#deprecated	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...) abort$/;"	f
nerdtree#echo	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg) abort$/;"	f
nerdtree#echoError	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg) abort$/;"	f
nerdtree#echoWarning	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg) abort$/;"	f
nerdtree#exec	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll) abort$/;"	f
nerdtree#has_opt	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name) abort$/;"	f
nerdtree#loadClassFiles	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles() abort$/;"	f
nerdtree#postSourceActions	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions() abort$/;"	f
nerdtree#renderView	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView() abort$/;"	f
nerdtree#runningCygwin	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin() abort$/;"	f
nerdtree#runningWindows	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows() abort$/;"	f
nerdtree#slash	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#slash() abort$/;"	f
nerdtree#ui_glue#bookmarkNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...) abort$/;"	f
nerdtree#ui_glue#chRootCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd() abort$/;"	f
nerdtree#ui_glue#clearBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks) abort$/;"	f
nerdtree#ui_glue#createDefaultBindings	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings() abort$/;"	f
nerdtree#ui_glue#invokeKeyMap	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key) abort$/;"	f
nerdtree#ui_glue#openBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name) abort$/;"	f
nerdtree#ui_glue#revealBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name) abort$/;"	f
nerdtree#ui_glue#setupCommands	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands() abort$/;"	f
nerdtree#ui_glue#upDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState) abort$/;"	f
nerdtree#version	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version(...) abort$/;"	f
new_airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:new_airline_ale_get_line_number(cnt, type) abort$/;"	f
new_url	plugged/vimwiki/autoload/vimwiki/base.vim	/^    let new_url = dir_rel_fsource . a:new_url$/;"	v
new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
nmapping_wrapper	plugged/vimagit/autoload/magit/mapping.vim	/^function! s:nmapping_wrapper(mapping, function, ...)$/;"	f
normalize_global_settings	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:normalize_global_settings() abort$/;"	f
normalize_link_syntax_n	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:normalize_link_syntax_n() abort$/;"	f
normalize_link_syntax_n	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! s:normalize_link_syntax_n() abort$/;"	f
normalize_link_syntax_v	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:normalize_link_syntax_v() abort$/;"	f
normalize_link_syntax_v	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! s:normalize_link_syntax_v() abort$/;"	f
normalize_path	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:normalize_path(path) abort$/;"	f
normalize_wikilocal_settings	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:normalize_wikilocal_settings() abort$/;"	f
nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
nvim_mq_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_mq_job_handler(job_id, data, event) dict$/;"	f
nvim_output_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_output_handler(job_id, data, event) dict$/;"	f
nvim_po_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_po_job_handler(job_id, data, event) dict$/;"	f
nvim_untracked_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_untracked_job_handler(job_id, data, event) dict$/;"	f
old_url_r	plugged/vimwiki/autoload/vimwiki/base.vim	/^    let old_url_r = cache_dict[key]$/;"	v
on_colorscheme_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
on_cursor_moved	plugged/vim-airline/plugin/airline.vim	/^function! s:on_cursor_moved()$/;"	f
on_exit_clean	plugged/vim-airline/autoload/airline/async.vim	/^function! s:on_exit_clean(...) dict abort$/;"	f
on_exit_mq	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
on_exit_po	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_po(channel) dict abort$/;"	f
on_exit_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_untracked(channel) dict abort$/;"	f
on_focus_gained	plugged/vim-airline/plugin/airline.vim	/^function! s:on_focus_gained()$/;"	f
on_stdout	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
on_window_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_window_changed(event)$/;"	f
one	plugged/indexer.tar.gz/doc/examples/blank/some_folder_1/some_header.h	/^   int one;$/;"	m	struct:S_TestStruct1
one	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/some_folder_1/some_file.h	/^   int one;$/;"	m	struct:S_TestStruct1
one	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/some_folder_1/some_header.h	/^   int one;$/;"	m	struct:S_TestStruct1
openExplorer	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node) abort$/;"	f
openHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target) abort$/;"	f
openHSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplitBookmark(bm) abort$/;"	f
openInNewTab	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target) abort$/;"	f
openInNewTabSilent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target) abort$/;"	f
openNodeRecursively	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node) abort$/;"	f
openVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target) abort$/;"	f
openVSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplitBookmark(bm) abort$/;"	f
open_wiki_buffer	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:open_wiki_buffer(item) abort$/;"	f
operator <	plugged/vim-cpp-enhanced-highlight/test/color2.cpp	/^bool operator<(const ConnectionString& other) const {$/;"	f
operator#clang_format#do	plugged/vim-clang-format/autoload/operator/clang_format.vim	/^function! operator#clang_format#do(motion_wise) abort$/;"	f
opfunc	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc(type, ...) abort " {{{1$/;"	f
opfunc2	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc2(...) abort$/;"	f
parameterized_wikiname	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:parameterized_wikiname(wikifile) abort$/;"	f
parse_arg	plugged/goyo.vim/autoload/goyo.vim	/^function! s:parse_arg(arg)$/;"	f
parse_line	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:parse_line(line, state) abort$/;"	f
parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
parse_screen	plugged/vim-css-color/autoload/css_color.vim	/^function! s:parse_screen()$/;"	f
pat	plugged/vimwiki/plugin/vimwiki.vim	/^  let pat = join(map(s:known_extensions, '"*" . v:val'), ',')$/;"	v
path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plug_call	autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
plug_expand	autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
plug_fnamemodify	autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
plug_getcwd	autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
plug_tempname	autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
plugin	plugged/vim-clang-format/plugin/clang_format.vim	/^augroup plugin-clang-format-auto-format$/;"	a
po_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:po_output(buf, file)$/;"	f
populate_extra_markdown_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:populate_extra_markdown_vars() abort$/;"	f
populate_global_variables	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:populate_global_variables() abort$/;"	f
populate_wikilocal_options	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:populate_wikilocal_options() abort$/;"	f
pos	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let pos = getpos('.')$/;"	v
pos	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let pos = getpos('.')$/;"	v
pos	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let pos = match(a:line, '^\\s*'.vimwiki#vars#get_syntaxlocal('rxBold'))$/;"	v
prealpath	plugged/vimagit/test/run.sh	/^function prealpath() {$/;"	f
prefix_highlight_value_with	colors/jellybeans.vim	/^fun! s:prefix_highlight_value_with(prefix, color)$/;"	f
prefix_zero	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:prefix_zero(num) abort$/;"	f
prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
prev	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let prev = line('w0')$/;"	v
prev	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let prev = GetBuffer()$/;"	v
previewBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark) abort$/;"	f
previewNodeCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node) abort$/;"	f
previewNodeHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node) abort$/;"	f
previewNodeHSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplitBookmark(bookmark) abort$/;"	f
previewNodeVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node) abort$/;"	f
previewNodeVSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplitBookmark(bookmark) abort$/;"	f
preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
printHelp	plugged/vimwiki/test/run_tests.sh	/^printHelp() {$/;"	f
printVersions	plugged/vimwiki/test/run_tests.sh	/^printVersions() {$/;"	f
print_wiki_list	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:print_wiki_list() abort$/;"	f
process	plugged/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process_date	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_date(placeholders, default_date) abort$/;"	f
process_inline_tags	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_inline_tags(line, header_ids) abort$/;"	f
process_tag_def_list	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_def_list(line, deflist) abort$/;"	f
process_tag_h	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_h(line, id) abort$/;"	f
process_tag_hr	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_hr(line) abort$/;"	f
process_tag_list	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_list(line, lists) abort$/;"	f
process_tag_math	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_math(line, math) abort$/;"	f
process_tag_para	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_para(line, para) abort$/;"	f
process_tag_pre	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_pre(line, pre) abort$/;"	f
process_tag_quote	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_quote(line, quote) abort$/;"	f
process_tag_table	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tag_table(line, table, header_ids) abort$/;"	f
process_tags_links	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tags_links(line) abort$/;"	f
process_tags_remove_links	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tags_remove_links(line) abort$/;"	f
process_tags_typefaces	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_tags_typefaces(line, header_ids) abort$/;"	f
process_title	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:process_title(placeholders, default_title) abort$/;"	f
processed	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let processed = 1$/;"	v
processed	plugged/vimwiki/autoload/vimwiki/html.vim	/^  let processed = 0$/;"	v
progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
promptToDelBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
prototype.add_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
prototype.add_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
prototype.add_section_spaced	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
prototype.build	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
prototype.build	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.build() dict$/;"	f
prototype.get_position	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.get_position() dict$/;"	f
prototype.insert_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_raw(text, position) dict$/;"	f
prototype.insert_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_section(group, contents, position) dict$/;"	f
prototype.insert_titles	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.insert_titles(current, first, last) dict$/;"	f
prototype.split	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
prototype.try_insert_title	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.try_insert_title(index, group, pos, sep_size, force) dict$/;"	f
rand	plugged/vim-airline/plugin/airline.vim	/^function! s:rand(max) abort$/;"	f
random_theme	plugged/vim-airline/plugin/airline.vim	/^function! s:random_theme() abort$/;"	f
rate_to_state	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:rate_to_state(rate) abort$/;"	f
read_captions	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:read_captions(files) abort$/;"	f
read_global_settings_from_user	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! s:read_global_settings_from_user() abort$/;"	f
reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
record_diagnostics	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:record_diagnostics(state)$/;"	f
redraw	plugged/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
refreshCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node) abort$/;"	f
refreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot() abort$/;"	f
regexp_of_marker	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:regexp_of_marker(item) abort$/;"	f
regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
reindent	plugged/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
relsz	plugged/goyo.vim/autoload/goyo.vim	/^function! s:relsz(expr, limit)$/;"	f
remove_blank_lines	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:remove_blank_lines(lines) abort$/;"	f
remove_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:remove_cb(item) abort$/;"	f
remove_italic_attr	colors/jellybeans.vim	/^fun! s:remove_italic_attr(attr)$/;"	f
remove_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:remove_mrkr(item) abort$/;"	f
remove_page_from_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:remove_page_from_tags(metadata, page_name) abort$/;"	f
remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
renameBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
reset_untracked_cache	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
resize_pads	plugged/goyo.vim/autoload/goyo.vim	/^function! s:resize_pads()$/;"	f
retry	autoload/plug.vim	/^function! s:retry()$/;"	f
reuseWin	plugged/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
revert	autoload/plug.vim	/^function! s:revert()$/;"	f
rgb	colors/jellybeans.vim	/^fun! s:rgb(rgb)$/;"	f
rgb2color	plugged/vim-css-color/autoload/css_color.vim	/^function! s:rgb2color(r,g,b)$/;"	f
rgb2xterm	plugged/vim-css-color/autoload/css_color.vim	/^	function! s:rgb2xterm(color)$/;"	f
rgb_color	colors/jellybeans.vim	/^  fun! s:rgb_color(x, y, z)$/;"	f
rgb_level	colors/jellybeans.vim	/^  fun! s:rgb_level(n)$/;"	f
rgb_number	colors/jellybeans.vim	/^  fun! s:rgb_number(x)$/;"	f
rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
root_path	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:root_path(subdir) abort$/;"	f
rtp	autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
runVader	plugged/vimwiki/test/run_tests.sh	/^runVader() {$/;"	f
runVint	plugged/vimwiki/test/run_tests.sh	/^runVint() {$/;"	f
rxSep	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:rxSep() abort$/;"	f
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['ffenc','%{strftime("%H:%M")}'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s:Bookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Creator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:DEB_LEVEL__ALL	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:DEB_LEVEL__ALL    = 3$/;"	v
s:DEB_LEVEL__ASYNC	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:DEB_LEVEL__ASYNC  = 1$/;"	v
s:DEB_LEVEL__PARSE	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:DEB_LEVEL__PARSE  = 2$/;"	v
s:Event	plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:KeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:MenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:Notifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Path	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:TAGS_METADATA_FILE_NAME	plugged/vimwiki/autoload/vimwiki/tags.vim	/^let s:TAGS_METADATA_FILE_NAME = '.vimwiki_tags'$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:_csscolor	plugged/vim-css-color/autoload/css_color.vim	/^let s:_csscolor   = s:_rgbacolor . '\\|' . s:_funcexpr$/;"	v
s:_funcexpr	plugged/vim-css-color/autoload/css_color.vim	/^let s:_funcexpr   = s:_funcname . '[(]' . s:_numval . s:_listsep . s:_numval . s:_listsep . s:_numval . s:_ws_ . s:_otherargs_ . '[)]'$/;"	v
s:_funcname	plugged/vim-css-color/autoload/css_color.vim	/^let s:_funcname   = '\\(rgb\\|hsl\\)a\\?' " submatch 2$/;"	v
s:_hexcolor	plugged/vim-css-color/autoload/css_color.vim	/^let s:_hexcolor   = '#\\(\\x\\{3}\\%(\\>\\|\\x\\{3}\\>\\)\\)' " submatch 1$/;"	v
s:_listsep	plugged/vim-css-color/autoload/css_color.vim	/^let s:_listsep    = s:_ws_ . ','$/;"	v
s:_numval	plugged/vim-css-color/autoload/css_color.vim	/^let s:_numval     = s:_ws_ . '\\(\\d\\{1,3}%\\?\\)' " submatch 3,4,5$/;"	v
s:_otherargs_	plugged/vim-css-color/autoload/css_color.vim	/^let s:_otherargs_ = '\\%(,[^)]*\\)\\?'$/;"	v
s:_rgbacolor	plugged/vim-css-color/autoload/css_color.vim	/^let s:_rgbacolor  = '#\\(\\x\\{3}\\%(\\>\\|\\x\\%(\\>\\|\\x\\{2}\\%(\\>\\|\\x\\{2}\\>\\)\\)\\)\\)' " submatch 1$/;"	v
s:_ws_	plugged/vim-css-color/autoload/css_color.vim	/^let s:_ws_        = '\\s*'$/;"	v
s:accents	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:active_winnr	plugged/vim-airline/plugin/airline.vim	/^let s:active_winnr = -1$/;"	v
s:airline_a_commandline	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_commandline = [ '#00005f' , '#00d700' , 17  , 40 ]$/;"	v
s:airline_a_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:airline_a_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:airline_a_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:airline_a_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:airline_b_commandline	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_commandline = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:airline_b_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:airline_b_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:airline_c_commandline	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_commandline = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:airline_c_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:airline_c_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:airline_initialized	plugged/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_tagbar_last_lookup_time	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:aqua	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:aqua   = s:getGruvColor('GruvboxAqua')$/;"	v
s:aqua	plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.faded_aqua$/;"	v
s:aqua	plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua[1]   = 14$/;"	v
s:background_color	colors/jellybeans.vim	/^    let s:background_color = s:overrides["background"]["guibg"]$/;"	v
s:background_color	colors/jellybeans.vim	/^let s:background_color = "151515"$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:basic16	plugged/vim-airline/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
s:bg0	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg0  = s:getGruvColor('GruvboxBg0')$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_hard$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_soft$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.dark0$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.light0$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg1	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg1  = s:getGruvColor('GruvboxBg1')$/;"	v
s:bg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.dark1$/;"	v
s:bg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.light1$/;"	v
s:bg2	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg2  = s:getGruvColor('GruvboxBg2')$/;"	v
s:bg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.dark2$/;"	v
s:bg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.light2$/;"	v
s:bg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.dark3$/;"	v
s:bg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.light3$/;"	v
s:bg4	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg4  = s:getGruvColor('GruvboxBg4')$/;"	v
s:bg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.dark4$/;"	v
s:bg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.light4$/;"	v
s:blue	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:blue   = s:getGruvColor('GruvboxBlue')$/;"	v
s:blue	plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.bright_blue$/;"	v
s:blue	plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.faded_blue$/;"	v
s:blue	plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue[1]   = 12$/;"	v
s:bold	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bold = ''$/;"	v
s:bold	plugged/gruvbox/colors/gruvbox.vim	/^let s:bold = 'bold,'$/;"	v
s:boolAsyncCommandInProgress	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:boolAsyncCommandInProgress = 0$/;"	v
s:boolInitialized	plugged/vimprj/autoload/vimprj.vim	/^let s:boolInitialized          = 0$/;"	v
s:boolNeedFinish	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let s:boolNeedFinish = 1$/;"	v
s:boolNeedFinish	plugged/vimprj/autoload/vimprj.vim	/^   let s:boolNeedFinish = 1$/;"	v
s:bool_OnFileOpen_executed	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:bool_OnFileOpen_executed = 0$/;"	v
s:bool_t	plugged/vim-clang-format/autoload/clang_format.vim	/^    let s:bool_t = -1$/;"	v
s:bool_t	plugged/vim-clang-format/autoload/clang_format.vim	/^    let s:bool_t = type(v:true)$/;"	v
s:buf_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:bufnr	plugged/vimagit/autoload/magit/utils.vim	/^let s:bufnr = 0$/;"	v
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	plugged/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:clean_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:clean_jobs     = {}$/;"	v
s:cmd_tmp	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let s:cmd_tmp = g:clang_format#command$/;"	v
s:color_bright	plugged/vim-css-color/autoload/css_color.vim	/^let s:color_bright  = {}$/;"	v
s:color_column	plugged/gruvbox/colors/gruvbox.vim	/^  let s:color_column = get(s:gb, g:gruvbox_color_column)$/;"	v
s:color_column	plugged/gruvbox/colors/gruvbox.vim	/^let s:color_column = s:bg1$/;"	v
s:color_idx	plugged/vim-css-color/autoload/css_color.vim	/^	let s:color_idx = {}$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:column_display	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:column_width	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:column_width = &columns$/;"	v
s:column_width	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:column_width = &columns$/;"	v
s:commit_mode	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^let s:commit_mode = {'ST': 'STAGING', 'CC': 'COMMIT', 'CA': 'AMEND'}$/;"	v
s:conceal	plugged/vimwiki/syntax/vimwiki.vim	/^let s:conceal = exists('+conceallevel') ? ' conceal' : ''$/;"	v
s:contexts	plugged/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:core_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/goyo.vim/autoload/goyo.vim	/^let s:cpo_save = &cpo$/;"	v
s:ctrlspace	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:cubergb	plugged/vim-css-color/autoload/css_color.vim	/^	let s:cubergb = [ 0x00, 0x5F, 0x87, 0xAF, 0xD7, 0xFF ]$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_bufnr = cur$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_bufnr = curbuf$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_bufnr = -1$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_modified = 0$/;"	v
s:current_syntax	plugged/vimwiki/syntax/vimwiki.vim	/^let s:current_syntax = vimwiki#vars#get_wikilocal('syntax')$/;"	v
s:current_tabcnt	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_tabline = b.build()$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_tabline = b.build()$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_tabnr = curtab$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabnr = -1$/;"	v
s:current_visible_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_visible_buffers = copy(b.buffers)$/;"	v
s:current_visible_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:dAsyncTasks	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:dAsyncTasks = {}$/;"	v
s:dProjFilesParsed	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:dProjFilesParsed = {}$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = '.'$/;"	v
s:def_backgroundDisabled	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_backgroundDisabled                = g:indexer_backgroundDisabled$/;"	v
s:def_ctagsCommandLineOptions	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_ctagsCommandLineOptions           = g:indexer_ctagsCommandLineOptions$/;"	v
s:def_ctagsDontSpecifyFilesIfPossible	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_ctagsDontSpecifyFilesIfPossible   = g:indexer_ctagsDontSpecifyFilesIfPossible$/;"	v
s:def_ctagsJustAppendTagsAtFileSave	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_ctagsJustAppendTagsAtFileSave     = g:indexer_ctagsJustAppendTagsAtFileSave$/;"	v
s:def_ctagsWriteFilelist	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_ctagsWriteFilelist                = g:indexer_ctagsWriteFilelist$/;"	v
s:def_dontUpdateTagsIfFileExists	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_dontUpdateTagsIfFileExists        = g:indexer_dontUpdateTagsIfFileExists$/;"	v
s:def_enableWhenProjectDirFound	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_enableWhenProjectDirFound         = g:indexer_enableWhenProjectDirFound$/;"	v
s:def_getAllSubdirsFromIndexerListFile	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_getAllSubdirsFromIndexerListFile  = g:indexer_getAllSubdirsFromIndexerListFile$/;"	v
s:def_handlePath	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_handlePath                        = g:indexer_handlePath$/;"	v
s:def_indexerListFilename	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_indexerListFilename               = expand(g:indexer_indexerListFilename)$/;"	v
s:def_projectName	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_projectName                       = g:indexer_projectName$/;"	v
s:def_projectsSettingsFilename	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_projectsSettingsFilename          = expand(g:indexer_projectsSettingsFilename)$/;"	v
s:def_useSedWhenAppend	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:def_useSedWhenAppend                  = g:indexer_useSedWhenAppend$/;"	v
s:default_checks	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file', 'conflicts']$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax = g:vimwiki_syntax_variables['default']$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.bold_match = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<=\\*__Text__\\*'.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.bold_search = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<=\\*\\zs\\%([^*`[:space:]][^*`]*'.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.bullet_types = ['-', '*', '#']$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_bold = '*'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_bolditalic = '\\*_'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_code = '`'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_deltext = '\\~\\~'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_eqin = '\\$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_italic = '_'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_italicbold = '_\\*'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_subscript = ',,'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.char_superscript = '^'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.header_match = '^\\s*\\(=\\{1,6}\\)=\\@!\\s*__Header__\\s*\\1=\\@!\\s*$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.header_search = '^\\s*\\(=\\{1,6}\\)\\([^=].*[^=]\\)\\1\\s*$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.list_markers = ['-', '1.', '*', 'I)', 'a)']$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.number_types = ['1)', '1.', 'i)', 'I)', 'a)', 'A)']$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.recurring_bullets = 0$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxBoldItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxCode = '`[^`]\\+`'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxComment = '^\\s*%%.*$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxDelText = '\\~\\~[^~`]\\+\\~\\~'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxEqIn = '\\$[^$`]\\+\\$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxH = '='$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxHR = '^-----*$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxItalicBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxListDefine = '::\\(\\s\\|$\\)'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxMathEnd = '}}\\$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxMathStart = '{{\\$'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxPreEnd = '}}}'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxPreStart = '{{{'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxSubScript = ',,[^,`]\\+,,'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxSuperScript = '\\^[^^`]\\+\\^'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxTableSep = '|'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.rxTags = '\\%(^\\|\\s\\)\\@<=:\\%([^:''[:space:]]\\+:\\)\\+\\%(\\s\\|$\\)\\@='$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.symH = 1$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.tag_match =  '\\(^\\|\\s\\):\\([^:''[:space:]]\\+:\\)*__Tag__:'.$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.tag_search = '\\(^\\|\\s\\)\\zs:\\([^:''[:space:]]\\+:\\)\\+\\ze\\(\\s\\|$\\)'$/;"	v
s:default_syntax	plugged/vimwiki/syntax/vimwiki_default.vim	/^let s:default_syntax.wikilink = '\\[\\[\\zs[^\\\\\\]|]\\+\\ze\\%(|[^\\\\\\]]\\+\\)\\?\\]\\]'$/;"	v
s:denite_ver	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^let s:denite_ver = (exists('*denite#get_status_mode') ? 2 : 3)$/;"	v
s:diagnostics	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:diagnostics = {}$/;"	v
s:dict_t	plugged/vim-clang-format/autoload/clang_format.vim	/^let s:dict_t = type({})$/;"	v
s:diff_template	plugged/vimagit/autoload/magit/state.vim	/^let s:diff_template = {$/;"	v
s:dirArrows	plugged/nerdtree/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpandable, '~]\\-')$/;"	v
s:dummy_sign_id	plugged/vimagit/autoload/magit/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:ell_len	plugged/vimwiki/ftplugin/vimwiki.vim	/^let s:ell_len = strlen(s:ellipsis)$/;"	v
s:ellipsis	plugged/vimwiki/ftplugin/vimwiki.vim	/^let s:ellipsis = (&encoding ==? 'utf-8') ? "\\u2026" : '...'$/;"	v
s:enabled	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:enabled = get(g:, 'airline#extensions#localsearch#enabled', 1)$/;"	v
s:enabled	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:error_symbol = get(g:, 'airline#extensions#coc#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:error_symbol = get(g:, 'airline#extensions#languageclient#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:error_symbol = get(g:, 'airline#extensions#syntastic#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:fg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.dark0$/;"	v
s:fg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.light0$/;"	v
s:fg1	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg1  = s:getGruvColor('GruvboxFg1')$/;"	v
s:fg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.dark1$/;"	v
s:fg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.light1$/;"	v
s:fg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.dark2$/;"	v
s:fg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.light2$/;"	v
s:fg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.dark3$/;"	v
s:fg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.light3$/;"	v
s:fg4	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg4  = s:getGruvColor('GruvboxFg4')$/;"	v
s:fg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.dark4$/;"	v
s:fg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.light4$/;"	v
s:fg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4_256	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.dark4_256$/;"	v
s:fg4_256	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.light4_256$/;"	v
s:file_template	plugged/vimagit/autoload/magit/state.vim	/^let s:file_template = {$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = [ get(g:, 'NERDTreeStatusline', 'NERD'), '' ]$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = ['NERDTree', '']$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:first_rtp	autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:first_sign_id	plugged/vimagit/autoload/magit/sign.vim	/^let s:first_sign_id = 42000$/;"	v
s:flags	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:fnamecollapse	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:focusgained_ignore_time	plugged/vim-airline/autoload/airline/util.vim	/^let s:focusgained_ignore_time = 0$/;"	v
s:formatter	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      let s:formatter = 'default'$/;"	v
s:formatter	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb = {}$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_aqua    = ['#8ec07c', 108]     " 142-192-124$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_blue    = ['#83a598', 109]     " 131-165-152$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_green   = ['#b8bb26', 142]     " 184-187-38$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_orange  = ['#fe8019', 208]     " 254-128-25$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_purple  = ['#d3869b', 175]     " 211-134-155$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_red     = ['#fb4934', 167]     " 251-73-52$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_yellow  = ['#fabd2f', 214]     " 250-189-47$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0       = ['#282828', 235]     " 40-40-40$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_hard  = ['#1d2021', 234]     " 29-32-33$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_soft  = ['#32302f', 236]     " 50-48-47$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark1       = ['#3c3836', 237]     " 60-56-54$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark2       = ['#504945', 239]     " 80-73-69$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark3       = ['#665c54', 241]     " 102-92-84$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4       = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4_256   = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_aqua     = ['#427b58', 66]      " 66-123-88$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_blue     = ['#076678', 24]      " 7-102-120$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_green    = ['#79740e', 100]     " 121-116-14$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_orange   = ['#af3a03', 130]     " 175-58-3$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_purple   = ['#8f3f71', 96]      " 143-63-113$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_red      = ['#9d0006', 88]      " 157-0-6$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_yellow   = ['#b57614', 136]     " 181-118-20$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_244    = ['#928374', 244]     " 146-131-116$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_245    = ['#928374', 245]     " 146-131-116$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0      = ['#fbf1c7', 229]     " 253-244-193$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_hard = ['#f9f5d7', 230]     " 249-245-215$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_soft = ['#f2e5bc', 228]     " 242-229-188$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light1      = ['#ebdbb2', 223]     " 235-219-178$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light2      = ['#d5c4a1', 250]     " 213-196-161$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light3      = ['#bdae93', 248]     " 189-174-147$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4      = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4_256  = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_aqua   = ['#689d6a', 72]      " 104-157-106$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_blue   = ['#458588', 66]      " 69-133-136$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_green  = ['#98971a', 106]     " 152-151-26$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_orange = ['#d65d0e', 166]     " 214-93-14$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_purple = ['#b16286', 132]     " 177-98-134$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_red    = ['#cc241d', 124]     " 204-36-29$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_yellow = ['#d79921', 172]     " 215-153-33$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:gray	plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_244$/;"	v
s:gray	plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_245$/;"	v
s:gray	plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray[1]   = 8$/;"	v
s:green	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:green = s:getGruvColor('GruvboxGreen')$/;"	v
s:green	plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.bright_green$/;"	v
s:green	plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.faded_green$/;"	v
s:green	plugged/gruvbox/colors/gruvbox.vim	/^  let s:green[1]  = 10$/;"	v
s:has_strcharpart	plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strcharpart = exists('*strcharpart')$/;"	v
s:has_strchars	plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strchars = exists('*strchars')$/;"	v
s:head_format	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:hex	plugged/vim-css-color/autoload/css_color.vim	/^	let s:hex[ printf( '%02x', i ) ] = i$/;"	v
s:hex	plugged/vim-css-color/autoload/css_color.vim	/^let s:hex={}$/;"	v
s:hidden_all	init.vim	/^let s:hidden_all = 1$/;"	v
s:highlight_groups	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_groups	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:hl_groups	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:hl_groups = {}$/;"	v
s:hls_cursor	plugged/gruvbox/colors/gruvbox.vim	/^  let s:hls_cursor = get(s:gb, g:gruvbox_hls_cursor)$/;"	v
s:hls_cursor	plugged/gruvbox/colors/gruvbox.vim	/^let s:hls_cursor = s:orange$/;"	v
s:html_tags	plugged/vimwiki/syntax/vimwiki.vim	/^  let s:html_tags = join(split(vimwiki#vars#get_global('valid_html_tags'), '\\s*,\\s*'), '\\|')$/;"	v
s:hunk_symbols	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:hunk_template	plugged/vimagit/autoload/magit/state.vim	/^let s:hunk_template = {$/;"	v
s:iAsyncTaskCur	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:iAsyncTaskCur = -1$/;"	v
s:iAsyncTaskLast	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:iAsyncTaskLast = 0$/;"	v
s:iAsyncTaskNext	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:iAsyncTaskNext = 0$/;"	v
s:iDfrankUtil_min_version	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:iDfrankUtil_min_version = 100$/;"	v
s:iDfrankUtil_min_version	plugged/vimprj/autoload/vimprj.vim	/^let s:iDfrankUtil_min_version = 100$/;"	v
s:iTerm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:iTerm_escape_template = '\\033]Pl%s\\033\\\\'$/;"	v
s:iVimprj_min_version	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:iVimprj_min_version = 108$/;"	v
s:ignore_time	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^let s:ignore_time = 0$/;"	v
s:inactive_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:indexer_debugLogFilename	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let s:indexer_debugLogFilename = ''$/;"	v
s:indexer_debugLogFilename	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let s:indexer_debugLogFilename = g:indexer_debugLogFilename$/;"	v
s:indexer_debugLogLevel	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let s:indexer_debugLogLevel = 0$/;"	v
s:indexer_debugLogLevel	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let s:indexer_debugLogLevel = g:indexer_debugLogLevel$/;"	v
s:indexer_maxOSCommandLen	plugged/indexer.tar.gz/plugin/indexer.vim	/^      let s:indexer_maxOSCommandLen = 8000$/;"	v
s:indexer_maxOSCommandLen	plugged/indexer.tar.gz/plugin/indexer.vim	/^      let s:indexer_maxOSCommandLen = system("echo $(( $(getconf ARG_MAX) - $(env | wc -c) ))") - 200$/;"	v
s:indexer_maxOSCommandLen	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let s:indexer_maxOSCommandLen = g:indexer_maxOSCommandLen$/;"	v
s:indexer_tagsDirname	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let s:indexer_tagsDirname = ''  "$HOME.'\/.vimtags'$/;"	v
s:indexer_tagsDirname	plugged/indexer.tar.gz/plugin/indexer.vim	/^   let s:indexer_tagsDirname = g:indexer_tagsDirname$/;"	v
s:init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:init=0$/;"	v
s:inverse	plugged/gruvbox/colors/gruvbox.vim	/^  let s:inverse = ''$/;"	v
s:inverse	plugged/gruvbox/colors/gruvbox.vim	/^let s:inverse = 'inverse,'$/;"	v
s:invert_selection	plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_signs	plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_signs = ''$/;"	v
s:invert_tabline	plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_tabline = ''$/;"	v
s:is_AppleTerminal	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_AppleTerminal = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'Apple_Terminal'$/;"	v
s:is_dark	plugged/gruvbox/colors/gruvbox.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_good	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_good = !has('gui_running') && !s:is_win && !s:is_AppleTerminal$/;"	v
s:is_iTerm	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_iTerm = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'iTerm.app'$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win32term	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) &&$/;"	v
s:italic	plugged/gruvbox/colors/gruvbox.vim	/^  let s:italic = ''$/;"	v
s:italic	plugged/gruvbox/colors/gruvbox.vim	/^let s:italic = 'italic,'$/;"	v
s:italicize_comments	plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_strings	plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_strings = ''$/;"	v
s:keyMaps	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:known_extensions	plugged/vimwiki/plugin/vimwiki.vim	/^let s:known_extensions = s:vimwiki_get_known_extensions()$/;"	v
s:lDebug	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:lDebug = []$/;"	v
s:l_O	plugged/vimwiki/ftplugin/vimwiki.vim	/^    let s:l_O = matchstr(&langmap, '\\C,\\zs.\\zeO,')$/;"	v
s:l_o	plugged/vimwiki/ftplugin/vimwiki.vim	/^    let s:l_o = matchstr(&langmap, '\\C,\\zs.\\zeo,')$/;"	v
s:last_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:last_mode = ''$/;"	v
s:last_rtp	autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:layout	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:list_t	plugged/vim-clang-format/autoload/clang_format.vim	/^let s:list_t = type([])$/;"	v
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	plugged/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded_ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:loaded_ext = []$/;"	v
s:low_color	colors/jellybeans.vim	/^  let s:low_color = 0$/;"	v
s:low_color	colors/jellybeans.vim	/^  let s:low_color = 1$/;"	v
s:lsp_progress	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^let s:lsp_progress = []$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:magit_mark_signs	plugged/vimagit/autoload/magit/sign.vim	/^let s:magit_mark_signs = {'M': 'MagitTBS', 'S': 'MagitBS', 'E': 'MagitBE'}$/;"	v
s:map_prefix	plugged/vimwiki/plugin/vimwiki.vim	/^let s:map_prefix = vimwiki#vars#get_global('map_prefix')$/;"	v
s:margin_set_by_user	plugged/vimwiki/autoload/vimwiki/vars.vim	/^let s:margin_set_by_user = 0$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax = g:vimwiki_syntax_variables['markdown']$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.bold_match = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<=\\*__Text__\\*'.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.bold_search = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<=\\*\\zs'.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.bullet_types = ['-', '*', '+']$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_bold = '\\*\\*\\|__'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_bolditalic = '\\*\\*\\*'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_code = '`'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_deltext = '\\~\\~'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_eqin = '\\$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_italic = '\\*\\|_'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_italicbold = '___'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_subscript = ',,'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.char_superscript = '^'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.header_match = '^\\s*\\(#\\{1,6}\\)#\\@!\\s*__Header__\\s*$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.header_search = '^\\s*\\(#\\{1,6}\\)\\([^#].*\\)$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.list_markers = ['-', '*', '+', '1.']$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.number_types = ['1.']$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.recurring_bullets = 0$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxBoldItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxCode = '`[^`]\\+`'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxComment = '^\\s*%%.*$\\|<!--[^>]*-->'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxDelText = '\\~\\~[^~`]\\+\\~\\~'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxEqIn = '\\$[^$`]\\+\\$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxH = '#'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxHR = '\\(^---*$\\|^___*$\\|^\\*\\*\\**$\\)'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxItalic = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxItalicBold = '\\%(^\\|\\s\\|[[:punct:]]\\)\\@<='.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxListDefine = '::\\%(\\s\\|$\\)'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxMathEnd = '\\$\\$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxMathStart = '\\$\\$'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxPreEnd = '\\%(`\\{3,}\\|\\~\\{3,}\\)'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxPreStart = '\\%(`\\{3,}\\|\\~\\{3,}\\)'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxSubScript = ',,[^,`]\\+,,'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxSuperScript = '\\^[^^`]\\+\\^'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxTableSep = '|'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.rxTags = '\\%(^\\|\\s\\)\\@<=:\\%([^:[:space:]]\\+:\\)\\+\\%(\\s\\|$\\)\\@='$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.symH = 0$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.tag_match = '\\(^\\|\\s\\):\\([^:''[:space:]]\\+:\\)*__Tag__:'.$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.tag_search = '\\(^\\|\\s\\)\\zs:\\([^:''[:space:]]\\+:\\)\\+\\ze\\(\\s\\|$\\)'$/;"	v
s:markdown_syntax	plugged/vimwiki/syntax/vimwiki_markdown.vim	/^let s:markdown_syntax.wikilink = '\\[\\[\\zs[^\\\\\\]|]\\+\\ze\\%(|[^\\\\\\]]\\+\\)\\?\\]\\]'$/;"	v
s:matchParenGuiBg	colors/jellybeans.vim	/^    let s:matchParenGuiBg = "000000"$/;"	v
s:matchParenGuiBg	colors/jellybeans.vim	/^    let s:matchParenGuiBg = "556779"$/;"	v
s:matchParenGuiFg	colors/jellybeans.vim	/^    let s:matchParenGuiFg = "dd0093"$/;"	v
s:matchParenGuiFg	colors/jellybeans.vim	/^    let s:matchParenGuiFg = "ffffff"$/;"	v
s:matchParenTermBg	colors/jellybeans.vim	/^    let s:matchParenTermBg = ""$/;"	v
s:matchParenTermBg	colors/jellybeans.vim	/^    let s:matchParenTermBg = s:termBlack$/;"	v
s:matchParenTermFg	colors/jellybeans.vim	/^    let s:matchParenTermFg = ""$/;"	v
s:matchParenTermFg	colors/jellybeans.vim	/^    let s:matchParenTermFg = "Magenta"$/;"	v
s:maxDotsInExtension	plugged/a.vim/plugin/a.vim	/^let s:maxDotsInExtension = 1$/;"	v
s:me	autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax = g:vimwiki_syntax_variables['media']$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.bold_match = '''''''__Text__'''''''$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.bold_search = "'''\\\\zs[^']\\\\+\\\\ze'''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.bullet_types = ['*', '#']$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_bold = "'''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_bolditalic = "'''''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_code = '`'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_deltext = '\\~\\~'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_eqin = '\\$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_italic = "''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_italicbold = s:media_syntax.char_bolditalic$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_subscript = ',,'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.char_superscript = '^'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.header_match = '^\\s*\\(=\\{1,6}\\)=\\@!\\s*__Header__\\s*\\1=\\@!\\s*$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.header_search = '^\\s*\\(=\\{1,6}\\)\\([^=].*[^=]\\)\\1\\s*$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.list_markers = ['*', '#']$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.number_types = []$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.recurring_bullets = 1$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxBold = "'''[^']\\\\+'''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxBoldItalic = "'''''[^']\\\\+'''''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxCode = '`[^`]\\+`'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxComment = '^\\s*%%.*$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxDelText = '\\~\\~[^~]\\+\\~\\~'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxEqIn = '\\$[^$`]\\+\\$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxH = '='$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxHR = '^-----*$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxItalic = "''[^']\\\\+''"$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxItalicBold = s:media_syntax.rxBoldItalic$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxListDefine = '^\\%(;\\|:\\)\\s'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxMathEnd = '}}\\$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxMathStart = '{{\\$'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxPreEnd = '<\\\/pre>'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxPreStart = '<pre>'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxSubScript = ',,[^,]\\+,,'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxSuperScript = '\\^[^^]\\+\\^'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxTableSep = '|'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.rxTags = '\\%(^\\|\\s\\)\\@<=:\\%([^:[:space:]]\\+:\\)\\+\\%(\\s\\|$\\)\\@='$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.symH = 1$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.tag_match = '\\(^\\|\\s\\):\\([^:''[:space:]]\\+:\\)*__Tag__:'.$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.tag_search = '\\(^\\|\\s\\)\\zs:\\([^:''[:space:]]\\+:\\)\\+\\ze\\(\\s\\|$\\)'$/;"	v
s:media_syntax	plugged/vimwiki/syntax/vimwiki_media.vim	/^let s:media_syntax.wikilink = '\\[\\[\\zs[^\\\\\\]|]\\+\\ze\\%(|[^\\\\\\]]\\+\\)\\?\\]\\]'$/;"	v
s:mg_display_functions	plugged/vimagit/plugin/magit.vim	/^let s:mg_display_functions = {$/;"	v
s:mq_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:mq_jobs        = {}$/;"	v
s:names	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:names = {'0': 'index', '1': 'orig', '2':'fetch', '3':'merge'}$/;"	v
s:needs_cppstructure_match	plugged/vim-cpp-enhanced-highlight/after/syntax/cpp.vim	/^	let s:needs_cppstructure_match += 1$/;"	v
s:needs_cppstructure_match	plugged/vim-cpp-enhanced-highlight/after/syntax/cpp.vim	/^	let s:needs_cppstructure_match += 2$/;"	v
s:needs_cppstructure_match	plugged/vim-cpp-enhanced-highlight/after/syntax/cpp.vim	/^let s:needs_cppstructure_match = 0$/;"	v
s:nested	plugged/vimwiki/syntax/vimwiki.vim	/^  let s:nested = extend(s:nested, vimwiki#base#detect_nested_syntax(), 'keep')$/;"	v
s:nested	plugged/vimwiki/syntax/vimwiki.vim	/^let s:nested = vimwiki#vars#get_wikilocal('nested_syntaxes')$/;"	v
s:newline	plugged/vimwiki/ftplugin/vimwiki.vim	/^let s:newline = (&encoding ==? 'utf-8') ? "\\u21b2 " : '  '$/;"	v
s:next_sign_id	plugged/vimagit/autoload/magit/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:nomodeline	plugged/vim-airline/autoload/airline/util.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has("patch438"))) ? '<nomodeline>' : ''$/;"	v
s:non_zero_only	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:none	plugged/gruvbox/colors/gruvbox.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:number_column	plugged/gruvbox/colors/gruvbox.vim	/^  let s:number_column = get(s:gb, g:gruvbox_number_column)$/;"	v
s:number_column	plugged/gruvbox/colors/gruvbox.vim	/^let s:number_column = s:none$/;"	v
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:old_cpo	plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:old_cpo	plugged/vimwiki/plugin/vimwiki.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:on_windows	plugged/vim-clang-format/autoload/clang_format.vim	/^let s:on_windows = has('win32') || has('win64')$/;"	v
s:options	plugged/vimwiki/syntax/vimwiki.vim	/^  let s:options .= s:conceal$/;"	v
s:options	plugged/vimwiki/syntax/vimwiki.vim	/^let s:options = ' contained transparent contains=NONE'$/;"	v
s:options	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^let s:options = ' contained transparent contains=NONE'$/;"	v
s:orange	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:orange = s:getGruvColor('GruvboxOrange')$/;"	v
s:orange	plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.bright_orange$/;"	v
s:orange	plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.faded_orange$/;"	v
s:overrides	colors/jellybeans.vim	/^    let s:overrides["background"] = {}$/;"	v
s:overrides	colors/jellybeans.vim	/^    let s:overrides["background"]["256ctermbg"] = "NONE"$/;"	v
s:overrides	colors/jellybeans.vim	/^    let s:overrides["background"]["256ctermbg"] = g:jellybeans_background_color_256$/;"	v
s:overrides	colors/jellybeans.vim	/^    let s:overrides["background"]["ctermbg"] = "NONE"$/;"	v
s:overrides	colors/jellybeans.vim	/^    let s:overrides["background"]["guibg"] = g:jellybeans_background_color$/;"	v
s:overrides	colors/jellybeans.vim	/^  let s:overrides = deepcopy(s:overrides)$/;"	v
s:overrides	colors/jellybeans.vim	/^  let s:overrides = g:jellybeans_overrides$/;"	v
s:overrides	colors/jellybeans.vim	/^  let s:overrides = {}$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p = {'normal':{}, 'inactive':{}, 'insert':{}, 'replace':{}, 'visual':{}, 'tabline':{}, 'terminal':{}}$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.left =  [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.middle = [ [ s:bg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.right = [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.left = [ [ s:bg0, s:blue, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.right = [ [ s:bg0, s:blue ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.error = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.left = [ [ s:bg0, s:fg4, 'bold' ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.right = [ [ s:bg0, s:fg4 ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.warning = [ [ s:bg2, s:yellow ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.left = [ [ s:bg0, s:aqua, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.right = [ [ s:bg0, s:aqua ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.left = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.middle = [ [ s:bg0, s:bg0 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.right = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.tabsel = [ [ s:bg0, s:fg4 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.left = [ [ s:bg0, s:green, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.right = [ [ s:bg0, s:green ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.left = [ [ s:bg0, s:orange, 'bold' ], [ s:bg0, s:bg4 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.right = [ [ s:bg0, s:orange ], [ s:bg0, s:bg4 ] ]$/;"	v
s:parts	plugged/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:pat_for_type	plugged/vim-css-color/autoload/css_color.vim	/^let s:pat_for_type = [ '^$', s:_hexcolor, s:_rgbacolor, s:_csscolor, '^$' ]$/;"	v
s:pattern_color	plugged/vim-css-color/autoload/css_color.vim	/^let s:pattern_color = {}$/;"	v
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plugin_dir	plugged/vimwiki/plugin/vimwiki.vim	/^let s:plugin_dir = expand('<sfile>:p:h:h')$/;"	v
s:plugin_vers	plugged/vimwiki/plugin/vimwiki.vim	/^let s:plugin_vers = 2.5$/;"	v
s:po_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:po_jobs        = {}$/;"	v
s:pos_on_insertenter	plugged/vim-clang-format/autoload/clang_format.vim	/^let s:pos_on_insertenter = []$/;"	v
s:prompt_snapshot_file	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype.overflow_group = 'airline_tab'$/;"	v
s:purple	plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.bright_purple$/;"	v
s:purple	plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.faded_purple$/;"	v
s:purple	plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple[1] = 13$/;"	v
s:red	plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.bright_red$/;"	v
s:red	plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.faded_red$/;"	v
s:red	plugged/gruvbox/colors/gruvbox.vim	/^  let s:red[1]    = 9$/;"	v
s:rootNERDTreePath	plugged/nerdtree/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:root_dir	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^let s:root_dir = resolve(getcwd() . '\/..')$/;"	v
s:rxSchemes	plugged/vimwiki/syntax/vimwiki.vim	/^let s:rxSchemes = '\\%('.$/;"	v
s:rxSchemes	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^let s:rxSchemes = '\\%('.$/;"	v
s:sDfrankUtilCompatibility	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:sDfrankUtilCompatibility = <SID>CheckCompatibility($/;"	v
s:sDfrankUtilCompatibility	plugged/vimprj/autoload/vimprj.vim	/^let s:sDfrankUtilCompatibility = <SID>CheckCompatibility($/;"	v
s:sLastCtagsCmd	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:sLastCtagsCmd =      "** no ctags commands yet **"$/;"	v
s:sLastCtagsOutput	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:sLastCtagsOutput =   "** no output yet **"$/;"	v
s:sLastOSCmd	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:sLastOSCmd =         "** no OS commands yet **"$/;"	v
s:sPath	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/.vimprj/my.vim	/^let s:sPath = expand('<sfile>:p:h')$/;"	v
s:sPath	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/.vimprj/my.vim	/^let s:sPath = expand('<sfile>:p:h')$/;"	v
s:sPathDefault	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:sPathDefault = &path$/;"	v
s:sProjectPath	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/.vimprj/env.vim	/^let s:sProjectPath = simplify(s:sVimprjPath.'\/..')$/;"	v
s:sTagsDefault	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:sTagsDefault = &tags$/;"	v
s:sVimprjCompatibility	plugged/indexer.tar.gz/plugin/indexer.vim	/^let s:sVimprjCompatibility = <SID>CheckCompatibility($/;"	v
s:sVimprjPath	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/.vimprj/env.vim	/^let s:sVimprjPath = expand('<sfile>:p:h')$/;"	v
s:sVimprjPath	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/lib1/.vimprj/my.vim	/^let s:sVimprjPath = expand('<sfile>:p:h')$/;"	v
s:sVimprjPath	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/lib2/.vimprj/my.vim	/^let s:sVimprjPath = expand('<sfile>:p:h')$/;"	v
s:sVimprjPath	plugged/indexer.tar.gz/doc/examples/vimprj_subprojects/myproj_env/myproj/.vimprj/my.vim	/^let s:sVimprjPath = expand('<sfile>:p:h')$/;"	v
s:save_cpo	plugged/vim-airline/plugin/airline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-clang-format/autoload/clang_format.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_expandtab	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let s:saved_expandtab = &expandtab$/;"	v
s:saved_shiftwidth	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let s:saved_shiftwidth = &shiftwidth$/;"	v
s:saved_styles	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let s:saved_styles = [g:clang_format#style_options, &expandtab, &shiftwidth]$/;"	v
s:script_path	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:section_a	plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_a = airline#section#create_left(['terminal', 'tmode'])$/;"	v
s:section_truncate_width	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:section_use_groups	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:section_z	plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_z = airline#section#create(['linenr', 'maxlinenr'])$/;"	v
s:sections	plugged/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:sections	plugged/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:separators	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:severity_error	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_error = 1$/;"	v
s:severity_hint	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_hint = 4$/;"	v
s:severity_info	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_info = 3$/;"	v
s:severity_warning	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_warning = 2$/;"	v
s:sha1size	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:sha1size = get(g:, 'airline#extensions#branch#sha1_len', 7)$/;"	v
s:show_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_line_numbers	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:show_line_numbers = get(g:, 'airline#extensions#languageclient#show_line_numbers', 1)$/;"	v
s:show_message	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:sign_column	plugged/gruvbox/colors/gruvbox.vim	/^    let s:sign_column = get(s:gb, g:gruvbox_sign_column)$/;"	v
s:sign_column	plugged/gruvbox/colors/gruvbox.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	plugged/gruvbox/colors/gruvbox.vim	/^let s:sign_column = s:bg1$/;"	v
s:skip_check_ft	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file'],$/;"	v
s:skip_symbol	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:submodule_list	plugged/vimagit/autoload/magit/utils.vim	/^let s:submodule_list = []$/;"	v
s:supports_star	plugged/vimagit/autoload/magit/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:symbol	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:tab_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:taboo	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:tabws	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tabws = get(g:, 'tabws_loaded', 0)$/;"	v
s:target	plugged/vimwiki/syntax/vimwiki.vim	/^let s:target = vimwiki#base#apply_template($/;"	v
s:target	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^let s:target = vimwiki#base#apply_template($/;"	v
s:termBlack	colors/jellybeans.vim	/^  let s:termBlack = "Black"$/;"	v
s:termBlack	colors/jellybeans.vim	/^  let s:termBlack = "Grey"$/;"	v
s:textwidth	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^let s:textwidth = &textwidth$/;"	v
s:timer	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^let s:timer = 0$/;"	v
s:tmuxline_snapshot_file	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:tolerance	plugged/vimwiki/ftplugin/vimwiki.vim	/^let s:tolerance = 5$/;"	v
s:tree_up_dir_line	plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:true_color	colors/jellybeans.vim	/^  let s:true_color = 0$/;"	v
s:true_color	colors/jellybeans.vim	/^  let s:true_color = 1$/;"	v
s:type	plugged/vim-css-color/autoload/css_color.vim	/^let s:type         = [ 'none', 'hex', 'rgba', 'css', 'none' ] " with wraparound for index() == -1$/;"	v
s:undercurl	plugged/gruvbox/colors/gruvbox.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	plugged/gruvbox/colors/gruvbox.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:underline	plugged/gruvbox/colors/gruvbox.vim	/^  let s:underline = ''$/;"	v
s:underline	plugged/gruvbox/colors/gruvbox.vim	/^let s:underline = 'underline,'$/;"	v
s:untracked_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:untracked_jobs = {}$/;"	v
s:vcs_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
s:vert_split	plugged/gruvbox/colors/gruvbox.vim	/^  let s:vert_split = get(s:gb, g:gruvbox_vert_split)$/;"	v
s:vert_split	plugged/gruvbox/colors/gruvbox.vim	/^let s:vert_split = s:bg0$/;"	v
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_bg	plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_fg	plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vimagit_path	plugged/vimagit/syntax/magit.vim	/^let s:vimagit_path = fnameescape(resolve(expand('<sfile>:p:h')))$/;"	v
s:vimwiki_autowriteall_saved	plugged/vimwiki/plugin/vimwiki.vim	/^  let s:vimwiki_autowriteall_saved = 1$/;"	v
s:vimwiki_autowriteall_saved	plugged/vimwiki/plugin/vimwiki.vim	/^  let s:vimwiki_autowriteall_saved = g:vimwiki_autowriteall$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#coc#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#languageclient#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#syntastic#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
s:wordcount_cache	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:wordcount_cache = 0  " cache wordcount for performance when force_update=0$/;"	v
s:xterm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:xterm_escape_template = '\\033]12;%s\\007'$/;"	v
s:xtermcolor	plugged/vim-css-color/autoload/css_color.vim	/^	let s:xtermcolor += map(range(24),'repeat([10*v:val+8],3) + [v:val+232]')$/;"	v
s:xtermcolor	plugged/vim-css-color/autoload/css_color.vim	/^	let s:xtermcolor = [$/;"	v
s:xvquant	plugged/vim-css-color/autoload/css_color.vim	/^	let s:xvquant = repeat([0],48)$/;"	v
s:xvquant	plugged/vim-css-color/autoload/css_color.vim	/^	let s:xvquant[s:cubergb[2]] = 2$/;"	v
s:xvquant	plugged/vim-css-color/autoload/css_color.vim	/^	let s:xvquant[s:cubergb[3]] = 3$/;"	v
s:xvquant	plugged/vim-css-color/autoload/css_color.vim	/^	let s:xvquant[s:cubergb[4]] = 4$/;"	v
s:xvquant	plugged/vim-css-color/autoload/css_color.vim	/^	let s:xvquant[s:cubergb[5]] = 5$/;"	v
s:yellow	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:yellow = s:getGruvColor('GruvboxYellow')$/;"	v
s:yellow	plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.faded_yellow$/;"	v
s:yellow	plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow[1] = 11$/;"	v
s:zoomwintab_status_zoomed_in	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_in =$/;"	v
s:zoomwintab_status_zoomed_out	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_out =$/;"	v
safe_html_line	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:safe_html_line(line) abort$/;"	f
safe_html_preformatted	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:safe_html_preformatted(line) abort$/;"	f
safesubstitute	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:safesubstitute(text, search, replace, mode) abort$/;"	f
safesubstitute	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! s:safesubstitute(text, search, replace, mode) abort$/;"	f
safesubstitute	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:safesubstitute(text, search, replace, mode) abort$/;"	f
saved	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let saved = g:clang_format#style_options$/;"	v
scan_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:scan_tags(lines, page_name) abort$/;"	f
search_term	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! s:search_term()$/;"	f
section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
section_is_empty	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
select_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
sep_splitter	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:sep_splitter() abort$/;"	f
set_clean_jobs_variable	plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_jobs_variable(vcs, file, id)$/;"	f
set_clean_variables	plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_variables(file, vcs, val)$/;"	f
set_color	plugged/goyo.vim/autoload/goyo.vim	/^function! s:set_color(group, attr, color)$/;"	f
set_cursor_color_for	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:set_cursor_color_for(mode)$/;"	f
set_global_options	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:set_global_options() abort$/;"	f
set_indent	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_indent(lnum, new_indent) abort$/;"	f
set_mode_read	plugged/vimagit/plugin/magit.vim	/^function! s:set_mode_read()$/;"	f
set_mode_write	plugged/vimagit/plugin/magit.vim	/^function! s:set_mode_write()$/;"	f
set_new_mrkr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_new_mrkr(item, new_mrkr) abort$/;"	f
set_state	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_state(item, new_rate) abort$/;"	f
set_state_plus_children	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_state_plus_children(item, new_rate, ...) abort$/;"	f
set_state_recursively	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:set_state_recursively(item, new_rate) abort$/;"	f
set_windowlocal_options	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:set_windowlocal_options() abort$/;"	f
setup_buffer_enter	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_buffer_enter() abort$/;"	f
setup_buffer_leave	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_buffer_leave() abort$/;"	f
setup_buffer_win_enter	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_buffer_win_enter() abort$/;"	f
setup_cleared_syntax	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_cleared_syntax() abort$/;"	f
setup_new_wiki_buffer	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:setup_new_wiki_buffer() abort$/;"	f
setup_pad	plugged/goyo.vim/autoload/goyo.vim	/^function! s:setup_pad(bufnr, vert, size, repel)$/;"	f
sh_autocmd_handler	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:sh_autocmd_handler()$/;"	f
sh_autocmd_handler	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! s:sh_autocmd_handler()$/;"	f
shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
shellesc_ps1	autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
shellesc_sh	autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
shellescape	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:shellescape(str) abort$/;"	f
shorten_text	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! s:shorten_text(text, len) abort$/;"	f
shorten_text_simple	plugged/vimwiki/ftplugin/vimwiki.vim	/^function! s:shorten_text_simple(text, len) abort$/;"	f
showMenu	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node) abort$/;"	f
show_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
sort	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! s:sort(lst) abort$/;"	f
source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
status	autoload/plug.vim	/^function! s:status()$/;"	f
status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
string_length	plugged/vimwiki/autoload/vimwiki/lst.vim	/^  function! s:string_length(str) abort$/;"	f
stringize_options	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:stringize_options(opts) abort$/;"	f
strip_white_space	plugged/vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
subst_func	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:subst_func(line, regexp, func, ...) abort$/;"	f
substitute_rx_in_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:substitute_rx_in_line(lnum, pattern, new_string) abort$/;"	f
substitute_string_in_line	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:substitute_string_in_line(lnum, old_string, new_string) abort$/;"	f
success	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:success(result) abort$/;"	f
sum_colspan	plugged/vimwiki/autoload/vimwiki/html.vim	/^  function! s:sum_colspan(table) abort$/;"	f
surroundings	plugged/vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
syntax_supported	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:syntax_supported() abort$/;"	f
system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
system	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:system(str, ...) abort$/;"	f
system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
table	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let table = []$/;"	v
table	plugged/vimwiki/autoload/vimwiki/html.vim	/^    let table = s:close_tag_table(table, lines, a:header_ids)$/;"	v
table	plugged/vimwiki/autoload/vimwiki/html.vim	/^  let table = a:table$/;"	v
table_add_row	plugged/vimwiki/autoload/vimwiki/html.vim	/^  function! s:table_add_row(table, line) abort$/;"	f
tabline_evaluated_length	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:tabline_evaluated_length(tabline)$/;"	f
tag_code	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_code(value) abort$/;"	f
tag_em	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_em(value) abort$/;"	f
tag_eqin	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_eqin(value) abort$/;"	f
tag_match	plugged/vimwiki/autoload/vimwiki/tags.vim	/^  let tag_match = printf('rxH%d', header_level + 1)$/;"	v
tag_remove_external_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_remove_external_link(value) abort$/;"	f
tag_remove_internal_link	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_remove_internal_link(value) abort$/;"	f
tag_strike	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_strike(value) abort$/;"	f
tag_strong	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_strong(value, header_ids) abort$/;"	f
tag_sub	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_sub(value) abort$/;"	f
tag_super	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_super(value) abort$/;"	f
tag_tags	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_tags(value, header_ids) abort$/;"	f
tag_todo	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_todo(value) abort$/;"	f
tag_weblink	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_weblink(value) abort$/;"	f
tag_wikiincl	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_wikiincl(value) abort$/;"	f
tag_wikilink	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:tag_wikilink(value) abort$/;"	f
tags_entry_cmp	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:tags_entry_cmp(i1, i2) abort$/;"	f
tail_name	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:tail_name(fname) abort$/;"	f
template_full_name	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:template_full_name(name) abort$/;"	f
termname	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:termname(bufnr) abort$/;"	f
text_begin	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:text_begin(lnum) abort$/;"	f
textobject	plugged/vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
tick	autoload/plug.vim	/^function! s:tick()$/;"	f
to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
toggleIgnoreFilter	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter() abort$/;"	f
toggleShowBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks() abort$/;"	f
toggleShowFiles	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles() abort$/;"	f
toggleShowHidden	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden() abort$/;"	f
toggleZoom	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom() abort$/;"	f
toggle_create_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:toggle_create_cb(from_line, to_line, state1, state2, start_rate) abort$/;"	f
toggle_off	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
toggle_on	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
tranquilize	plugged/goyo.vim/autoload/goyo.vim	/^function! s:tranquilize()$/;"	f
trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
two	plugged/indexer.tar.gz/doc/examples/blank/some_folder_1/some_header.h	/^   int two;$/;"	m	struct:S_TestStruct1
two	plugged/indexer.tar.gz/doc/examples/vimprj_indexer_files/some_folder_1/some_file.h	/^   int two;$/;"	m	struct:S_TestStruct1
two	plugged/indexer.tar.gz/doc/examples/vimprj_vimprojects/some_folder_1/some_header.h	/^   int two;$/;"	m	struct:S_TestStruct1
untracked_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:untracked_output(dict, buf)$/;"	f
upDirCurrentRootClosed	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed() abort$/;"	f
upDirCurrentRootOpen	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen() abort$/;"	f
update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
update_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
update_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch()$/;"	f
update_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch()$/;"	f
update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
update_state	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! s:update_state(item) abort$/;"	f
update_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:update_tabline(forceit)$/;"	f
update_untracked	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
update_wiki_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:update_wiki_link(fname, old, new) abort$/;"	f
update_wiki_links	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:update_wiki_links(wiki_nr, dir, old_url, new_url) abort$/;"	f
update_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:update_wordcount(force_update)$/;"	f
upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
use_custom_wiki2html	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! s:use_custom_wiki2html() abort$/;"	f
vader_color	plugged/vimwiki/test/run_tests.sh	/^vader_color() {$/;"	f
vader_filter	plugged/vimwiki/test/run_tests.sh	/^vader_filter() {$/;"	f
valid_dir	plugged/vim-airline/autoload/airline/async.vim	/^function! s:valid_dir(dir)$/;"	f
verify_command	plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:verify_command() abort$/;"	f
version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
vimprj#applyVimprjSettings	plugged/vimprj/autoload/vimprj.vim	/^function! vimprj#applyVimprjSettings(sVimprjKey)$/;"	f
vimprj#getVimprjKeyOfFile	plugged/vimprj/autoload/vimprj.vim	/^function! vimprj#getVimprjKeyOfFile(iFileNum)$/;"	f
vimprj#info	plugged/vimprj/autoload/vimprj.vim	/^function! vimprj#info()$/;"	f
vimprj#init	plugged/vimprj/autoload/vimprj.vim	/^function! vimprj#init()$/;"	f
vimwiki	plugged/vimwiki/ftplugin/vimwiki.vim	/^  augroup vimwiki$/;"	a
vimwiki	plugged/vimwiki/plugin/vimwiki.vim	/^augroup vimwiki$/;"	a
vimwiki#base#AddHeaderLevel	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#AddHeaderLevel(...) abort$/;"	f
vimwiki#base#RemoveHeaderLevel	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#RemoveHeaderLevel(...) abort$/;"	f
vimwiki#base#TO_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#TO_header(inner, including_subheaders, count) abort$/;"	f
vimwiki#base#TO_table_cell	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#TO_table_cell(inner, visual) abort$/;"	f
vimwiki#base#TO_table_col	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#TO_table_col(inner, visual) abort$/;"	f
vimwiki#base#apply_template	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#apply_template(template, rxUrl, rxDesc, rxStyle) abort$/;"	f
vimwiki#base#backlinks	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#backlinks() abort$/;"	f
vimwiki#base#check_links	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#check_links() abort$/;"	f
vimwiki#base#complete_links_escaped	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#complete_links_escaped(ArgLead, CmdLine, CursorPos) abort abort$/;"	f
vimwiki#base#current_subdir	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#current_subdir() abort$/;"	f
vimwiki#base#delete_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#delete_link() abort$/;"	f
vimwiki#base#deprecate	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#deprecate(old, new) abort$/;"	f
vimwiki#base#detect_nested_syntax	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#detect_nested_syntax() abort$/;"	f
vimwiki#base#edit_file	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#edit_file(command, filename, anchor, ...) abort$/;"	f
vimwiki#base#file_pattern	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#file_pattern(files) abort$/;"	f
vimwiki#base#find_files	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_files(wiki_nr, directories_only, ...) abort$/;"	f
vimwiki#base#find_next_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_next_link() abort$/;"	f
vimwiki#base#find_next_task	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_next_task() abort$/;"	f
vimwiki#base#find_prev_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_prev_link() abort$/;"	f
vimwiki#base#find_wiki	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#find_wiki(path) abort$/;"	f
vimwiki#base#follow_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#follow_link(split, ...) abort$/;"	f
vimwiki#base#generate_links	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#generate_links(create, ...) abort$/;"	f
vimwiki#base#get_anchors	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#get_anchors(filename, syntax) abort$/;"	f
vimwiki#base#get_globlinks_escaped	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#get_globlinks_escaped(...) abort$/;"	f
vimwiki#base#get_wiki_directories	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#get_wiki_directories(wiki_nr) abort$/;"	f
vimwiki#base#get_wikilinks	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#get_wikilinks(wiki_nr, also_absolute_links, pattern) abort$/;"	f
vimwiki#base#go_back_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#go_back_link() abort$/;"	f
vimwiki#base#goto	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto(...) abort$/;"	f
vimwiki#base#goto_index	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_index(wnum, ...) abort$/;"	f
vimwiki#base#goto_next_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_next_header() abort$/;"	f
vimwiki#base#goto_parent_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_parent_header() abort$/;"	f
vimwiki#base#goto_prev_header	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_prev_header() abort$/;"	f
vimwiki#base#goto_sibling	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#goto_sibling(direction) abort$/;"	f
vimwiki#base#invsubdir	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#invsubdir(subdir) abort$/;"	f
vimwiki#base#is_diary_file	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#is_diary_file(filename, ...) abort$/;"	f
vimwiki#base#matchstr_at_cursor	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#matchstr_at_cursor(wikiRX) abort$/;"	f
vimwiki#base#nested_syntax	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#nested_syntax(filetype, start, end, textSnipHl) abort$/;"	f
vimwiki#base#normalize_imagelink_helper	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#normalize_imagelink_helper(str, rxUrl, rxDesc, rxStyle, template) abort$/;"	f
vimwiki#base#normalize_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#normalize_link(is_visual_mode) abort$/;"	f
vimwiki#base#normalize_link_helper	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#normalize_link_helper(str, rxUrl, rxDesc, template) abort$/;"	f
vimwiki#base#normalize_link_in_diary	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#normalize_link_in_diary(lnk) abort$/;"	f
vimwiki#base#open_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#open_link(cmd, link, ...) abort$/;"	f
vimwiki#base#read_caption	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#read_caption(file) abort$/;"	f
vimwiki#base#rename_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#rename_link() abort$/;"	f
vimwiki#base#replacestr_at_cursor	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#replacestr_at_cursor(wikiRX, sub) abort$/;"	f
vimwiki#base#resolve_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#resolve_link(link_text, ...) abort$/;"	f
vimwiki#base#search	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#search(search_pattern) abort$/;"	f
vimwiki#base#search_word	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#search_word(wikiRx, cmd) abort$/;"	f
vimwiki#base#subdir	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#subdir(path, filename) abort$/;"	f
vimwiki#base#system_open_link	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#system_open_link(url) abort$/;"	f
vimwiki#base#table_of_contents	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#table_of_contents(create) abort$/;"	f
vimwiki#base#ui_select	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#ui_select() abort$/;"	f
vimwiki#base#update_listing_in_buffer	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! vimwiki#base#update_listing_in_buffer(Generator, start_header,$/;"	f
vimwiki#diary#calendar_action	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#calendar_action(day, month, year, week, dir) abort$/;"	f
vimwiki#diary#calendar_sign	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#calendar_sign(day, month, year) abort$/;"	f
vimwiki#diary#diary_date_link	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#diary_date_link(...) abort$/;"	f
vimwiki#diary#generate_diary_section	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#generate_diary_section() abort$/;"	f
vimwiki#diary#get_diary_files	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#get_diary_files() abort$/;"	f
vimwiki#diary#goto_diary_index	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#goto_diary_index(wnum) abort$/;"	f
vimwiki#diary#goto_next_day	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#goto_next_day() abort$/;"	f
vimwiki#diary#goto_prev_day	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#goto_prev_day() abort$/;"	f
vimwiki#diary#make_note	plugged/vimwiki/autoload/vimwiki/diary.vim	/^function! vimwiki#diary#make_note(wnum, ...) abort$/;"	f
vimwiki#html#CatUrl	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#CatUrl(wikifile) abort$/;"	f
vimwiki#html#CustomWiki2HTML	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#CustomWiki2HTML(path, wikifile, force) abort$/;"	f
vimwiki#html#PasteUrl	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#PasteUrl(wikifile) abort$/;"	f
vimwiki#html#Wiki2HTML	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#Wiki2HTML(path_html, wikifile) abort$/;"	f
vimwiki#html#WikiAll2HTML	plugged/vimwiki/autoload/vimwiki/html.vim	/^function! vimwiki#html#WikiAll2HTML(path_html, force) abort$/;"	f
vimwiki#lst#TO_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#TO_list_item(inner, visual) abort$/;"	f
vimwiki#lst#adjust_numbered_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#adjust_numbered_list() abort$/;"	f
vimwiki#lst#adjust_whole_buffer	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#adjust_whole_buffer() abort$/;"	f
vimwiki#lst#change_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#change_level(from_line, to_line, direction, plus_children) abort$/;"	f
vimwiki#lst#change_marker	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#change_marker(from_line, to_line, new_mrkr, mode) abort$/;"	f
vimwiki#lst#change_marker_in_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#change_marker_in_list(new_mrkr) abort$/;"	f
vimwiki#lst#decrement_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#decrement_cb(from_line, to_line) abort$/;"	f
vimwiki#lst#default_symbol	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#default_symbol() abort$/;"	f
vimwiki#lst#fold_level	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#fold_level(lnum) abort$/;"	f
vimwiki#lst#get_list_margin	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#get_list_margin() abort$/;"	f
vimwiki#lst#increment_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#increment_cb(from_line, to_line) abort$/;"	f
vimwiki#lst#kbd_O	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#kbd_O() abort$/;"	f
vimwiki#lst#kbd_cr	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#kbd_cr(normal, just_mrkr) abort$/;"	f
vimwiki#lst#kbd_o	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#kbd_o() abort$/;"	f
vimwiki#lst#remove_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#remove_cb(first_line, last_line) abort$/;"	f
vimwiki#lst#remove_cb_in_list	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#remove_cb_in_list() abort$/;"	f
vimwiki#lst#toggle_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#toggle_cb(from_line, to_line) abort$/;"	f
vimwiki#lst#toggle_list_item	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#toggle_list_item() abort$/;"	f
vimwiki#lst#toggle_rejected_cb	plugged/vimwiki/autoload/vimwiki/lst.vim	/^function! vimwiki#lst#toggle_rejected_cb(from_line, to_line) abort$/;"	f
vimwiki#markdown_base#normalize_link	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! vimwiki#markdown_base#normalize_link(is_visual_mode) abort$/;"	f
vimwiki#markdown_base#open_reflink	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! vimwiki#markdown_base#open_reflink(link) abort$/;"	f
vimwiki#markdown_base#scan_reflinks	plugged/vimwiki/autoload/vimwiki/markdown_base.vim	/^function! vimwiki#markdown_base#scan_reflinks() abort$/;"	f
vimwiki#path#abs_path_of_link	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#abs_path_of_link(link) abort$/;"	f
vimwiki#path#chomp_slash	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#chomp_slash(str) abort$/;"	f
vimwiki#path#current_wiki_file	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#current_wiki_file() abort$/;"	f
vimwiki#path#is_absolute	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#is_absolute(path) abort$/;"	f
vimwiki#path#is_equal	plugged/vimwiki/autoload/vimwiki/path.vim	/^  function! vimwiki#path#is_equal(p1, p2) abort$/;"	f
vimwiki#path#is_link_to_dir	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#is_link_to_dir(link) abort$/;"	f
vimwiki#path#join_path	plugged/vimwiki/autoload/vimwiki/path.vim	/^  function! vimwiki#path#join_path(directory, file) abort$/;"	f
vimwiki#path#mkdir	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#mkdir(path, ...) abort$/;"	f
vimwiki#path#normalize	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#normalize(path) abort$/;"	f
vimwiki#path#path_common_pfx	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#path_common_pfx(path1, path2) abort$/;"	f
vimwiki#path#path_norm	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#path_norm(path) abort$/;"	f
vimwiki#path#relpath	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#relpath(dir, file) abort$/;"	f
vimwiki#path#wikify_path	plugged/vimwiki/autoload/vimwiki/path.vim	/^function! vimwiki#path#wikify_path(path) abort$/;"	f
vimwiki#tags#complete_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#complete_tags(ArgLead, CmdLine, CursorPos) abort$/;"	f
vimwiki#tags#generate_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#generate_tags(create, ...) abort$/;"	f
vimwiki#tags#get_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#get_tags() abort$/;"	f
vimwiki#tags#metadata_file_path	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#metadata_file_path() abort$/;"	f
vimwiki#tags#update_tags	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! vimwiki#tags#update_tags(full_rebuild, all_files) abort$/;"	f
vimwiki#tbl#align_or_cmd	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#align_or_cmd(cmd, ...) abort$/;"	f
vimwiki#tbl#cell_splitter	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#cell_splitter() abort$/;"	f
vimwiki#tbl#create	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#create(...) abort$/;"	f
vimwiki#tbl#format	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#format(lnum, ...) abort$/;"	f
vimwiki#tbl#get_cells	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#get_cells(line, ...) abort$/;"	f
vimwiki#tbl#get_rows	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#get_rows(lnum) abort$/;"	f
vimwiki#tbl#goto_next_col	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#goto_next_col() abort$/;"	f
vimwiki#tbl#goto_prev_col	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#goto_prev_col() abort$/;"	f
vimwiki#tbl#is_separator	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#is_separator(line) abort$/;"	f
vimwiki#tbl#is_table	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#is_table(line) abort$/;"	f
vimwiki#tbl#kbd_cr	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#kbd_cr() abort$/;"	f
vimwiki#tbl#kbd_shift_tab	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#kbd_shift_tab() abort$/;"	f
vimwiki#tbl#kbd_tab	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#kbd_tab() abort$/;"	f
vimwiki#tbl#move_column_left	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#move_column_left() abort$/;"	f
vimwiki#tbl#move_column_right	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#move_column_right() abort$/;"	f
vimwiki#tbl#reset_tw	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#reset_tw(lnum) abort$/;"	f
vimwiki#tbl#sep_splitter	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! vimwiki#tbl#sep_splitter() abort$/;"	f
vimwiki#u#count_exe	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#count_exe(cmd) abort$/;"	f
vimwiki#u#count_first_sym	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#count_first_sym(line) abort$/;"	f
vimwiki#u#cursor	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#cursor(lnum, cnum) abort$/;"	f
vimwiki#u#escape	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#escape(string) abort$/;"	f
vimwiki#u#ft_is_vw	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#ft_is_vw() abort$/;"	f
vimwiki#u#ft_set	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#ft_set() abort$/;"	f
vimwiki#u#is_codeblock	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#is_codeblock(lnum) abort$/;"	f
vimwiki#u#is_macos	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#is_macos() abort$/;"	f
vimwiki#u#is_windows	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#is_windows() abort$/;"	f
vimwiki#u#map_key	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#map_key(mode, key, plug, ...) abort$/;"	f
vimwiki#u#os_name	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#os_name() abort$/;"	f
vimwiki#u#reload_regexes	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#reload_regexes() abort$/;"	f
vimwiki#u#reload_regexes_custom	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#reload_regexes_custom() abort$/;"	f
vimwiki#u#sw	plugged/vimwiki/autoload/vimwiki/u.vim	/^  function! vimwiki#u#sw() abort$/;"	f
vimwiki#u#trim	plugged/vimwiki/autoload/vimwiki/u.vim	/^function! vimwiki#u#trim(string, ...) abort$/;"	f
vimwiki#vars#add_temporary_wiki	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#add_temporary_wiki(settings) abort$/;"	f
vimwiki#vars#get_bufferlocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_bufferlocal(key, ...) abort$/;"	f
vimwiki#vars#get_global	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_global(key) abort$/;"	f
vimwiki#vars#get_syntaxlocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_syntaxlocal(key, ...) abort$/;"	f
vimwiki#vars#get_wikilocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_wikilocal(key, ...) abort$/;"	f
vimwiki#vars#get_wikilocal_default	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#get_wikilocal_default(key) abort$/;"	f
vimwiki#vars#init	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#init() abort$/;"	f
vimwiki#vars#number_of_wikis	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#number_of_wikis() abort$/;"	f
vimwiki#vars#populate_syntax_vars	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#populate_syntax_vars(syntax) abort$/;"	f
vimwiki#vars#set_bufferlocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#set_bufferlocal(key, value, ...) abort$/;"	f
vimwiki#vars#set_wikilocal	plugged/vimwiki/autoload/vimwiki/vars.vim	/^function! vimwiki#vars#set_wikilocal(key, value, wiki_nr) abort$/;"	f
vimwiki_get_known_extensions	plugged/vimwiki/plugin/vimwiki.vim	/^function! s:vimwiki_get_known_extensions() abort$/;"	f
vimwiki_get_known_syntaxes	plugged/vimwiki/autoload/vimwiki/base.vim	/^function! s:vimwiki_get_known_syntaxes() abort$/;"	f
w!!	init.vim	/^cnoremap w!! execute 'silent! write !sudo tee % >\/dev\/null' <bar> edit!$/;"	m
warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
wide_len	plugged/vimwiki/autoload/vimwiki/tbl.vim	/^function! s:wide_len(str) abort$/;"	f
with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
wrap	plugged/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrap_accent	plugged/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
wrap_cmds	autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
wrap_wikilink1_rx	plugged/vimwiki/syntax/vimwiki_markdown_custom.vim	/^function! s:wrap_wikilink1_rx(target) abort$/;"	f
wrapreg	plugged/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
write_tags_metadata	plugged/vimwiki/autoload/vimwiki/tags.vim	/^function! s:write_tags_metadata(metadata) abort$/;"	f
ws_refresh	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
x	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        map x <Plug>(operator-clang-format)$/;"	m
xa{	plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        normal xa{$/;"	m
xmapping_wrapper	plugged/vimagit/autoload/magit/mapping.vim	/^function! s:xmapping_wrapper(mapping, function, ...) range$/;"	f
yS	plugged/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	plugged/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	plugged/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	plugged/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	plugged/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
